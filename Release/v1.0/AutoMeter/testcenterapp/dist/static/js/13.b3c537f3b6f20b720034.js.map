{"version":3,"sources":["webpack:///./src/api/executecenter/testscene.js","webpack:///src/views/executecenter/executeplan/index.vue","webpack:///./src/api/executecenter/testplantestscene.js","webpack:///./src/views/executecenter/executeplan/index.vue?1040","webpack:///./src/views/executecenter/executeplan/index.vue","webpack:///./src/api/assets/globalheaderuse.js"],"names":["testsceneForm","Object","__WEBPACK_IMPORTED_MODULE_0__utils_request__","url","method","data","apicasesForm","params","testsceneId","executecenter_executeplan","name","filters","statusFilter","status","published","draft","deleted","id","datevisible","timevisible","itemKey","itemplanKey","itemcaseKey","planbusinessdiclist","tmpexecuteplanname","tmpcasedeployunitname","tmpcaseapiname","tmpcaseexecuteplanid","tmpcasecasetype","show","PerformanceVisible","enviromentnameList","apiList","deployunitList","multipleSelection","casemultipleSelection","globalheaderallList","executeplanList","testcaseList","testcaselastList","executeplancaseList","executeplancaseexistList","executeplancaseremovetList","executeplanstopList","tmpplanbatchList","paramsList","addtestscenelastList","testplansceneList","testsceneList","addtestsceneList","apiconditioncaseList","apiconditionmodelList","apiconditionapiList","itemaddsceneKey","scenemultipleSelection","tmptestscenename","scenetotal","addscenetotal","testplanscenetotal","addsearchscene","page","size","casetype","searchscene","projectid","listLoading","caselistLoading","total","casetotal","apiQuery","deployunitname","listQuery","executeplanname","caselistQuery","apiname","executeplanid","ParamsdialogStatus","dialogStatus","dialogFormVisible","casedialogFormVisible","batchdialogFormVisible","CollectionParamsFormVisible","modifyparamdialogFormVisible","ConditionFormVisible","testscenedialogFormVisible","addtestscenedialogFormVisible","loadcase","loadbatch","textMap","updateRole","update","add","apiconditiontextMap","apiconditiondialogStatus","caseconditiondialogFormVisible","tmpapicondition","modelid","modelname","conditionid","subconditionname","conditionname","deployunitid","apiid","caseid","casename","memo","conditiontype","creator","paramstextMap","diclevelQuery","diccode","btnLoading","casebtnLoading","execbtnLoading","tmpexecuteplan","enviromentname","envid","usetype","businesstype","ip","dingdingtoken","runmode","tmpplanbatch","batchid","batchname","exectype","exectmpdate","execdate","exectime","tmpplanenv","tmpapicases","casejmxname","casecontent","expect","level","tmpparam","paramstype","keyname","keyvalue","globalheadername","globalheaderid","tmpep","search","searchcase","searchparam","searchapicondition","tmpexecplan","execplanid","execplanname","tmpexecplanforscene","testplanid","tmpdeleteexecplanscene","testscenenid","computed","extends_default","vuex_esm","created","this","window","localStorage","getItem","getexecuteplanList","getapiList","getdepunitList","getenviromentallList","getdatabydiccodeList","getglobalheaderallList","activated","methods","removetestplanscene","index","_this","$confirm","confirmButtonText","cancelButtonText","type","then","executeplanSceneId","request","$message","success","findscenebyexecplanid","catch","info","showUpdateapiconditionDialog","updateapicondition","_this2","$refs","validate","valid","apicondition","getapiconditionList","res","error","removecaseapicondition","_this3","apiconditiontestcaseselectChanged","e","i","length","apiconditionmodelselectChanged","_this4","api","response","apiconditionapiselectChanged","_this5","apicases","showtestplanConditionDialog","apiconditioncaseIndex","_this6","list","addapicondition","_this7","apiconditiondeployunitselectChanged","_this8","depunitmodel","cancelEdit","row","ordernum","oldcaseorder","edit","confirmEdit","executeplanForm","_this9","testplanForm","_this10","items","map","v","$set","addscenehandleClickTableRow","event","column","addscenehandleSelectionChange","rows","addscenehandleCurrentChange","gettestsceneList","planscenehandleCurrentChange","addscenegetIndex","_this11","scenename","testscene","addscenehandleSizeChange","planscenehandleSizeChange","_this12","dictionary","unix2CurrentTime","utils","_this13","globalheader","searchheaderbyepid","_this14","console","log","globalheaderuse","stopexecuteplanList","_this15","splice","_i","push","executeplan","savebatchandexecuteplancase","_this16","executeplancase","_this17","_i2","handleClickTableRow","handleSelectionChange","casehandleClickTableRow","casehandleSelectionChange","exectypeselectChanged","paramstypeselectChanged","_this18","tmpexecplanname","tmpbatchname","searchBy","_this19","Math","random","handleSizeChange","handleCurrentChange","getIndex","paramgetIndex","planscenegetIndex","enviromentselectChanged","selectChanged","_this20","_this21","_this22","testenviroment","_this23","depunit","getcaseList","_this24","apicasesList","searchcaseBy","searchtestplanexistcase","gettestcaselastList","_this25","asyncToGenerator_default","regenerator_default","a","mark","_callee","j","wrap","_context","prev","next","testcaseid","checkstats","stop","searchcaseBydepandapi","_this26","_callee2","_context2","_this27","executeplantestcase","$nextTick","caseTable","toggleRowSelection","casehandleSizeChange","casehandleCurrentChange","casegetIndex","showAddexecuteplanDialog","showplanparamsDialog","showtestsceneDialog","ShowAddScenceDialog","ShowAddPlancaseconditionDialog","showAddapiparamsDialog","showUpdateparamsDialog","showplanbatchDialog","_this28","addexecuteplan","_this29","addparams","_this30","updatparam","_this31","removeexecuteplanparam","_this32","showUpdateexecuteplanDialog","addplantestscene","sceneForm","_this33","planname","addexecuteplantestcase","_this34","removeexecuteplantestcase","_this35","findflag","showTestCaseDialog","updateexecuteplan","_this36","removeexecuteplan","_this37","isUniqueDetail","notexistheaderselectChanged","views_executecenter_executeplan","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","inline","hasPermission","icon","nativeOn","click","$event","preventDefault","_v","_e","label","clearable","placeholder","keyup","indexOf","_k","keyCode","key","model","value","callback","$$v","expression","_l","businessdicitem","dicitmevalue","loading","on","directives","rawName","modifiers","body","ref","element-loading-text","border","fit","highlight-current-row","row-click","selection-change","width","align","scopedSlots","_u","fn","scope","domProps","textContent","_s","$index","show-overflow-tooltip","prop","createTime","lastmodifyTime","current-page","page-size","page-sizes","layout","size-change","current-change","title","visible","update:visible","staticStyle","margin-left","status-icon","label-position","label-width","required","maxlength","prefix-icon","auto-complete","trim","change","display","envname","businesstypeselectChanged","dicitem","slot","depname","format","value-format","picker-options","start","step","end","filterable","depunitname","testcase","resetFields","oninput","maxLength","showtestscenecaseConditionDialog","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__","apicasesdebugForm","apicasesdebugId"],"mappings":"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","file":"static/js/13.b3c537f3b6f20b720034.js","sourcesContent":["import request from '@/utils/request'\n\nexport function gettestsceneList(params) {\n  return request({\n    url: '/testscene',\n    method: 'get',\n    params\n  })\n}\n\nexport function getstaticsplan(params) {\n  return request({\n    url: '/testscene/getstaticsplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function gettestscenenum(params) {\n  return request({\n    url: '/testscene/gettestscenenum',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplanbytype(params) {\n  return request({\n    url: '/testscene/getallexplanbytype',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplan(params) {\n  return request({\n    url: '/testscene/getallexplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function search(testsceneForm) {\n  return request({\n    url: '/testscene/search',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function addtestscene(testsceneForm) {\n  return request({\n    url: '/testscene',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function testscene(testsceneForm) {\n  return request({\n    url: '/testscene/execplancases',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function checkplancondition(testsceneForm) {\n  return request({\n    url: '/testscene/checkcondition',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function updatetestscene(testsceneForm) {\n  return request({\n    url: '/testscene/detail',\n    method: 'put',\n    data: testsceneForm\n  })\n}\n\nexport function copyscene(apicasesForm) {\n  return request({\n    url: '/testscene/copyscene',\n    method: 'post',\n    data: apicasesForm\n  })\n}\n\nexport function getsceneallList(params) {\n  return request({\n    url: '/testscene/scenes',\n    method: 'get',\n    params\n  })\n}\n\nexport function updatetestscenestatus(testsceneForm) {\n  return request({\n    url: '/testscene/updatestatus',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function removetestscene(testsceneId) {\n  return request({\n    url: '/testscene/' + testsceneId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/executecenter/testscene.js","<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-form :inline=\"true\">\n        <el-form-item>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            icon=\"el-icon-refresh\"\n            v-if=\"hasPermission('executeplan:list')\"\n            @click.native.prevent=\"getexecuteplanList\"\n          >刷新</el-button>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:list')\"\n            @click.native.prevent=\"showplanbatchDialog\"\n          >运行</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            icon=\"el-icon-plus\"\n            v-if=\"hasPermission('executeplan:add')\"\n            @click.native.prevent=\"showAddexecuteplanDialog\"\n          >添加测试集合</el-button>\n        </el-form-item>\n\n        <span v-if=\"hasPermission('executeplan:search')\">\n          <el-form-item label=\"测试集合:\">\n            <el-input v-model=\"search.executeplanname\" clearable @keyup.enter.native=\"searchBy\" placeholder=\"测试集合\"></el-input>\n          </el-form-item>\n\n          <el-form-item  label=\"业务类型:\">\n            <el-select v-model=\"search.businesstype\" clearable placeholder=\"业务类型\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(businessdicitem, index) in planbusinessdiclist\" :key=\"index\">\n                <el-option :label=\"businessdicitem.dicitmevalue\" :value=\"businessdicitem.dicitmevalue\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchBy\" :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n      </el-form>\n    </div>\n    <el-table\n      ref=\"fileTable\"\n      :data=\"executeplanList\"\n      :key=\"itemplanKey\"\n      @row-click=\"handleClickTableRow\"\n      @selection-change=\"handleSelectionChange\"\n      v-loading.body=\"listLoading\"\n      element-loading-text=\"loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column\n        type=\"selection\"\n        width=\"40\">\n      </el-table-column>\n      <el-table-column label=\"编号\" align=\"center\" width=\"50\">\n        <template slot-scope=\"scope\">\n          <span v-text=\"getIndex(scope.$index)\"></span>\n        </template>\n      </el-table-column>\n      <el-table-column :show-overflow-tooltip=\"true\"  label=\"集合名\" align=\"center\" prop=\"executeplanname\" width=\"100\"/>\n      <el-table-column label=\"envid\" align=\"center\" v-if=\"show\" prop=\"envid\" width=\"50\"/>\n      <el-table-column label=\"状态\" align=\"center\" prop=\"status\" v-if=\"show\" width=\"50\"/>\n      <el-table-column label=\"业务类型\" align=\"center\" prop=\"businesstype\" width=\"70\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"执行环境\" align=\"center\" prop=\"enviromentname\" width=\"80\"/>\n      <el-table-column label=\"类型\" align=\"center\" prop=\"usetype\" width=\"50\"/>\n      <el-table-column label=\"运行模式\" align=\"center\" prop=\"runmode\" width=\"70\"/>\n      <el-table-column label=\"用例数\" align=\"center\" prop=\"casecounts\" width=\"60\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"通知钉钉token\" align=\"center\" prop=\"dingdingtoken\" width=\"110\"/>\n      <el-table-column label=\"操作人\" align=\"center\" prop=\"creator\" width=\"60\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"描述\" align=\"center\" prop=\"memo\" width=\"80\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"110\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.createTime) }}</template>\n      </el-table-column>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"最后修改时间\" align=\"center\" prop=\"lastmodifyTime\" width=\"110\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.lastmodifyTime) }}\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"管理\" align=\"center\" width=\"450\"\n                       v-if=\"hasPermission('executeplan:update')  || hasPermission('executeplan:delete')\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"warning\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showUpdateexecuteplanDialog(scope.$index)\"\n          >修改</el-button>\n          <el-button\n            type=\"danger\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:delete') && scope.row.id !== id\"\n            @click.native.prevent=\"removeexecuteplan(scope.$index)\"\n          >删除</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showplanparamsDialog(scope.$index)\"\n          >全局Header</el-button>\n\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showtestsceneDialog(scope.$index)\"\n          >测试场景</el-button>\n\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showtestplanConditionDialog(scope.$index)\"\n          >前置条件</el-button>\n\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"search.page\"\n      :page-size=\"search.size\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20, 30, 40]\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n    ></el-pagination>\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 400px; margin-left:50px;\"\n        :model=\"tmpexecuteplan\"\n        ref=\"tmpexecuteplan\"\n      >\n        <el-form-item label=\"集合名\" prop=\"executeplanname\" required>\n          <el-input\n            type=\"text\"\n            maxlength=\"50\"\n            prefix-icon=\"el-icon-edit\"\n            auto-complete=\"off\"\n            v-model.trim=\"tmpexecuteplan.executeplanname\"\n          />\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"usetype\" required>\n          <el-select v-model=\"tmpexecuteplan.usetype\" placeholder=\"类型\" style=\"width:100%\">\n            <el-option label=\"功能\" value=\"功能\" />\n            <el-option label=\"性能\" value=\"性能\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"执行环境\" prop=\"enviromentname\"  required>\n          <el-select v-model=\"tmpexecuteplan.enviromentname\" placeholder=\"执行环境\" style=\"width:100%\" @change=\"enviromentselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(envname, index) in enviromentnameList\" :key=\"index\">\n              <el-option :label=\"envname.enviromentname\" :value=\"envname.enviromentname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"业务类型\" prop=\"businesstype\"  required>\n          <el-select v-model=\"tmpexecuteplan.businesstype\" placeholder=\"业务类型\" style=\"width:100%\" @change=\"businesstypeselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(dicitem, index) in planbusinessdiclist\" :key=\"index\">\n              <el-option :label=\"dicitem.dicitmevalue\" :value=\"dicitem.dicitmevalue\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n          <el-form-item label=\"运行模式\" prop=\"runmode\" required>\n            <el-select v-model=\"tmpexecuteplan.runmode\" placeholder=\"运行模式\" style=\"width:100%\">\n              <el-option label=\"单机运行\" value=\"单机运行\" />\n              <el-option label=\"多机并行\" value=\"多机并行\" />\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"钉钉通知token\" prop=\"dingdingtoken\">\n            <el-input\n              maxlength=\"200\"\n              type=\"text\"\n              prefix-icon=\"el-icon-message\"\n              auto-complete=\"off\"\n              v-model=\"tmpexecuteplan.dingdingtoken\"\n            />\n          </el-form-item>\n\n        <el-form-item label=\"备注\" prop=\"memo\">\n          <el-input\n            maxlength=\"200\"\n            type=\"text\"\n            prefix-icon=\"el-icon-message\"\n            auto-complete=\"off\"\n            v-model=\"tmpexecuteplan.memo\"\n          />\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"dialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addexecuteplan\"\n        >保存\n        </el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updateexecuteplan\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"loadcase\" :visible.sync=\"casedialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form :inline=\"true\" :model=\"searchcase\" ref=\"searchcase\" >\n          <span v-if=\"hasPermission('apicases:search')\">\n          <el-form-item label=\"微服务:\" prop=\"deployunitname\" required>\n            <el-select v-model=\"searchcase.deployunitname\" placeholder=\"微服务\" @change=\"selectChanged($event)\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(depname, index) in deployunitList\" :key=\"index\">\n                <el-option :label=\"depname.deployunitname\" :value=\"depname.deployunitname\" required/>\n              </div>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"API:\">\n            <el-select v-model=\"searchcase.apiname\" placeholder=\"api名\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(api, index) in apiList\" :key=\"index\">\n                <el-option :label=\"api.apiname\" :value=\"api.apiname\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchcaseBy\" :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n        </el-form>\n      </div>\n      <el-table\n        ref=\"caseTable\"\n        :data=\"testcaselastList\"\n        :key=\"itemcaseKey\"\n        @row-click=\"casehandleClickTableRow\"\n        @selection-change=\"casehandleSelectionChange\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"getIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n\n        <el-table-column type=\"selection\" prop=\"status\" width=\"50\"/>\n        <el-table-column label=\"apiid\" v-if=\"show\" align=\"center\" prop=\"apiid\" width=\"120\"/>\n        <el-table-column label=\"deployunitid\" v-if=\"show\" align=\"center\" prop=\"deployunitid\" width=\"120\"/>\n        <el-table-column label=\"用例名\" align=\"center\" prop=\"casename\" width=\"120\"/>\n        <el-table-column label=\"微服务\" align=\"center\" prop=\"deployunitname\" width=\"120\"/>\n        <el-table-column label=\"API\" align=\"center\" prop=\"apiname\" width=\"120\"/>\n        <el-table-column label=\"期望值\" align=\"center\" prop=\"expect\" width=\"120\"/>\n      </el-table>\n      <el-pagination\n        @size-change=\"casehandleSizeChange\"\n        @current-change=\"casehandleCurrentChange\"\n        :current-page=\"searchcase.page\"\n        :page-size=\"searchcase.size\"\n        :total=\"casetotal\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n      ></el-pagination>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"casedialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addexecuteplantestcase\"\n        >装载</el-button>\n        <el-button\n          type=\"warning\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"removeexecuteplantestcase\"\n        >取消装载</el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"loadbatch\" :visible.sync=\"batchdialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form  :model=\"tmpplanbatch\" ref=\"tmpplanbatch\" >\n          <el-form-item label=\"执行计划：\"  prop=\"batchname\" required>\n            <el-input\n              type=\"text\"\n              maxlength=\"50\"\n              style=\"width:60%\"\n              placeholder=\"例如2020-10-21-tag-101\"\n              prefix-icon=\"el-icon-edit\"\n              auto-complete=\"off\"\n              v-model.trim=\"tmpplanbatch.batchname\"\n            />\n          </el-form-item>\n          <el-form-item label=\"执行类型：\" prop=\"exectype\" required >\n            <el-select v-model=\"tmpplanbatch.exectype\" placeholder=\"执行类型\" style=\"width:60%\" @change=\"exectypeselectChanged($event)\">\n              <el-option label=\"立即执行\" value=\"立即执行\"></el-option>\n              <el-option label=\"某天定时\" value=\"某天定时\"></el-option>\n              <el-option label=\"每天定时\" value=\"每天定时\"></el-option>\n            </el-select>\n          </el-form-item>\n          <div v-if=\"datevisible\">\n            <el-form-item label=\"选择日期：\" prop=\"exectmpdate\" required >\n              <el-date-picker style=\"width:60%\"\n                              v-model=\"tmpplanbatch.exectmpdate\"\n                              type=\"date\"\n                              format=\"yyyy-MM-dd\"\n                              value-format=\"yyyy-MM-dd\"\n                              placeholder=\"选择日期\">\n              </el-date-picker>\n            </el-form-item>\n          </div>\n          <div v-if=\"timevisible\">\n            <el-form-item label=\"选择时刻：\" prop=\"exectime\" required >\n              <el-time-select style=\"width:60%\"\n                              v-model=\"tmpplanbatch.exectime\"\n                              :picker-options=\"{\n              start: '00:05',\n              step: '00:10',\n              end: '23:55'\n            }\"\n                              placeholder=\"选择时间\">\n              </el-time-select>\n            </el-form-item>\n          </div>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"batchdialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          :loading=\"execbtnLoading\"\n          @click.native.prevent=\"savebatchandexecuteplancase\"\n        >执行</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"全局Header\" :visible.sync=\"CollectionParamsFormVisible\">\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\">\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              v-if=\"hasPermission('executeplan:add')\"\n              @click.native.prevent=\"showAddapiparamsDialog\"\n            >添加全局Header</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <el-table\n        :data=\"paramsList\"\n        :key=\"itemKey\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"45\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"paramgetIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Header\" align=\"center\" prop=\"globalheadername\" width=\"280\"/>\n        <el-table-column label=\"管理\" align=\"center\"\n                         v-if=\"hasPermission('executeplan:update')  || hasPermission('executeplan:delete')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"warning\"\n              size=\"mini\"\n              v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n              @click.native.prevent=\"showUpdateparamsDialog(scope.$index)\"\n            >修改</el-button>\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('executeplan:delete') && scope.row.id !== id\"\n              @click.native.prevent=\"removeexecuteplanparam(scope.$index)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n\n    <el-dialog title=\"集合前置条件\" :visible.sync=\"ConditionFormVisible\">\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\">\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              v-if=\"hasPermission('testscene:scenecasecondition')\"\n              @click.native.prevent=\"ShowAddPlancaseconditionDialog\"\n            >添加前置接口</el-button>\n            <!--            <el-button-->\n            <!--              type=\"primary\"-->\n            <!--              size=\"mini\"-->\n            <!--              icon=\"el-icon-plus\"-->\n            <!--              v-if=\"hasPermission('testscene:scenecasecondition')\"-->\n            <!--              @click.native.prevent=\"AddcasedbconditionDialog\"-->\n            <!--            >添加前置数据库</el-button>-->\n            <!--            <el-button-->\n            <!--              type=\"primary\"-->\n            <!--              size=\"mini\"-->\n            <!--              icon=\"el-icon-plus\"-->\n            <!--              v-if=\"hasPermission('testscene:scenecasecondition')\"-->\n            <!--              @click.native.prevent=\"showAddapiparamsDialog\"-->\n            <!--            >添加前置脚本</el-button>-->\n\n            <!--            <el-button-->\n            <!--              type=\"primary\"-->\n            <!--              size=\"mini\"-->\n            <!--              icon=\"el-icon-plus\"-->\n            <!--              v-if=\"hasPermission('testscene:scenecasecondition')\"-->\n            <!--              @click.native.prevent=\"showAddapiparamsDialog\"-->\n            <!--            >添加前置延时</el-button>-->\n          </el-form-item>\n        </el-form>\n      </div>\n      <!--      1.接口前置条件：-->\n      <el-table\n        :data=\"apiconditioncaseList\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"45\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"apiconditioncaseIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"前置条件名\" align=\"center\" prop=\"subconditionname\" width=\"150\"/>\n        <el-table-column label=\"前置接口\" align=\"center\" prop=\"casename\" width=\"150\"/>\n        <el-table-column label=\"所属集合\" align=\"center\" prop=\"conditionname\" width=\"150\"/>\n\n        <el-table-column label=\"管理\" align=\"center\"\n                         v-if=\"hasPermission('testscene:caseupdateapicondition')  || hasPermission('testscene:casedeleteapicondition')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"warning\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:caseupdateapicondition') && scope.row.id !== id\"\n              @click.native.prevent=\"showUpdateapiconditionDialog(scope.$index)\"\n            >修改</el-button>\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:casedeleteapicondition') && scope.row.id !== id\"\n              @click.native.prevent=\"removecaseapicondition(scope.$index)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n\n    <el-dialog :title=\"apiconditiontextMap[apiconditiondialogStatus]\" :visible.sync=\"caseconditiondialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 450px; margin-left:50px;\"\n        :model=\"tmpapicondition\"\n        ref=\"tmpapicondition\"\n      >\n\n        <el-form-item label=\"前置条件名\" prop=\"subconditionname\" required>\n          <el-input\n            type=\"text\"\n            maxlength=\"30\"\n            prefix-icon=\"el-icon-edit\"\n            auto-complete=\"off\"\n            v-model=\"tmpapicondition.subconditionname\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"微服务\" prop=\"deployunitname\" required >\n          <el-select v-model=\"tmpapicondition.deployunitname\" filterable placeholder=\"微服务\" style=\"width:100%\" @change=\"apiconditiondeployunitselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(depunitname, index) in deployunitList\" :key=\"index\">\n              <el-option :label=\"depunitname.deployunitname\" :value=\"depunitname.deployunitname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item  label=\"模块:\" prop=\"modelname\" >\n          <el-select v-model=\"tmpapicondition.modelname\" filterable placeholder=\"模块\" style=\"width:100%\" @change=\"apiconditionmodelselectChanged($event)\">\n            <el-option label=\"请选择\" value />\n            <div v-for=\"(model, index) in apiconditionmodelList\" :key=\"index\">\n              <el-option :label=\"model.modelname\" :value=\"model.modelname\" />\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"API\" prop=\"apiname\" required >\n          <el-select v-model=\"tmpapicondition.apiname\" filterable placeholder=\"API\" style=\"width:100%\" @change=\"apiconditionapiselectChanged($event)\">\n            <el-option label=\"请选择\" value />\n            <div v-for=\"(api, index) in apiconditionapiList\" :key=\"index\">\n              <el-option :label=\"api.apiname\" :value=\"api.apiname\"/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"接口\" prop=\"casename\" required >\n          <el-select v-model=\"tmpapicondition.casename\" filterable placeholder=\"接口\" style=\"width:100%\" @change=\"apiconditiontestcaseselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(testcase, index) in apiconditioncaseList\" :key=\"index\">\n              <el-option :label=\"testcase.casename\" :value=\"testcase.casename\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"caseconditiondialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"danger\"\n          v-if=\"apiconditiondialogStatus === 'add'\"\n          @click.native.prevent=\"$refs['tmpapicondition'].resetFields()\"\n        >重置</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"apiconditiondialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addapicondition\"\n        >添加</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"apiconditiondialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updateapicondition\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n\n\n    <el-dialog :title=\"paramstextMap[ParamsdialogStatus]\" :visible.sync=\"modifyparamdialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 600px; margin-left:30px;\"\n        :model=\"tmpparam\"\n        ref=\"tmpparam\"\n      >\n        <el-form-item label=\"全局Header:\"  prop=\"globalheadername\" required >\n          <el-select style=\"width:415px\" v-model=\"tmpparam.globalheadername\" placeholder=\"全局Header\" @change=\"notexistheaderselectChanged($event)\">\n            <div v-for=\"(globalheader, index) in globalheaderallList\" :key=\"index\">\n              <el-option :label=\"globalheader.globalheadername\" :value=\"globalheader.globalheadername\" />\n            </div>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"modifyparamdialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"ParamsdialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addparams\"\n        >添加</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"ParamsdialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updatparam\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog width=\"840px\" title='测试场景' :visible.sync=\"testscenedialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form :inline=\"true\"  >\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"ShowAddScenceDialog\" :loading=\"btnLoading\">添加场景</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n      <el-table\n        ref=\"testplansceneTable\"\n        :data=\"testplansceneList\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"planscenegetIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"场景名\" align=\"center\" prop=\"scenename\" width=\"280\"/>\n        <el-table-column width=\"120\" align=\"center\" label=\"场景顺序\">\n          <template slot-scope=\"{row}\">\n            <template v-if=\"row.edit\">\n              <el-input v-model=\"row.ordernum\" class=\"edit-input\"\n                        oninput=\"value=value.replace(/[^\\d]/g,'')\"\n                        maxLength='10'\n                        size=\"small\" />\n              <el-button\n                class=\"cancel-btn\"\n                size=\"small\"\n                icon=\"el-icon-refresh\"\n                type=\"warning\"\n                @click=\"cancelEdit(row)\"\n              >\n                取消\n              </el-button>\n            </template>\n            <span v-else>{{ row.ordernum }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"操作\" width=\"120\">\n          <template slot-scope=\"{row}\">\n            <el-button\n              v-if=\"row.edit\"\n              type=\"success\"\n              size=\"small\"\n              icon=\"el-icon-circle-check-outline\"\n              @click=\"confirmEdit(row)\"\n            >\n              保存\n            </el-button>\n            <el-button\n              v-else\n              type=\"primary\"\n              size=\"small\"\n              @click=\"row.edit=!row.edit\"\n            >\n              设置顺序\n            </el-button>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"管理\" align=\"center\" width=\"220\"\n                         v-if=\"hasPermission('testscene:deletecase')  || hasPermission('testscene:scenecondition')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:deletecase') && scope.row.id !== id\"\n              @click.native.prevent=\"removetestplanscene(scope.$index)\"\n            >删除</el-button>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:scenecondition') && scope.row.id !== id\"\n              @click.native.prevent=\"showtestscenecaseConditionDialog(scope.$index)\"\n            >前置条件</el-button>\n          </template>\n        </el-table-column>\n\n\n      </el-table>\n      <el-pagination\n        @size-change=\"planscenehandleSizeChange\"\n        @current-change=\"planscenehandleCurrentChange\"\n        :current-page=\"searchscene.page\"\n        :page-size=\"searchscene.size\"\n        :total=\"testplanscenetotal\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n      ></el-pagination>\n    </el-dialog>\n\n    <el-dialog width=\"800px\" title='添加场景' :visible.sync=\"addtestscenedialogFormVisible\">\n      <el-table\n        ref=\"addsceneTable\"\n        :data=\"testsceneList\"\n        :key=\"itemaddsceneKey\"\n        @row-click=\"addscenehandleClickTableRow\"\n        @selection-change=\"addscenehandleSelectionChange\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"addscenegetIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n\n        <el-table-column type=\"selection\" prop=\"status\" width=\"50\"/>\n        <el-table-column label=\"场景名\" align=\"center\" prop=\"scenename\" width=\"370\"/>\n        <el-table-column label=\"场景类型\" align=\"center\" prop=\"usetype\" width=\"280\"/>\n      </el-table>\n      <el-pagination\n        @size-change=\"addscenehandleSizeChange\"\n        @current-change=\"addscenehandleCurrentChange\"\n        :current-page=\"addsearchscene.page\"\n        :page-size=\"addsearchscene.size\"\n        :total=\"addscenetotal\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n      ></el-pagination>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"addtestscenedialogFormVisible = false\">取消</el-button>\n\n        <el-button\n          type=\"primary\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addplantestscene\"\n        >添加</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n<script>\n  import {\n    getapicasesList as getapicasesList,\n    search as getapicases\n  } from '@/api/assets/apicases'\n  import { search as getapiList } from '@/api/deployunit/api'\n  import { getdepunitLists } from '@/api/deployunit/depunit'\n  // import { addexecuteplanbatch as addexecuteplanbatch } from '@/api/executecenter/executeplanbatch'\n  import { searchcases as searchtestplancases, addexecuteplantestcase, removeexecuteplantestcase } from '@/api/executecenter/executeplantestcase'\n  import { checkplancondition as checkplancondition, search, addexecuteplan, updateexecuteplan, removeexecuteplan, executeplan, updateexecuteplanstatus } from '@/api/executecenter/executeplan'\n  import { unix2CurrentTime } from '@/utils'\n  import { getenviromentallList as getenviromentallList } from '@/api/enviroment/testenviroment'\n  import { getdatabydiccodeList as getdatabydiccodeList } from '@/api/system/dictionary'\n  import { getglobalheaderallList } from '@/api/testvariables/globalheader'\n  import { mapGetters } from 'vuex'\n  import { search as searchscence } from '@/api/executecenter/testscene'\n  import { addapicasesdebug, removeapicasesdebug, updateapicasesdebug, searchheaderbyepid } from '@/api/assets/globalheaderuse'\n  import { addtestplantestscene, findscenebyexecplanid, updateplanscenenorder } from '@/api/executecenter/testplantestscene'\n  import { getapiListbydeploy as getapiListbydeploy } from '@/api/deployunit/api'\n  import { searchdeployunitmodel } from '@/api/deployunit/depunitmodel'\n  import { search as searchapicondition, addapicondition, removeapicondition, updateapicondition } from '@/api/condition/apicondition'\n  import { findcasesbyname as findcasesbyname } from '@/api/assets/apicases'\n  import { removetestplanscene } from '@/api/executecenter/testplantestscene'\n\n  export default {\n    name: '测试集合',\n    filters: {\n      statusFilter(status) {\n        const statusMap = {\n          published: 'success',\n          draft: 'gray',\n          deleted: 'danger'\n        }\n        return statusMap[status]\n      }\n    },\n    data() {\n      return {\n        id: null,\n        datevisible: false,\n        timevisible: false,\n        itemKey: null,\n        itemplanKey: null,\n        itemcaseKey: null,\n        planbusinessdiclist: [], // 执行计划字典表业务类型列表\n        tmpexecuteplanname: '',\n        tmpcasedeployunitname: null,\n        tmpcaseapiname: null,\n        tmpcaseexecuteplanid: null,\n        tmpcasecasetype: null,\n        show: false,\n        PerformanceVisible: false, // 显示性能运行模式\n        enviromentnameList: [], // 环境列表\n        apiList: [], // api列表\n        deployunitList: [], // 微服务列表\n        multipleSelection: [], // 执行计划表格被选中的内容\n        casemultipleSelection: [], // 用例表格被选中的内容\n        globalheaderallList: [], // 全局header列表\n        executeplanList: [], // 执行计划列表\n        testcaseList: [], // 用例列表\n        testcaselastList: [], // 经过用例列表和已装载的用例组合出的结果列表\n        executeplancaseList: [], // 执行计划装载用例列表\n        executeplancaseexistList: [], // 查询执行计划已存在的用例列表\n        executeplancaseremovetList: [], // 查询执行计划需要删除存在的用例列表\n        executeplanstopList: [], // 停止执行计划列表\n        tmpplanbatchList: [], // 计划批次列表\n        paramsList: [], // 参数列表\n        addtestscenelastList: [],\n        testplansceneList: [],\n        testsceneList: [], // 列表\n        addtestsceneList: [], // 列表\n        apiconditioncaseList: [], // 列表\n        apiconditionmodelList: [],\n        apiconditionapiList: [],\n        itemaddsceneKey: null,\n        scenemultipleSelection: [], // 查询用例表格被选中的内容\n        tmptestscenename: null,\n        scenetotal: 0,\n        addscenetotal: 0,\n        testplanscenetotal: 0,\n        addsearchscene: {\n          page: 1,\n          size: 10,\n          casetype: null\n        },\n        searchscene: {\n          page: 1,\n          size: 10,\n          projectid: ''\n        },\n        listLoading: false, // 数据加载等待动画\n        caselistLoading: false, // 用例列表页面数据加载等待动画\n        total: 0, // 数据总数\n        casetotal: 0, // 用例数据总数\n        apiQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          deployunitname: '' // 获取字典表入参\n        },\n        listQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          executeplanname: '',\n          projectid: ''\n        },\n        caselistQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          deployunitname: null,\n          apiname: null,\n          executeplanid: null,\n          casetype: null\n        },\n        ParamsdialogStatus: 'add',\n        dialogStatus: 'add',\n        dialogFormVisible: false,\n        casedialogFormVisible: false,\n        batchdialogFormVisible: false,\n        CollectionParamsFormVisible: false,\n        modifyparamdialogFormVisible: false,\n        ConditionFormVisible: false,\n        testscenedialogFormVisible: false,\n        addtestscenedialogFormVisible: false,\n        loadcase: '装载用例',\n        loadbatch: '执行计划',\n        textMap: {\n          updateRole: '修改测试集合',\n          update: '修改测试集合',\n          add: '添加测试集合'\n        },\n        apiconditiontextMap: {\n          update: '修改前置接口',\n          add: '添加前置接口'\n        },\n        apiconditiondialogStatus: 'add',\n        caseconditiondialogFormVisible: false,\n        tmpapicondition: {\n          page: 1,\n          size: 10,\n          id: '',\n          modelid: 0,\n          modelname: '',\n          conditionid: '',\n          subconditionname: '',\n          conditionname: '',\n          deployunitid: '',\n          deployunitname: '',\n          apiname: '',\n          apiid: '',\n          caseid: '',\n          casename: '',\n          memo: '',\n          conditiontype: '',\n          creator: '',\n          projectid: ''\n        },\n        paramstextMap: {\n          updateRole: '修改参数',\n          update: '修改参数',\n          add: '添加参数'\n        },\n        diclevelQuery: {\n          page: 1, // 页码\n          size: 100, // 每页数量\n          diccode: 'planbusinesstype' // 获取字典表入参\n        },\n        btnLoading: false, // 按钮等待动画\n        casebtnLoading: false, // 按钮等待动画\n        execbtnLoading: false, // 按钮等待动画\n        tmpexecuteplan: {\n          id: '',\n          executeplanname: '',\n          enviromentname: '',\n          envid: '',\n          status: '',\n          usetype: '',\n          businesstype: '',\n          ip: '',\n          memo: '',\n          creator: '',\n          dingdingtoken: '',\n          runmode: '',\n          projectid: ''\n        },\n        tmpplanbatch: {\n          executeplanid: '',\n          executeplanname: '',\n          batchid: '',\n          batchname: '',\n          creator: '',\n          exectype: '',\n          exectmpdate: '',\n          execdate: '',\n          exectime: '',\n          projectid: ''\n        },\n        tmpplanenv: {\n          id: '',\n          envid: '',\n          projectid: '',\n          enviromentname: ''\n        },\n        tmpapicases: {\n          id: '',\n          casename: '',\n          deployunitname: '',\n          apiname: '',\n          casejmxname: '',\n          casecontent: '',\n          expect: '',\n          level: '',\n          memo: '',\n          creator: 'admin'\n        },\n        tmpparam: {\n          id: '',\n          executeplanid: '',\n          paramstype: '',\n          keyname: '',\n          keyvalue: '',\n          globalheadername: '',\n          globalheaderid: 0\n        },\n        tmpep: {\n          executeplanid: ''\n        },\n        search: {\n          page: 1,\n          size: 10,\n          executeplanname: null,\n          businesstype: '',\n          projectid: ''\n        },\n        searchcase: {\n          page: 1,\n          size: 10,\n          deployunitname: null,\n          apiname: null,\n          executeplanid: null,\n          casetype: null,\n          projectid: ''\n        },\n        searchparam: {\n          page: 1,\n          size: 10\n        },\n        searchapicondition: {\n          page: 1,\n          size: 10,\n          conditionid: '',\n          conditiontype: '',\n          projectid: ''\n        },\n        tmpexecplan: {\n          execplanid: 0,\n          execplanname: null\n        },\n        tmpexecplanforscene: {\n          page: 1,\n          size: 10,\n          testplanid: 0\n        },\n        tmpdeleteexecplanscene: {\n          page: 1,\n          size: 10,\n          testplanid: 0,\n          testscenenid: 0\n        }\n      }\n    },\n\n    computed: {\n      ...mapGetters(['name', 'sidebar', 'projectlist', 'projectid'])\n    },\n\n    created() {\n      this.search.projectid = window.localStorage.getItem('pid')\n      this.tmpplanbatch.projectid = window.localStorage.getItem('pid')\n      this.tmpplanenv.projectid = window.localStorage.getItem('pid')\n      this.listQuery.projectid = window.localStorage.getItem('pid')\n      this.getexecuteplanList()\n      this.getapiList()\n      this.getdepunitList()\n      this.getenviromentallList()\n      this.getdatabydiccodeList()\n      this.getglobalheaderallList()\n    },\n\n    activated() {\n      this.getapiList()\n      this.getdepunitList()\n      this.getenviromentallList()\n      this.getdatabydiccodeList()\n      this.getglobalheaderallList()\n    },\n\n    methods: {\n      /**\n       * 删除测试场景\n       * @param index 测试场景下标\n       */\n      removetestplanscene(index) {\n        this.$confirm('删除该测试场景？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.testplansceneList[index].id\n          removetestplanscene(id).then(() => {\n            this.$message.success('删除成功')\n            this.findscenebyexecplanid()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n      showUpdateapiconditionDialog(index) {\n        this.caseconditiondialogFormVisible = true\n        this.apiconditiondialogStatus = 'update'\n        this.tmpapicondition.id = this.apiconditioncaseList[index].id\n        this.tmpapicondition.subconditionname = this.apiconditioncaseList[index].subconditionname\n        this.tmpapicondition.deployunitname = this.apiconditioncaseList[index].deployunitname\n        this.tmpapicondition.apiname = this.apiconditioncaseList[index].apiname\n        this.tmpapicondition.casename = this.apiconditioncaseList[index].casename\n        this.tmpapicondition.modelname = this.apiconditioncaseList[index].modelname\n        this.tmpapicondition.memo = this.apiconditioncaseList[index].memo\n        this.tmpapicondition.creator = this.name\n        this.tmpapicondition.projectid = window.localStorage.getItem('pid')\n      },\n\n      updateapicondition() {\n        this.$refs.tmpapicondition.validate(valid => {\n          if (valid) {\n            updateapicondition(this.tmpapicondition).then(() => {\n              this.$message.success('更新成功')\n              this.getapiconditionList()\n              this.caseconditiondialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n            })\n          }\n        })\n      },\n\n      removecaseapicondition(index) {\n        this.$confirm('删除该前置条件？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.apiconditioncaseList[index].id\n          removeapicondition(id).then(() => {\n            this.$message.success('删除成功')\n            this.getapiconditionList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      apiconditiontestcaseselectChanged(e) {\n        for (let i = 0; i < this.apiconditioncaseList.length; i++) {\n          if (this.apiconditioncaseList[i].casename === e) {\n            this.tmpapicondition.caseid = this.apiconditioncaseList[i].id\n          }\n        }\n      },\n\n      apiconditionmodelselectChanged(e) {\n        this.tmpapicondition.apiname = null\n        this.tmpapicondition.casename = null\n        for (let i = 0; i < this.apiconditionmodelList.length; i++) {\n          if (this.apiconditionmodelList[i].modelname === e) {\n            this.tmpapicondition.modelid = this.apiconditionmodelList[i].id\n          }\n        }\n        if (e === '') {\n          this.tmpapicondition.modelid = 0\n          this.tmpapicondition.modelname = ''\n        }\n        getapiListbydeploy(this.tmpapicondition).then(response => {\n          this.apiconditionapiList = response.data\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      apiconditionapiselectChanged(e) {\n        this.tmpapicondition.casename = null\n        for (let i = 0; i < this.apiconditionapiList.length; i++) {\n          if (this.apiconditionapiList[i].apiname === e) {\n            this.tmpapicondition.apiid = this.apiconditionapiList[i].id\n          }\n        }\n        findcasesbyname(this.tmpapicondition).then(response => {\n          this.apiconditioncaseList = response.data\n        }).catch(res => {\n          this.$message.error('加载apicase列表失败')\n        })\n      },\n\n      showtestplanConditionDialog(index) {\n        this.ConditionFormVisible = true\n        this.searchapicondition.conditiontype = 'execplan'\n        this.searchapicondition.conditionid = this.executeplanList[index].id\n        this.tmpapicondition.conditionid = this.executeplanList[index].id\n        this.tmpapicondition.conditionname = this.executeplanList[index].executeplanname\n        this.tmpapicondition.conditiontype = 'execplan'\n        this.getapiconditionList()\n      },\n\n      apiconditioncaseIndex(index) {\n        return (this.searchapicondition.page - 1) * this.searchapicondition.size + index + 1\n      },\n\n      getapiconditionList() {\n        searchapicondition(this.searchapicondition).then(response => {\n          this.apiconditioncaseList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载测试接口条件列表失败')\n        })\n      },\n\n      addapicondition() {\n        this.$refs.tmpapicondition.validate(valid => {\n          if (valid) {\n            addapicondition(this.tmpapicondition).then(() => {\n              this.$message.success('添加成功')\n              this.caseconditiondialogFormVisible = false\n              this.getapiconditionList()\n            }).catch(res => {\n              this.$message.error('添加失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n\n      apiconditiondeployunitselectChanged(e) {\n        this.tmpapicondition.casename = null\n        this.tmpapicondition.apiname = null\n        this.tmpapicondition.modelname = null\n        for (let i = 0; i < this.deployunitList.length; i++) {\n          if (this.deployunitList[i].deployunitname === e) {\n            this.tmpapicondition.deployunitid = this.deployunitList[i].id\n          }\n        }\n        searchdeployunitmodel(this.tmpapicondition).then(response => {\n          this.apiconditionmodelList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载服务模块列表失败')\n        })\n        this.apiconditionapiList = null\n        getapiListbydeploy(this.tmpapicondition).then(response => {\n          this.apiconditionapiList = response.data\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      cancelEdit(row) {\n        row.ordernum = row.oldcaseorder\n        row.edit = false\n        // this.$message({\n        //   message: 'The title has been restored to the original value',\n        //   type: 'warning'\n        // })\n      },\n      confirmEdit(row) {\n        row.edit = false\n        updateplanscenenorder(row).then(response => {\n          row.oldcaseorder = row.ordernum\n          this.$message.success('修改顺序成功')\n        }).catch(res => {\n          row.ordernum = row.oldcaseorder\n          this.$message.error('修改顺序失败')\n        })\n        // console.log(22222222222222222)\n        // console.log(row)\n        // this.$message({\n        //   message: 'The title has been edited',\n        //   type: 'success'\n        // })\n      },\n\n      findscenebyexecplanid() {\n        findscenebyexecplanid(this.tmpexecplanforscene).then(response => {\n          this.testplansceneList = response.data.list\n          const items = response.data.list\n          this.testplansceneList = items.map(v => {\n            this.$set(v, 'edit', false) // https://vuejs.org/v2/guide/reactivity.html\n            v.oldcaseorder = v.ordernum //  will be used when user click the cancel botton\n            return v\n          })\n          this.testplanscenetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载场景用例列表失败')\n        })\n      },\n\n      addscenehandleClickTableRow(row, event, column) {\n      },\n      addscenehandleSelectionChange(rows) {\n        this.scenemultipleSelection = rows\n      },\n\n      addscenehandleCurrentChange(page) {\n        this.addsearchscene.page = page\n        this.gettestsceneList()\n      },\n\n      planscenehandleCurrentChange(page) {\n        this.searchscene.page = page\n        this.findscenebyexecplanid()\n      },\n\n      addscenegetIndex(index) {\n        return (this.addsearchscene.page - 1) * this.addsearchscene.size + index + 1\n      },\n\n      gettestsceneList() {\n        this.addsearchscene.scenename = this.tmptestscenename\n        searchscence(this.addsearchscene).then(response => {\n          this.testsceneList = response.data.list\n          this.addscenetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载场景列表失败')\n        })\n      },\n\n      addscenehandleSizeChange(size) {\n        this.addsearchscene.page = 1\n        this.addsearchscene.size = size\n        this.gettestsceneList()\n      },\n\n      planscenehandleSizeChange(size) {\n        this.searchscene.page = 1\n        this.searchscene.size = size\n        this.findscenebyexecplanid()\n      },\n      /**\n       * 获取组件名字典列表\n       */\n      getdatabydiccodeList() {\n        getdatabydiccodeList(this.diclevelQuery).then(response => {\n          this.planbusinessdiclist = response.data.list\n        }).catch(res => {\n          this.$message.error('加载组件名字典列表失败')\n        })\n      },\n\n      unix2CurrentTime,\n\n      getglobalheaderallList() {\n        getglobalheaderallList(this.search).then(response => {\n          this.globalheaderallList = response.data\n        }).catch(res => {\n          this.$message.error('加载全局Header列表失败')\n        })\n      },\n\n      /**\n       * 获取header列表\n       */\n      searchheaderbyepid() {\n        console.log(this.tmpep)\n        searchheaderbyepid(this.tmpep).then(response => {\n          this.paramsList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载header列表失败')\n        })\n      },\n      /**\n       * 停止执行计划\n       */\n      stopexecuteplanList() {\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 'waiting' || this.multipleSelection[i].status === 'new' || this.multipleSelection[i].status === 'finish' || this.multipleSelection[i].status === 'stop') {\n            this.multipleSelection.splice(i)\n          }\n        }\n        if (this.multipleSelection.length === 0) {\n          this.$message.error('未选择执行计划,或者只有运行中才可以停止')\n        } else {\n          for (let i = 0; i < this.multipleSelection.length; i++) {\n            this.executeplanstopList.push({\n              'id': this.multipleSelection[i].id,\n              'status': 'stop'\n            })\n          }\n          updateexecuteplanstatus(this.executeplanstopList).then(() => {\n            this.$message.success('已停止执行计划')\n            this.btnLoading = false\n          }).catch(res => {\n            this.$message.error('停止计划执行失败')\n            this.btnLoading = false\n          })\n        }\n        this.getexecuteplanList()\n      },\n      /**\n       * 添加执行计划批次\n       */\n      savebatchandexecuteplancase() {\n        this.$refs.tmpplanbatch.validate(valid => {\n          if (valid) {\n            if (this.multipleSelection.length === 0) {\n              this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n              return\n            }\n            if (this.multipleSelection.length > 1) {\n              this.$message.error('不支持多执行计划一起提交，单个提交')\n              return\n            }\n            this.tmpplanbatch.executeplanname = this.multipleSelection[0].executeplanname\n            this.tmpplanbatch.execdate = this.tmpplanbatch.exectmpdate + ' ' + this.tmpplanbatch.exectime + ':00'\n            if (this.tmpplanbatch.execdate === ':00') {\n              this.tmpplanbatch.execdate = '/'\n            }\n            if (this.tmpplanbatch.exectmpdate === '') {\n              this.tmpplanbatch.execdate = this.tmpplanbatch.exectime + ':00'\n            }\n            this.executeplancase()\n            this.batchdialogFormVisible = false\n            // addexecuteplanbatch(this.tmpplanbatch).then(() => {\n            //   this.executeplancase()\n            //   this.batchdialogFormVisible = false\n            // }).catch(res => {\n            //   this.$message.error('计划执行失败')\n            // })\n          }\n        })\n      },\n      /**\n       * 添加执行计划批次并且执行计划用例\n       */\n      // savebatchandexecuteplancase() {\n      // this.addexecuteplanbatch()\n      // this.executeplancase()\n      // this.batchdialogFormVisible = false\n      // },\n      /**\n       * 执行执行计划\n       */\n      executeplancase() {\n        this.tmpplanbatchList = []\n        this.$refs.tmpplanbatch.validate(valid => {\n          if (valid) {\n            for (let i = 0; i < this.multipleSelection.length; i++) {\n              if (this.multipleSelection[i].status === 'running') {\n                this.multipleSelection.splice(i)\n              }\n            }\n            if (this.multipleSelection.length === 0) {\n              this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n            } else {\n              if (this.multipleSelection.length > 1) {\n                this.$message.error('不支持多执行计划一起提交，单个提交')\n              } else {\n                for (let i = 0; i < this.multipleSelection.length; i++) {\n                  this.tmpplanbatchList.push({\n                    // 'planid': this.multipleSelection[0].id,\n                    // 'planname': this.multipleSelection[0].execplanname,\n                    // 'batchname': this.tmpplanbatch.batchname\n                    'executeplanname': this.tmpplanbatch.executeplanname,\n                    'batchname': this.tmpplanbatch.batchname,\n                    'exectype': this.tmpplanbatch.exectype,\n                    'execdate': this.tmpplanbatch.execdate,\n                    'creator': this.name,\n                    'projectid': this.tmpplanbatch.projectid,\n                    'exectime': this.tmpplanbatch.exectime,\n                    'executeplanid': this.tmpplanbatch.executeplanid,\n                    'exectmpdate': this.tmpplanbatch.exectmpdate\n                  })\n                }\n                executeplan(this.tmpplanbatchList).then(() => {\n                  this.$message.success('测试集合已经提交，即将开始执行')\n                }).catch(res => {\n                  this.$message.error('执行测试集合失败')\n                })\n              }\n            }\n            this.getexecuteplanList()\n          }\n        })\n      },\n\n      handleClickTableRow(row, event, column) {\n        // console.log(row)\n        // console.log(column)\n        // this.$refs.fileTable.toggleRowSelection(row)\n      },\n      handleSelectionChange(rows) {\n        // console.log(rows)\n        this.multipleSelection = rows\n        console.log('00000000000000000000000000')\n        console.log(this.multipleSelection)\n      },\n      casehandleClickTableRow(row, event, column) {\n        console.log(row)\n      },\n\n      casehandleSelectionChange(rows) {\n        this.casemultipleSelection = rows\n        // console.log(this.casemultipleSelection)\n      },\n\n      exectypeselectChanged(e) {\n        if (e === '立即执行') {\n          this.datevisible = false\n          this.timevisible = false\n        }\n        if (e === '某天定时') {\n          this.datevisible = true\n          this.timevisible = true\n          this.tmpplanbatch.execdate = ''\n          this.tmpplanbatch.exectime = ''\n        }\n        if (e === '每天定时') {\n          this.datevisible = false\n          this.timevisible = true\n          this.tmpplanbatch.exectime = ''\n        }\n      },\n      /**\n       * 参数胡类型选择  e的值为options的选值\n       */\n      paramstypeselectChanged(e) {\n        this.tmpparam.keyname = ''\n        this.tmpparam.keyvalue = ''\n      },\n      /**\n       * 获取执行计划列表\n       */\n      getexecuteplanList() {\n        this.search.execplanname = this.tmpexecplanname\n        this.search.batchname = this.tmpbatchname\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.executeplanList = response.data.list\n          this.total = response.data.total\n          this.listLoading = false\n        }).catch(res => {\n          this.$message.error('加载字典列表失败')\n        })\n      },\n\n      searchBy() {\n        this.search.page = 1\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.itemKey = Math.random()\n          this.executeplanList = response.data.list\n          this.total = response.data.total\n        }).catch(res => {\n          this.$message.error('搜索失败')\n        })\n        this.tmpexecuteplanname = this.search.executeplanname\n        this.listLoading = false\n        this.btnLoading = false\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      handleSizeChange(size) {\n        this.search.page = 1\n        this.search.size = size\n        this.getexecuteplanList()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      handleCurrentChange(page) {\n        this.search.page = page\n        this.getexecuteplanList()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      getIndex(index) {\n        return (this.search.page - 1) * this.search.size + index + 1\n      },\n\n      paramgetIndex(index) {\n        return (this.searchparam.page - 1) * this.searchparam.size + index + 1\n      },\n\n      planscenegetIndex(index) {\n        return (this.searchscene.page - 1) * this.searchscene.size + index + 1\n      },\n      /**\n       * 环境下拉框活的环境id\n       */\n      enviromentselectChanged(e) {\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === e) {\n            this.tmpexecuteplan.envid = this.enviromentnameList[i].id\n          }\n          console.log(this.enviromentnameList[i].id)\n        }\n      },\n      /**\n       * 微服务下拉选择事件获取微服务id  e的值为options的选值\n       */\n      selectChanged(e) {\n        this.apiList = null\n        this.apiQuery.deployunitname = e\n        getapiList(this.apiQuery).then(response => {\n          this.apiList = response.data.list\n          // console.log(this.apiList)\n          // this.casetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n      /**\n       * 获取api列表\n       */\n      getapiList() {\n        this.caselistLoading = true\n        getapiList(this.listQuery).then(response => {\n          this.apiList = response.data.list\n          // this.casetotal = response.data.total\n          this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      /**\n       * 获取环境列表\n       */\n      getenviromentallList() {\n        getenviromentallList(this.search).then(response => {\n          this.enviromentnameList = response.data\n        }).catch(res => {\n          this.$message.error('加载环境列表失败')\n        })\n      },\n\n      /**\n       * 获取微服务列表\n       */\n      getdepunitList() {\n        this.caselistLoading = true\n        getdepunitLists(this.listQuery).then(response => {\n          this.deployunitList = response.data\n          // this.casetotal = response.data.total\n          // this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载微服务列表失败')\n        })\n      },\n\n      /**\n       * 获取用例列表\n       */\n      getcaseList() {\n        this.caselistLoading = true\n        getapicasesList(this.listQuery).then(response => {\n          this.apicasesList = response.data.list\n          // this.casetotal = response.data.total\n          this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载用例列表失败')\n        })\n      },\n\n      /**\n       * 获取微服务和api的用例\n       */\n      searchcaseBy() {\n        this.searchtestplanexistcase()\n      },\n\n      // 已废弃\n      async gettestcaselastList() {\n        console.log(this.testcaseList.length)\n        console.log(this.executeplancaseexistList.length)\n        for (let i = 0; i < this.testcaseList.length; i++) {\n          for (let j = 0; j < this.executeplancaseexistList.length; j++) {\n            if (this.testcaseList[i].id === this.executeplancaseexistList[j].testcaseid) {\n              this.testcaselastList.push({\n                'checkstats': true,\n                'deployunitname': this.testcaseList[i].deployunitname,\n                'apiname': this.testcaseList[i].apiname,\n                'casename': this.testcaseList[i].casename,\n                'expect': this.testcaseList[i].expect\n              })\n            } else {\n              this.testcaselastList.push({\n                'checkstats': false,\n                'deployunitname': this.testcaseList[i].deployunitname,\n                'apiname': this.testcaseList[i].apiname,\n                'casename': this.testcaseList[i].casename,\n                'expect': this.testcaseList[i].expect\n              })\n            }\n          }\n        }\n        console.log(this.testcaselastList)\n      },\n\n      /**\n       * 获取微服务和api的用例，已废弃\n       */\n      async searchcaseBydepandapi() {\n        this.$refs.searchcase.validate(valid => {\n          if (valid) {\n            this.casebtnLoading = true\n            this.caselistLoading = true\n            this.searchcase.page = this.caselistQuery.page\n            this.searchcase.size = this.caselistQuery.size\n            getapicases(this.searchcase).then(response => {\n              this.testcaseList = response.data.list\n              console.log(this.testcaseList.length)\n              this.casetotal = response.data.total\n            }).catch(res => {\n              this.$message.error('搜索失败')\n            })\n            this.caselistLoading = false\n            this.casebtnLoading = false\n          }\n        })\n      },\n\n      /**\n       * 获取执行计划下微服务和api已的用例,如果是已装载过的，会带上装载状态\n       */\n      searchtestplanexistcase() {\n        this.testcaselastList = []\n        this.$refs.searchcase.validate(valid => {\n          if (valid) {\n            this.searchcase.executeplanid = this.tmpexecuteplan.id\n            this.searchcase.casetype = this.tmpexecuteplan.usetype\n            // this.searchcase.page = this.caselistQuery.page\n            // this.searchcase.size = this.caselistQuery.size\n            this.searchcase.page = 1\n            searchtestplancases(this.searchcase).then(response => {\n              this.testcaselastList = response.data.list\n              this.casetotal = response.data.total\n              this.$nextTick(() => {\n                for (let i = 0; i < this.testcaselastList.length; i++) {\n                  if (this.testcaselastList[i].status === true) {\n                    this.$refs.caseTable.toggleRowSelection(this.testcaselastList[i], true)\n                  }\n                }\n              })\n            }).catch(res => {\n              this.$message.error('获取已装载的用例失败')\n            })\n          }\n        })\n        this.tmpcasedeployunitname = this.searchcase.deployunitname\n        this.tmpcaseapiname = this.searchcase.apiname\n        this.tmpcaseexecuteplanid = this.searchcase.executeplanid\n        this.tmpcasecasetype = this.searchcase.casetype\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      casehandleSizeChange(size) {\n        this.searchcase.page = 1\n        this.searchcase.size = size\n        this.searchtestplanexistcase()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      casehandleCurrentChange(page) {\n        this.searchcase.page = page\n        this.searchtestplanexistcase()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      casegetIndex(index) {\n        return (this.searchcase.page - 1) * this.searchcase.size + index + 1\n      },\n      /**\n       * 显示添加执行计划对话框\n       */\n      showAddexecuteplanDialog() {\n        // 显示新增对话框\n        this.dialogFormVisible = true\n        this.dialogStatus = 'add'\n        this.tmpexecuteplan.id = ''\n        this.tmpexecuteplan.executeplanname = ''\n        this.tmpexecuteplan.status = 'new'\n        this.tmpexecuteplan.memo = ''\n        this.tmpexecuteplan.usetype = ''\n        this.tmpexecuteplan.enviromentname = ''\n        this.tmpexecuteplan.businesstype = ''\n        this.tmpexecuteplan.creator = this.name\n        this.tmpexecuteplan.runmode = ''\n        this.tmpexecuteplan.dingdingtoken = ''\n        this.tmpexecuteplan.projectid = window.localStorage.getItem('pid')\n      },\n\n      showplanparamsDialog(index) {\n        // 显示新增对话框\n        this.CollectionParamsFormVisible = true\n        this.tmpparam.executeplanid = this.executeplanList[index].id\n        this.tmpep.executeplanid = this.executeplanList[index].id\n        this.searchheaderbyepid()\n      },\n\n      showtestsceneDialog(index) {\n        // 显示新增对话框\n        this.testscenedialogFormVisible = true\n        this.tmpexecplan.execplanid = this.executeplanList[index].id\n        this.tmpexecplan.execplanname = this.executeplanList[index].executeplanname\n        this.tmpexecplanforscene.testplanid = this.executeplanList[index].id\n        this.tmpdeleteexecplanscene.testplanid = this.executeplanList[index].id\n        this.findscenebyexecplanid()\n      },\n\n      ShowAddScenceDialog(index) {\n        // 显示新增对话框\n        this.addtestscenedialogFormVisible = true\n        this.gettestsceneList()\n      },\n\n      ShowAddPlancaseconditionDialog(index) {\n        this.caseconditiondialogFormVisible = true\n        this.apiconditiondialogStatus = 'add'\n        this.tmpapicondition.id = ''\n        this.tmpapicondition.subconditionname = ''\n        this.tmpapicondition.deployunitname = ''\n        this.tmpapicondition.apiname = ''\n        this.tmpapicondition.modelname = ''\n        this.tmpapicondition.casename = ''\n        this.tmpapicondition.memo = ''\n        this.tmpapicondition.creator = this.name\n        this.tmpapicondition.projectid = window.localStorage.getItem('pid')\n      },\n\n      // 显示新增对话框\n      showAddapiparamsDialog() {\n        this.modifyparamdialogFormVisible = true\n        this.ParamsdialogStatus = 'add'\n        this.tmpparam.id = ''\n        this.tmpparam.globalheaderid = ''\n        this.tmpparam.globalheadername = ''\n      },\n\n      showUpdateparamsDialog(index) {\n        this.modifyparamdialogFormVisible = true\n        this.ParamsdialogStatus = 'update'\n        this.tmpparam.id = this.paramsList[index].id\n        this.tmpparam.globalheadername = this.paramsList[index].globalheadername\n      },\n      /**\n       * 显示添加执行计划批次对话框\n       */\n      showplanbatchDialog() {\n        this.tmpplanbatch.exectmpdate = ''\n        this.tmpplanbatch.exectime = ''\n        this.tmpplanbatch.execdate = ''\n        this.tmpplanbatch.exectype = ''\n        this.timevisible = false\n        this.datevisible = false\n        // 显示新增对话框\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 'running') {\n            this.multipleSelection.splice(i)\n          }\n        }\n        if (this.multipleSelection.length === 0) {\n          this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n        } else {\n          if (this.multipleSelection.length > 1) {\n            this.$message.error('不支持多执行计划一起提交，单个提交')\n          } else {\n            this.tmpplanenv.id = this.multipleSelection[0].id\n            this.tmpplanenv.envid = this.multipleSelection[0].envid\n            this.tmpplanenv.enviromentname = this.multipleSelection[0].enviromentname\n            checkplancondition(this.tmpplanenv).then(() => {\n              this.batchdialogFormVisible = true\n              this.tmpplanbatch.executeplanid = this.multipleSelection[0].id\n              this.tmpplanbatch.creator = this.name\n              this.tmpplanbatch.batchname = ''\n            }).catch(res => {\n              // this.$message.error('执行失败')\n            })\n          }\n        }\n      },\n      /**\n       * 添加执行计划\n       */\n      addexecuteplan() {\n        this.$refs.tmpexecuteplan.validate(valid => {\n          if (valid) {\n            this.btnLoading = true\n            addexecuteplan(this.tmpexecuteplan).then(() => {\n              this.$message.success('添加成功')\n              this.getexecuteplanList()\n              this.dialogFormVisible = false\n              this.btnLoading = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n\n      /**\n       * 添加params\n       */\n      addparams() {\n        this.$refs.tmpparam.validate(valid => {\n          if (valid) {\n            addapicasesdebug(this.tmpparam).then(() => {\n              this.$message.success('添加成功')\n              this.modifyparamdialogFormVisible = false\n              this.searchheaderbyepid()\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 更新param\n       */\n      updatparam() {\n        this.$refs.tmpparam.validate(valid => {\n          if (valid) {\n            updateapicasesdebug(this.tmpparam).then(() => {\n              this.$message.success('更新成功')\n              this.searchheaderbyepid()\n              this.modifyparamdialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 删除param\n       * @param index api下标\n       */\n      removeexecuteplanparam(index) {\n        this.$confirm('删除该参数？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.paramsList[index].id\n          removeapicasesdebug(id).then(() => {\n            this.$message.success('删除成功')\n            this.searchheaderbyepid()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 显示修改执行计划对话框\n       * @param index 执行计划下标\n       */\n      showUpdateexecuteplanDialog(index) {\n        this.dialogFormVisible = true\n        this.dialogStatus = 'update'\n        this.tmpexecuteplan.id = this.executeplanList[index].id\n        this.tmpexecuteplan.executeplanname = this.executeplanList[index].executeplanname\n        this.tmpexecuteplan.status = this.executeplanList[index].status\n        this.tmpexecuteplan.usetype = this.executeplanList[index].usetype\n        this.tmpexecuteplan.memo = this.executeplanList[index].memo\n        this.tmpexecuteplan.enviromentname = this.executeplanList[index].enviromentname\n        this.tmpexecuteplan.businesstype = this.executeplanList[index].businesstype\n        this.tmpexecuteplan.creator = this.name\n        this.tmpexecuteplan.runmode = this.executeplanList[index].runmode\n        this.tmpexecuteplan.dingdingtoken = this.executeplanList[index].dingdingtoken\n        this.tmpexecuteplan.projectid = window.localStorage.getItem('pid')\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === this.tmpexecuteplan.enviromentname) {\n            this.tmpexecuteplan.envid = this.enviromentnameList[i].id\n          }\n        }\n      },\n\n      /**\n       * 装载执行计划的用例\n       */\n      addplantestscene() {\n        this.addtestsceneList = []\n        if (this.scenemultipleSelection.length === 0) {\n          this.$message.error('请选择添加的场景')\n        } else {\n          for (let i = 0; i < this.scenemultipleSelection.length; i++) {\n            this.addtestsceneList.push({\n              'testscenenid': this.scenemultipleSelection[i].id,\n              'scenename': this.scenemultipleSelection[i].scenename,\n              'testplanid': this.tmpexecplan.execplanid,\n              'planname': this.tmpexecplan.execplanname,\n              'ordernum': 0,\n              'creator': this.name,\n              'projectid': window.localStorage.getItem('pid')\n            })\n          }\n          addtestplantestscene(this.addtestsceneList).then(() => {\n            this.$message.success('装载成功')\n            this.addtestscenedialogFormVisible = false\n            this.findscenebyexecplanid()\n          }).catch(res => {\n            this.$message.error('装载失败')\n          })\n        }\n      },\n\n      /**\n       * 装载执行计划的用例\n       */\n      addexecuteplantestcase() {\n        this.executeplancaseList = []\n        if (this.casemultipleSelection.length === 0) {\n          this.$message.error('请选择装载的用例')\n        } else {\n          for (let i = 0; i < this.casemultipleSelection.length; i++) {\n            this.executeplancaseList.push({\n              'executeplanid': this.tmpexecuteplan.id,\n              'deployunitid': this.casemultipleSelection[i].deployunitid,\n              'apiid': this.casemultipleSelection[i].apiid,\n              'deployunitname': this.casemultipleSelection[i].deployunitname,\n              'apiname': this.casemultipleSelection[i].apiname,\n              'testcaseid': this.casemultipleSelection[i].id,\n              'casename': this.casemultipleSelection[i].casename\n            })\n          }\n          addexecuteplantestcase(this.executeplancaseList).then(() => {\n            this.$message.success('装载成功')\n          }).catch(res => {\n            this.$message.error('装载失败')\n          })\n        }\n      },\n\n      /**\n       * 删除装载的用例\n       */\n      removeexecuteplantestcase() {\n        this.executeplancaseremovetList = []\n        if (this.testcaselastList.length === this.casemultipleSelection.length) {\n          this.$message.error('未找到需要取消装载的用例')\n        } else {\n          for (let i = 0; i < this.testcaselastList.length; i++) {\n            var findflag = false\n            for (let j = 0; j < this.casemultipleSelection.length; j++) {\n              if (this.testcaselastList[i].id === this.casemultipleSelection[j].id) {\n                findflag = true\n                break\n              }\n            }\n            // 表示未选中的记录，需要删除\n            this.testcaselastList[i].id\n            if (!findflag) {\n              this.executeplancaseremovetList.push({\n                'executeplanid': this.tmpexecuteplan.id,\n                'deployunitname': this.testcaselastList[i].deployunitname,\n                'apiname': this.testcaselastList[i].apiname,\n                'testcaseid': this.testcaselastList[i].id,\n                'casename': this.testcaselastList[i].casename\n              })\n            }\n          }\n          console.log(this.executeplancaseremovetList)\n          removeexecuteplantestcase(this.executeplancaseremovetList).then(() => {\n            this.$message.success('取消装载用例成功')\n          }).catch(res => {\n            this.$message.error('取消装载用例失败')\n          })\n        }\n      },\n      /**\n       * 显示用例对话框\n       * @param index 执行计划下标\n       */\n      showTestCaseDialog(index) {\n        this.casedialogFormVisible = true\n        this.tmpexecuteplan.id = this.executeplanList[index].id\n        this.tmpexecuteplan.executeplanname = this.executeplanList[index].executeplanname\n        this.tmpexecuteplan.status = this.executeplanList[index].status\n        this.tmpexecuteplan.usetype = this.executeplanList[index].usetype\n        this.tmpexecuteplan.memo = this.executeplanList[index].memo\n        this.searchcase.deployunitname = null\n        this.searchcase.apiname = null\n        this.testcaselastList = []\n        this.casetotal = 0\n      },\n      /**\n       * 更新执行计划\n       */\n      updateexecuteplan() {\n        this.$refs.tmpexecuteplan.validate(valid => {\n          if (valid) {\n            updateexecuteplan(this.tmpexecuteplan).then(() => {\n              this.$message.success('更新成功')\n              this.getexecuteplanList()\n              this.dialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n      /**\n       * 删除字典\n       * @param index 执行计划下标\n       */\n      removeexecuteplan(index) {\n        this.$confirm('删除该执行计划？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.executeplanList[index].id\n          removeexecuteplan(id).then(() => {\n            this.$message.success('删除成功')\n            this.getexecuteplanList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 执行计划资料是否唯一\n       * @param 执行计划\n       */\n      isUniqueDetail(executeplan) {\n        for (let i = 0; i < this.executeplanList.length; i++) {\n          if (this.executeplanList[i].id !== executeplan.id) { // 排除自己\n            if (this.executeplanList[i].executeplanname === executeplan.executeplanname) {\n              this.$message.error('执行计划名已存在')\n              return false\n            }\n          }\n        }\n        return true\n      },\n      notexistheaderselectChanged(e) {\n        for (let i = 0; i < this.globalheaderallList.length; i++) {\n          if (this.globalheaderallList[i].globalheadername === e) {\n            this.tmpparam.globalheaderid = this.globalheaderallList[i].id\n          }\n        }\n      }\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/executecenter/executeplan/index.vue","import request from '@/utils/request'\n\nexport function gettestplanList(params) {\n  return request({\n    url: '/testplan/testscene',\n    method: 'get',\n    params\n  })\n}\n\nexport function addtestplantestscene(sceneForm) {\n  return request({\n    url: '/testplan/testscene/addplanscene',\n    method: 'post',\n    data: sceneForm\n  })\n}\n\nexport function updateplanscenenorder(executeplanForm) {\n  return request({\n    url: '/testplan/testscene/updateplanscenenorder',\n    method: 'post',\n    data: executeplanForm\n  })\n}\n\nexport function getstaticsplan(params) {\n  return request({\n    url: '/testplan/testscene/getstaticsplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function gettestplannum(params) {\n  return request({\n    url: '/testplan/testscene/gettestplannum',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplanbytype(params) {\n  return request({\n    url: '/testplan/testscene/getallexplanbytype',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplan(params) {\n  return request({\n    url: '/testplan/testscene/getallexplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function search(testplanForm) {\n  return request({\n    url: '/testplan/testscene/search',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function findscenebyexecplanid(testplanForm) {\n  return request({\n    url: '/testplan/testscene/findscenebyexecplanid',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function addtestplan(testplanForm) {\n  return request({\n    url: '/testplan/testscene',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function testplan(testplanForm) {\n  return request({\n    url: '/testplan/testscene/execplancases',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function checkplancondition(testplanForm) {\n  return request({\n    url: '/testplan/testscene/checkcondition',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function updatetestplan(testplanForm) {\n  return request({\n    url: '/testplan/testscene/detail',\n    method: 'put',\n    data: testplanForm\n  })\n}\n\nexport function updatetestplanstatus(testplanForm) {\n  return request({\n    url: '/testplan/testscene/updatestatus',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function removetestplanscene(executeplanSceneId) {\n  return request({\n    url: '/testplan/testscene/' + executeplanSceneId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/executecenter/testplantestscene.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('executeplan:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\",\"icon\":\"el-icon-refresh\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.getexecuteplanList($event)}}},[_vm._v(\"刷新\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showplanbatchDialog($event)}}},[_vm._v(\"运行\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:add'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAddexecuteplanDialog($event)}}},[_vm._v(\"添加测试集合\")]):_vm._e()],1),_vm._v(\" \"),(_vm.hasPermission('executeplan:search'))?_c('span',[_c('el-form-item',{attrs:{\"label\":\"测试集合:\"}},[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"测试集合\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchBy($event)}},model:{value:(_vm.search.executeplanname),callback:function ($$v) {_vm.$set(_vm.search, \"executeplanname\", $$v)},expression:\"search.executeplanname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"业务类型:\"}},[_c('el-select',{attrs:{\"clearable\":\"\",\"placeholder\":\"业务类型\"},model:{value:(_vm.search.businesstype),callback:function ($$v) {_vm.$set(_vm.search, \"businesstype\", $$v)},expression:\"search.businesstype\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.planbusinessdiclist),function(businessdicitem,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":businessdicitem.dicitmevalue,\"value\":businessdicitem.dicitmevalue}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemplanKey,ref:\"fileTable\",attrs:{\"data\":_vm.executeplanList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.handleClickTableRow,\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"40\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"集合名\",\"align\":\"center\",\"prop\":\"executeplanname\",\"width\":\"100\"}}),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"envid\",\"align\":\"center\",\"prop\":\"envid\",\"width\":\"50\"}}):_vm._e(),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"状态\",\"align\":\"center\",\"prop\":\"status\",\"width\":\"50\"}}):_vm._e(),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"业务类型\",\"align\":\"center\",\"prop\":\"businesstype\",\"width\":\"70\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"执行环境\",\"align\":\"center\",\"prop\":\"enviromentname\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"类型\",\"align\":\"center\",\"prop\":\"usetype\",\"width\":\"50\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"运行模式\",\"align\":\"center\",\"prop\":\"runmode\",\"width\":\"70\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"用例数\",\"align\":\"center\",\"prop\":\"casecounts\",\"width\":\"60\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"通知钉钉token\",\"align\":\"center\",\"prop\":\"dingdingtoken\",\"width\":\"110\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作人\",\"align\":\"center\",\"prop\":\"creator\",\"width\":\"60\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"描述\",\"align\":\"center\",\"prop\":\"memo\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"创建时间\",\"align\":\"center\",\"prop\":\"createTime\",\"width\":\"110\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.createTime)))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"最后修改时间\",\"align\":\"center\",\"prop\":\"lastmodifyTime\",\"width\":\"110\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.lastmodifyTime))+\"\\n      \")]}}])}),_vm._v(\" \"),(_vm.hasPermission('executeplan:update')  || _vm.hasPermission('executeplan:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\",\"width\":\"450\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateexecuteplanDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:delete') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplan(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showplanparamsDialog(scope.$index)}}},[_vm._v(\"全局Header\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showtestsceneDialog(scope.$index)}}},[_vm._v(\"测试场景\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showtestplanConditionDialog(scope.$index)}}},[_vm._v(\"前置条件\")]):_vm._e()]}}],null,false,2523867381)}):_vm._e()],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.search.page,\"page-size\":_vm.search.size,\"total\":_vm.total,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.textMap[_vm.dialogStatus],\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpexecuteplan\",staticClass:\"small-space\",staticStyle:{\"width\":\"400px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpexecuteplan}},[_c('el-form-item',{attrs:{\"label\":\"集合名\",\"prop\":\"executeplanname\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.executeplanname),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"executeplanname\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"tmpexecuteplan.executeplanname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"类型\",\"prop\":\"usetype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"类型\"},model:{value:(_vm.tmpexecuteplan.usetype),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"usetype\", $$v)},expression:\"tmpexecuteplan.usetype\"}},[_c('el-option',{attrs:{\"label\":\"功能\",\"value\":\"功能\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"性能\",\"value\":\"性能\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"执行环境\",\"prop\":\"enviromentname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"执行环境\"},on:{\"change\":function($event){return _vm.enviromentselectChanged($event)}},model:{value:(_vm.tmpexecuteplan.enviromentname),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"enviromentname\", $$v)},expression:\"tmpexecuteplan.enviromentname\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.enviromentnameList),function(envname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":envname.enviromentname,\"value\":envname.enviromentname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"业务类型\",\"prop\":\"businesstype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"业务类型\"},on:{\"change\":function($event){return _vm.businesstypeselectChanged($event)}},model:{value:(_vm.tmpexecuteplan.businesstype),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"businesstype\", $$v)},expression:\"tmpexecuteplan.businesstype\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.planbusinessdiclist),function(dicitem,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":dicitem.dicitmevalue,\"value\":dicitem.dicitmevalue,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"运行模式\",\"prop\":\"runmode\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"运行模式\"},model:{value:(_vm.tmpexecuteplan.runmode),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"runmode\", $$v)},expression:\"tmpexecuteplan.runmode\"}},[_c('el-option',{attrs:{\"label\":\"单机运行\",\"value\":\"单机运行\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"多机并行\",\"value\":\"多机并行\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"钉钉通知token\",\"prop\":\"dingdingtoken\"}},[_c('el-input',{attrs:{\"maxlength\":\"200\",\"type\":\"text\",\"prefix-icon\":\"el-icon-message\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.dingdingtoken),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"dingdingtoken\", $$v)},expression:\"tmpexecuteplan.dingdingtoken\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"备注\",\"prop\":\"memo\"}},[_c('el-input',{attrs:{\"maxlength\":\"200\",\"type\":\"text\",\"prefix-icon\":\"el-icon-message\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.memo),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"memo\", $$v)},expression:\"tmpexecuteplan.memo\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.dialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.dialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addexecuteplan($event)}}},[_vm._v(\"保存\\n      \")]):_vm._e(),_vm._v(\" \"),(_vm.dialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updateexecuteplan($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.loadcase,\"visible\":_vm.casedialogFormVisible},on:{\"update:visible\":function($event){_vm.casedialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{ref:\"searchcase\",attrs:{\"inline\":true,\"model\":_vm.searchcase}},[(_vm.hasPermission('apicases:search'))?_c('span',[_c('el-form-item',{attrs:{\"label\":\"微服务:\",\"prop\":\"deployunitname\",\"required\":\"\"}},[_c('el-select',{attrs:{\"placeholder\":\"微服务\"},on:{\"change\":function($event){return _vm.selectChanged($event)}},model:{value:(_vm.searchcase.deployunitname),callback:function ($$v) {_vm.$set(_vm.searchcase, \"deployunitname\", $$v)},expression:\"searchcase.deployunitname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.deployunitList),function(depname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":depname.deployunitname,\"value\":depname.deployunitname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"API:\"}},[_c('el-select',{attrs:{\"placeholder\":\"api名\"},model:{value:(_vm.searchcase.apiname),callback:function ($$v) {_vm.$set(_vm.searchcase, \"apiname\", $$v)},expression:\"searchcase.apiname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.apiList),function(api,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":api.apiname,\"value\":api.apiname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchcaseBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()])],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemcaseKey,ref:\"caseTable\",attrs:{\"data\":_vm.testcaselastList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.casehandleClickTableRow,\"selection-change\":_vm.casehandleSelectionChange}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"type\":\"selection\",\"prop\":\"status\",\"width\":\"50\"}}),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"apiid\",\"align\":\"center\",\"prop\":\"apiid\",\"width\":\"120\"}}):_vm._e(),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"deployunitid\",\"align\":\"center\",\"prop\":\"deployunitid\",\"width\":\"120\"}}):_vm._e(),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"用例名\",\"align\":\"center\",\"prop\":\"casename\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"微服务\",\"align\":\"center\",\"prop\":\"deployunitname\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"API\",\"align\":\"center\",\"prop\":\"apiname\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"期望值\",\"align\":\"center\",\"prop\":\"expect\",\"width\":\"120\"}})],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.searchcase.page,\"page-size\":_vm.searchcase.size,\"total\":_vm.casetotal,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.casehandleSizeChange,\"current-change\":_vm.casehandleCurrentChange}}),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.casedialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addexecuteplantestcase($event)}}},[_vm._v(\"装载\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"warning\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplantestcase($event)}}},[_vm._v(\"取消装载\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.loadbatch,\"visible\":_vm.batchdialogFormVisible},on:{\"update:visible\":function($event){_vm.batchdialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{ref:\"tmpplanbatch\",attrs:{\"model\":_vm.tmpplanbatch}},[_c('el-form-item',{attrs:{\"label\":\"执行计划：\",\"prop\":\"batchname\",\"required\":\"\"}},[_c('el-input',{staticStyle:{\"width\":\"60%\"},attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"placeholder\":\"例如2020-10-21-tag-101\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpplanbatch.batchname),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"batchname\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"tmpplanbatch.batchname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"执行类型：\",\"prop\":\"exectype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"placeholder\":\"执行类型\"},on:{\"change\":function($event){return _vm.exectypeselectChanged($event)}},model:{value:(_vm.tmpplanbatch.exectype),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectype\", $$v)},expression:\"tmpplanbatch.exectype\"}},[_c('el-option',{attrs:{\"label\":\"立即执行\",\"value\":\"立即执行\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"某天定时\",\"value\":\"某天定时\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"每天定时\",\"value\":\"每天定时\"}})],1)],1),_vm._v(\" \"),(_vm.datevisible)?_c('div',[_c('el-form-item',{attrs:{\"label\":\"选择日期：\",\"prop\":\"exectmpdate\",\"required\":\"\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"60%\"},attrs:{\"type\":\"date\",\"format\":\"yyyy-MM-dd\",\"value-format\":\"yyyy-MM-dd\",\"placeholder\":\"选择日期\"},model:{value:(_vm.tmpplanbatch.exectmpdate),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectmpdate\", $$v)},expression:\"tmpplanbatch.exectmpdate\"}})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.timevisible)?_c('div',[_c('el-form-item',{attrs:{\"label\":\"选择时刻：\",\"prop\":\"exectime\",\"required\":\"\"}},[_c('el-time-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"picker-options\":{\n            start: '00:05',\n            step: '00:10',\n            end: '23:55'\n          },\"placeholder\":\"选择时间\"},model:{value:(_vm.tmpplanbatch.exectime),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectime\", $$v)},expression:\"tmpplanbatch.exectime\"}})],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.batchdialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.execbtnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.savebatchandexecuteplancase($event)}}},[_vm._v(\"执行\")])],1)]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"全局Header\",\"visible\":_vm.CollectionParamsFormVisible},on:{\"update:visible\":function($event){_vm.CollectionParamsFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('executeplan:add'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAddapiparamsDialog($event)}}},[_vm._v(\"添加全局Header\")]):_vm._e()],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemKey,attrs:{\"data\":_vm.paramsList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"45\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.paramgetIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"Header\",\"align\":\"center\",\"prop\":\"globalheadername\",\"width\":\"280\"}}),_vm._v(\" \"),(_vm.hasPermission('executeplan:update')  || _vm.hasPermission('executeplan:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateparamsDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:delete') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplanparam(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e()]}}],null,false,2267587065)}):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"集合前置条件\",\"visible\":_vm.ConditionFormVisible},on:{\"update:visible\":function($event){_vm.ConditionFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('testscene:scenecasecondition'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.ShowAddPlancaseconditionDialog($event)}}},[_vm._v(\"添加前置接口\")]):_vm._e()],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],attrs:{\"data\":_vm.apiconditioncaseList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"45\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.apiconditioncaseIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"前置条件名\",\"align\":\"center\",\"prop\":\"subconditionname\",\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"前置接口\",\"align\":\"center\",\"prop\":\"casename\",\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"所属集合\",\"align\":\"center\",\"prop\":\"conditionname\",\"width\":\"150\"}}),_vm._v(\" \"),(_vm.hasPermission('testscene:caseupdateapicondition')  || _vm.hasPermission('testscene:casedeleteapicondition'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('testscene:caseupdateapicondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateapiconditionDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('testscene:casedeleteapicondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removecaseapicondition(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e()]}}],null,false,3600714770)}):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.apiconditiontextMap[_vm.apiconditiondialogStatus],\"visible\":_vm.caseconditiondialogFormVisible},on:{\"update:visible\":function($event){_vm.caseconditiondialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpapicondition\",staticClass:\"small-space\",staticStyle:{\"width\":\"450px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpapicondition}},[_c('el-form-item',{attrs:{\"label\":\"前置条件名\",\"prop\":\"subconditionname\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"maxlength\":\"30\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpapicondition.subconditionname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"subconditionname\", $$v)},expression:\"tmpapicondition.subconditionname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"微服务\",\"prop\":\"deployunitname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"微服务\"},on:{\"change\":function($event){return _vm.apiconditiondeployunitselectChanged($event)}},model:{value:(_vm.tmpapicondition.deployunitname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"deployunitname\", $$v)},expression:\"tmpapicondition.deployunitname\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.deployunitList),function(depunitname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":depunitname.deployunitname,\"value\":depunitname.deployunitname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"模块:\",\"prop\":\"modelname\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"模块\"},on:{\"change\":function($event){return _vm.apiconditionmodelselectChanged($event)}},model:{value:(_vm.tmpapicondition.modelname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"modelname\", $$v)},expression:\"tmpapicondition.modelname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.apiconditionmodelList),function(model,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":model.modelname,\"value\":model.modelname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"API\",\"prop\":\"apiname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"API\"},on:{\"change\":function($event){return _vm.apiconditionapiselectChanged($event)}},model:{value:(_vm.tmpapicondition.apiname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"apiname\", $$v)},expression:\"tmpapicondition.apiname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.apiconditionapiList),function(api,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":api.apiname,\"value\":api.apiname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"接口\",\"prop\":\"casename\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"接口\"},on:{\"change\":function($event){return _vm.apiconditiontestcaseselectChanged($event)}},model:{value:(_vm.tmpapicondition.casename),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"casename\", $$v)},expression:\"tmpapicondition.casename\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.apiconditioncaseList),function(testcase,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":testcase.casename,\"value\":testcase.casename,\"required\":\"\"}})],1)})],2)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.caseconditiondialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.apiconditiondialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"danger\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.$refs['tmpapicondition'].resetFields()}}},[_vm._v(\"重置\")]):_vm._e(),_vm._v(\" \"),(_vm.apiconditiondialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addapicondition($event)}}},[_vm._v(\"添加\")]):_vm._e(),_vm._v(\" \"),(_vm.apiconditiondialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updateapicondition($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.paramstextMap[_vm.ParamsdialogStatus],\"visible\":_vm.modifyparamdialogFormVisible},on:{\"update:visible\":function($event){_vm.modifyparamdialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpparam\",staticClass:\"small-space\",staticStyle:{\"width\":\"600px\",\"margin-left\":\"30px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpparam}},[_c('el-form-item',{attrs:{\"label\":\"全局Header:\",\"prop\":\"globalheadername\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"415px\"},attrs:{\"placeholder\":\"全局Header\"},on:{\"change\":function($event){return _vm.notexistheaderselectChanged($event)}},model:{value:(_vm.tmpparam.globalheadername),callback:function ($$v) {_vm.$set(_vm.tmpparam, \"globalheadername\", $$v)},expression:\"tmpparam.globalheadername\"}},_vm._l((_vm.globalheaderallList),function(globalheader,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":globalheader.globalheadername,\"value\":globalheader.globalheadername}})],1)}),0)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.modifyparamdialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.ParamsdialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addparams($event)}}},[_vm._v(\"添加\")]):_vm._e(),_vm._v(\" \"),(_vm.ParamsdialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updatparam($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"width\":\"840px\",\"title\":\"测试场景\",\"visible\":_vm.testscenedialogFormVisible},on:{\"update:visible\":function($event){_vm.testscenedialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.ShowAddScenceDialog}},[_vm._v(\"添加场景\")])],1)],1)],1),_vm._v(\" \"),_c('el-table',{ref:\"testplansceneTable\",attrs:{\"data\":_vm.testplansceneList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.planscenegetIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"场景名\",\"align\":\"center\",\"prop\":\"scenename\",\"width\":\"280\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"width\":\"120\",\"align\":\"center\",\"label\":\"场景顺序\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n          var row = ref.row;\nreturn [(row.edit)?[_c('el-input',{staticClass:\"edit-input\",attrs:{\"oninput\":\"value=value.replace(/[^\\\\d]/g,'')\",\"maxLength\":\"10\",\"size\":\"small\"},model:{value:(row.ordernum),callback:function ($$v) {_vm.$set(row, \"ordernum\", $$v)},expression:\"row.ordernum\"}}),_vm._v(\" \"),_c('el-button',{staticClass:\"cancel-btn\",attrs:{\"size\":\"small\",\"icon\":\"el-icon-refresh\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.cancelEdit(row)}}},[_vm._v(\"\\n              取消\\n            \")])]:_c('span',[_vm._v(_vm._s(row.ordernum))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"align\":\"center\",\"label\":\"操作\",\"width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n          var row = ref.row;\nreturn [(row.edit)?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"small\",\"icon\":\"el-icon-circle-check-outline\"},on:{\"click\":function($event){return _vm.confirmEdit(row)}}},[_vm._v(\"\\n            保存\\n          \")]):_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){row.edit=!row.edit}}},[_vm._v(\"\\n            设置顺序\\n          \")])]}}])}),_vm._v(\" \"),(_vm.hasPermission('testscene:deletecase')  || _vm.hasPermission('testscene:scenecondition'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\",\"width\":\"220\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('testscene:deletecase') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removetestplanscene(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('testscene:scenecondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showtestscenecaseConditionDialog(scope.$index)}}},[_vm._v(\"前置条件\")]):_vm._e()]}}],null,false,1684076174)}):_vm._e()],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.searchscene.page,\"page-size\":_vm.searchscene.size,\"total\":_vm.testplanscenetotal,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.planscenehandleSizeChange,\"current-change\":_vm.planscenehandleCurrentChange}})],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"width\":\"800px\",\"title\":\"添加场景\",\"visible\":_vm.addtestscenedialogFormVisible},on:{\"update:visible\":function($event){_vm.addtestscenedialogFormVisible=$event}}},[_c('el-table',{key:_vm.itemaddsceneKey,ref:\"addsceneTable\",attrs:{\"data\":_vm.testsceneList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.addscenehandleClickTableRow,\"selection-change\":_vm.addscenehandleSelectionChange}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.addscenegetIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"type\":\"selection\",\"prop\":\"status\",\"width\":\"50\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"场景名\",\"align\":\"center\",\"prop\":\"scenename\",\"width\":\"370\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"场景类型\",\"align\":\"center\",\"prop\":\"usetype\",\"width\":\"280\"}})],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.addsearchscene.page,\"page-size\":_vm.addsearchscene.size,\"total\":_vm.addscenetotal,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.addscenehandleSizeChange,\"current-change\":_vm.addscenehandleCurrentChange}}),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.addtestscenedialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addplantestscene($event)}}},[_vm._v(\"添加\")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-73ec3257\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/executecenter/executeplan/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-73ec3257\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/executecenter/executeplan/index.vue\n// module id = null\n// module chunks = ","import request from '@/utils/request'\n\nexport function getapicasesdebugList(params) {\n  return request({\n    url: 'globalheaderuse/',\n    method: 'get',\n    params\n  })\n}\n\nexport function searchheaderbyepid(params) {\n  return request({\n    url: '/globalheaderuse/searchheaderbyepid',\n    method: 'post',\n    data: params\n  })\n}\n\nexport function getapicasesdebugnum() {\n  return request({\n    url: 'globalheaderuse//getapicasesdebugnum',\n    method: 'get'\n  })\n}\n\nexport function getapicasesdebugallList() {\n  return request({\n    url: 'globalheaderuse//ens',\n    method: 'get'\n  })\n}\n\nexport function searchheadernotexist(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/searchnotexit',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function searchheaderexist(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/searchexit',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function addheadercasesdebug(apicases) {\n  return request({\n    url: 'globalheaderuse/addcases',\n    method: 'post',\n    data: apicases\n  })\n}\n\nexport function deleteheadercase(apicases) {\n  return request({\n    url: 'globalheaderuse/deletacases',\n    method: 'post',\n    data: apicases\n  })\n}\n\nexport function addapicasesdebug(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function updateapicasesdebug(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/detail',\n    method: 'put',\n    data: apicasesdebugForm\n  })\n}\n\nexport function removeapicasesdebug(apicasesdebugId) {\n  return request({\n    url: 'globalheaderuse/' + apicasesdebugId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/assets/globalheaderuse.js"],"sourceRoot":""}