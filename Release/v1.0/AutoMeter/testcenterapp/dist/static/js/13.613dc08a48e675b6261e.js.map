{"version":3,"sources":["webpack:///./src/api/executecenter/testscene.js","webpack:///src/views/executecenter/executeplan/index.vue","webpack:///./src/api/executecenter/testplantestscene.js","webpack:///./src/views/executecenter/executeplan/index.vue?7a04","webpack:///./src/views/executecenter/executeplan/index.vue","webpack:///./src/api/assets/globalheaderuse.js"],"names":["testsceneForm","Object","__WEBPACK_IMPORTED_MODULE_0__utils_request__","url","method","data","apicasesForm","params","testsceneId","executecenter_executeplan","name","filters","statusFilter","status","published","draft","deleted","id","datevisible","timevisible","itemKey","itemplanKey","itemcaseKey","planbusinessdiclist","tmpexecuteplanname","tmpcasedeployunitname","tmpcaseapiname","tmpcaseexecuteplanid","tmpcasecasetype","show","PerformanceVisible","enviromentnameList","apiList","deployunitList","multipleSelection","casemultipleSelection","globalheaderallList","executeplanList","testcaseList","testcaselastList","executeplancaseList","executeplancaseexistList","executeplancaseremovetList","executeplanstopList","tmpplanbatchList","paramsList","addtestscenelastList","testplansceneList","testsceneList","addtestsceneList","apiconditioncaseList","sceneconditioncaseList","apiconditionmodelList","sceneconditionmodelList","apiconditionapiList","sceneconditionapiList","itemaddsceneKey","scenemultipleSelection","delayconditionList","stopplanbatchList","tmptestscenename","scenetotal","addscenetotal","testplanscenetotal","SceneapiconditiontextMap","update","add","DelaytextMap","addsearchscene","page","size","casetype","projectid","searchscene","testplanid","listLoading","caselistLoading","total","casetotal","apiQuery","deployunitname","listQuery","executeplanname","creator","caselistQuery","apiname","executeplanid","ParamsdialogStatus","DelaydialogStatus","dialogStatus","SceneconditiondialogStatus","dialogFormVisible","casedialogFormVisible","batchdialogFormVisible","CollectionParamsFormVisible","modifyparamdialogFormVisible","ConditionFormVisible","testscenedialogFormVisible","addtestscenedialogFormVisible","scenecaseConditionFormVisible","SceneconditiondialogFormVisible","DelaydialogFormVisible","stopbatchdialogFormVisible","loadcase","loadbatch","textMap","updateRole","apiconditiontextMap","apiconditiondialogStatus","caseconditiondialogFormVisible","tmpapicondition","modelid","modelname","conditionid","subconditionname","conditionname","deployunitid","apiid","caseid","casename","memo","conditiontype","tmpsceneapicondition","tmpdelaycondition","delaytime","paramstextMap","diclevelQuery","diccode","btnLoading","casebtnLoading","execbtnLoading","tmpexecuteplan","enviromentname","envid","usetype","businesstype","ip","dingdingtoken","runmode","tmpplanbatch","batchid","batchname","exectype","exectmpdate","execdate","exectime","tmpstopplanbatch","tmpplanenv","tmpapicases","casejmxname","casecontent","expect","level","tmpparam","paramstype","keyname","keyvalue","globalheadername","globalheaderid","tmpep","search","Scenedelaysearch","searchcase","searchparam","searchapicondition","tmpexecplan","execplanid","execplanname","computed","extends_default","vuex_esm","created","this","window","localStorage","getItem","getexecuteplanList","getdepunitList","getenviromentallList","getdatabydiccodeList","getglobalheaderallList","activated","methods","getstopplanbatchList","_this","executeplanbatch","then","response","catch","res","$message","error","getdelayconditionList","_this2","delaycondition","showUpdatedelayconditionDialog","index","removedelaycondition","_this3","$confirm","confirmButtonText","cancelButtonText","type","success","info","updatebatchstatus","_this4","updatedelaycondition","_this5","$refs","validate","valid","adddelaycondition","_this6","showAddScenedelayconditionDialog","showtestscenecaseConditionDialog","scenename","getapiconditionList","removetestplanscene","_this7","executeplanSceneId","request","findscenebyexecplanid","showUpdateapiconditionDialog","showUpdatesceneconditionDialog","updateapicondition","_this8","apicondition","updatescenecondition","_this9","removecasescenecondition","_this10","removecaseapicondition","_this11","apiconditiontestcaseselectChanged","e","i","length","sceneconditiontestcaseselectChanged","sceneconditionmodelselectChanged","_this12","api","apiconditionmodelselectChanged","_this13","apiconditionapiselectChanged","_this14","apicases","sceneconditionapiselectChanged","_this15","showtestplanConditionDialog","apiconditioncaseIndex","_this16","list","addscenecondition","_this17","addapicondition","_this18","sceneconditiondeployunitselectChanged","_this19","depunitmodel","apiconditiondeployunitselectChanged","_this20","cancelEdit","row","ordernum","oldcaseorder","edit","confirmEdit","executeplanForm","_this21","testplanForm","_this22","items","map","v","$set","addscenehandleClickTableRow","event","column","addscenehandleSelectionChange","rows","addscenehandleCurrentChange","gettestsceneList","planscenehandleCurrentChange","addscenegetIndex","_this23","testscene","addscenehandleSizeChange","planscenehandleSizeChange","_this24","dictionary","unix2CurrentTime","utils","_this25","globalheader","searchheaderbyepid","_this26","console","log","globalheaderuse","stopexecuteplanList","_this27","splice","_i","push","executeplan","savebatchandexecuteplancase","_this28","executeplancase","_this29","_i2","handleClickTableRow","handleSelectionChange","casehandleClickTableRow","casehandleSelectionChange","exectypeselectChanged","paramstypeselectChanged","_this30","tmpexecplanname","tmpbatchname","searchBy","_this31","Math","random","handleSizeChange","handleCurrentChange","getIndex","paramgetIndex","planscenegetIndex","enviromentselectChanged","selectChanged","_this32","getapiList","_this33","_this34","testenviroment","_this35","depunit","getcaseList","_this36","apicasesList","searchcaseBy","searchtestplanexistcase","gettestcaselastList","_this37","asyncToGenerator_default","regenerator_default","a","mark","_callee","j","wrap","_context","prev","next","testcaseid","checkstats","stop","searchcaseBydepandapi","_this38","_callee2","_context2","_this39","executeplantestcase","$nextTick","caseTable","toggleRowSelection","casehandleSizeChange","casehandleCurrentChange","casegetIndex","showAddexecuteplanDialog","showplanparamsDialog","showstopbatchDialog","showtestsceneDialog","ShowAddScenceDialog","ShowAddPlancaseconditionDialog","ShowAddPlanSceneconditionDialog","showAddapiparamsDialog","showUpdateparamsDialog","showplanbatchDialog","_this40","addexecuteplan","_this41","addparams","_this42","updatparam","_this43","removeexecuteplanparam","_this44","showUpdateexecuteplanDialog","addplantestscene","sceneForm","_this45","testscenenid","planname","addexecuteplantestcase","_this46","removeexecuteplantestcase","_this47","findflag","showTestCaseDialog","updateexecuteplan","_this48","removeexecuteplan","_this49","isUniqueDetail","notexistheaderselectChanged","views_executecenter_executeplan","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","inline","hasPermission","icon","nativeOn","click","$event","preventDefault","_v","_e","label","clearable","placeholder","keyup","indexOf","_k","keyCode","key","model","value","callback","$$v","expression","_l","businessdicitem","dicitmevalue","loading","on","directives","rawName","modifiers","body","ref","element-loading-text","border","fit","highlight-current-row","row-click","selection-change","width","align","scopedSlots","_u","fn","scope","domProps","textContent","_s","$index","show-overflow-tooltip","prop","createTime","lastmodifyTime","current-page","page-size","page-sizes","layout","size-change","current-change","title","visible","update:visible","staticStyle","margin-left","status-icon","label-position","label-width","required","maxlength","prefix-icon","auto-complete","trim","change","display","envname","businesstypeselectChanged","dicitem","slot","depname","format","value-format","picker-options","start","step","end","stopplanbatchselectChanged","filterable","depunitname","testcase","resetFields","oninput","maxLength","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__","apicasesdebugForm","apicasesdebugId"],"mappings":"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","file":"static/js/13.613dc08a48e675b6261e.js","sourcesContent":["import request from '@/utils/request'\n\nexport function gettestsceneList(params) {\n  return request({\n    url: '/testscene',\n    method: 'get',\n    params\n  })\n}\n\nexport function getstaticsplan(params) {\n  return request({\n    url: '/testscene/getstaticsplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function gettestscenenum(params) {\n  return request({\n    url: '/testscene/gettestscenenum',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplanbytype(params) {\n  return request({\n    url: '/testscene/getallexplanbytype',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplan(params) {\n  return request({\n    url: '/testscene/getallexplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function search(testsceneForm) {\n  return request({\n    url: '/testscene/search',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function addtestscene(testsceneForm) {\n  return request({\n    url: '/testscene',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function testscene(testsceneForm) {\n  return request({\n    url: '/testscene/execplancases',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function checkplancondition(testsceneForm) {\n  return request({\n    url: '/testscene/checkcondition',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function updatetestscene(testsceneForm) {\n  return request({\n    url: '/testscene/detail',\n    method: 'put',\n    data: testsceneForm\n  })\n}\n\nexport function copyscene(apicasesForm) {\n  return request({\n    url: '/testscene/copyscene',\n    method: 'post',\n    data: apicasesForm\n  })\n}\n\nexport function getsceneallList(params) {\n  return request({\n    url: '/testscene/scenes',\n    method: 'get',\n    params\n  })\n}\n\nexport function updatetestscenestatus(testsceneForm) {\n  return request({\n    url: '/testscene/updatestatus',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function removetestscene(testsceneId) {\n  return request({\n    url: '/testscene/' + testsceneId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/executecenter/testscene.js","<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-form :inline=\"true\">\n        <el-form-item>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            icon=\"el-icon-refresh\"\n            v-if=\"hasPermission('executeplan:list')\"\n            @click.native.prevent=\"getexecuteplanList\"\n          >刷新</el-button>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:list')\"\n            @click.native.prevent=\"showplanbatchDialog\"\n          >运行</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            icon=\"el-icon-plus\"\n            v-if=\"hasPermission('executeplan:add')\"\n            @click.native.prevent=\"showAddexecuteplanDialog\"\n          >添加测试集合</el-button>\n        </el-form-item>\n\n        <span v-if=\"hasPermission('executeplan:search')\">\n          <el-form-item label=\"测试集合:\">\n            <el-input v-model=\"search.executeplanname\" clearable @keyup.enter.native=\"searchBy\" placeholder=\"测试集合\"></el-input>\n          </el-form-item>\n\n          <el-form-item  label=\"业务类型:\">\n            <el-select v-model=\"search.businesstype\" clearable placeholder=\"业务类型\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(businessdicitem, index) in planbusinessdiclist\" :key=\"index\">\n                <el-option :label=\"businessdicitem.dicitmevalue\" :value=\"businessdicitem.dicitmevalue\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchBy\" :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n      </el-form>\n    </div>\n    <el-table\n      ref=\"fileTable\"\n      :data=\"executeplanList\"\n      :key=\"itemplanKey\"\n      @row-click=\"handleClickTableRow\"\n      @selection-change=\"handleSelectionChange\"\n      v-loading.body=\"listLoading\"\n      element-loading-text=\"loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column\n        type=\"selection\"\n        width=\"40\">\n      </el-table-column>\n      <el-table-column label=\"编号\" align=\"center\" width=\"50\">\n        <template slot-scope=\"scope\">\n          <span v-text=\"getIndex(scope.$index)\"></span>\n        </template>\n      </el-table-column>\n      <el-table-column :show-overflow-tooltip=\"true\"  label=\"集合名\" align=\"center\" prop=\"executeplanname\" width=\"100\"/>\n      <el-table-column label=\"envid\" align=\"center\" v-if=\"show\" prop=\"envid\" width=\"50\"/>\n      <el-table-column label=\"状态\" align=\"center\" prop=\"status\" v-if=\"show\" width=\"50\"/>\n      <el-table-column label=\"业务类型\" align=\"center\" prop=\"businesstype\" width=\"70\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"执行环境\" align=\"center\" prop=\"enviromentname\" width=\"80\"/>\n      <el-table-column label=\"类型\" align=\"center\" prop=\"usetype\" width=\"50\"/>\n      <el-table-column label=\"运行模式\" align=\"center\" prop=\"runmode\" width=\"70\"/>\n      <el-table-column label=\"场景数\" align=\"center\" prop=\"scenenums\" width=\"60\"/>\n      <el-table-column label=\"用例数\" align=\"center\" prop=\"casecounts\" width=\"60\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"通知钉钉token\" align=\"center\" prop=\"dingdingtoken\" width=\"110\"/>\n      <el-table-column label=\"操作人\" align=\"center\" prop=\"creator\" width=\"60\"/>\n<!--      <el-table-column :show-overflow-tooltip=\"true\" label=\"描述\" align=\"center\" prop=\"memo\" width=\"80\"/>-->\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"110\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.createTime) }}</template>\n      </el-table-column>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"最后修改时间\" align=\"center\" prop=\"lastmodifyTime\" width=\"110\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.lastmodifyTime) }}\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"管理\" align=\"center\" width=\"550\"\n                       v-if=\"hasPermission('executeplan:update')  || hasPermission('executeplan:delete')\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"warning\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showUpdateexecuteplanDialog(scope.$index)\"\n          >修改</el-button>\n          <el-button\n            type=\"danger\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:delete') && scope.row.id !== id\"\n            @click.native.prevent=\"removeexecuteplan(scope.$index)\"\n          >删除</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showstopbatchDialog(scope.$index)\"\n          >停止运行</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showplanparamsDialog(scope.$index)\"\n          >全局Header</el-button>\n\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showtestsceneDialog(scope.$index)\"\n          >测试场景</el-button>\n\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showtestplanConditionDialog(scope.$index)\"\n          >前置条件</el-button>\n\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"search.page\"\n      :page-size=\"search.size\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20, 30, 40]\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n    ></el-pagination>\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 400px; margin-left:50px;\"\n        :model=\"tmpexecuteplan\"\n        ref=\"tmpexecuteplan\"\n      >\n        <el-form-item label=\"集合名\" prop=\"executeplanname\" required>\n          <el-input\n            type=\"text\"\n            maxlength=\"50\"\n            prefix-icon=\"el-icon-edit\"\n            auto-complete=\"off\"\n            v-model.trim=\"tmpexecuteplan.executeplanname\"\n          />\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"usetype\" required>\n          <el-select v-model=\"tmpexecuteplan.usetype\" placeholder=\"类型\" style=\"width:100%\">\n            <el-option label=\"功能\" value=\"功能\" />\n            <el-option label=\"性能\" value=\"性能\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"执行环境\" prop=\"enviromentname\"  required>\n          <el-select v-model=\"tmpexecuteplan.enviromentname\" placeholder=\"执行环境\" style=\"width:100%\" @change=\"enviromentselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(envname, index) in enviromentnameList\" :key=\"index\">\n              <el-option :label=\"envname.enviromentname\" :value=\"envname.enviromentname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"业务类型\" prop=\"businesstype\"  required>\n          <el-select v-model=\"tmpexecuteplan.businesstype\" placeholder=\"业务类型\" style=\"width:100%\" @change=\"businesstypeselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(dicitem, index) in planbusinessdiclist\" :key=\"index\">\n              <el-option :label=\"dicitem.dicitmevalue\" :value=\"dicitem.dicitmevalue\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n          <el-form-item label=\"运行模式\" prop=\"runmode\" required>\n            <el-select v-model=\"tmpexecuteplan.runmode\" placeholder=\"运行模式\" style=\"width:100%\">\n              <el-option label=\"单机运行\" value=\"单机运行\" />\n              <el-option label=\"多机并行\" value=\"多机并行\" />\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"钉钉通知token\" prop=\"dingdingtoken\">\n            <el-input\n              maxlength=\"200\"\n              type=\"text\"\n              prefix-icon=\"el-icon-message\"\n              auto-complete=\"off\"\n              v-model=\"tmpexecuteplan.dingdingtoken\"\n            />\n          </el-form-item>\n\n        <el-form-item label=\"备注\" prop=\"memo\">\n          <el-input\n            maxlength=\"200\"\n            type=\"text\"\n            prefix-icon=\"el-icon-message\"\n            auto-complete=\"off\"\n            v-model=\"tmpexecuteplan.memo\"\n          />\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"dialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addexecuteplan\"\n        >保存\n        </el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updateexecuteplan\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"loadcase\" :visible.sync=\"casedialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form :inline=\"true\" :model=\"searchcase\" ref=\"searchcase\" >\n          <span v-if=\"hasPermission('apicases:search')\">\n          <el-form-item label=\"微服务:\" prop=\"deployunitname\" required>\n            <el-select v-model=\"searchcase.deployunitname\" placeholder=\"微服务\" @change=\"selectChanged($event)\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(depname, index) in deployunitList\" :key=\"index\">\n                <el-option :label=\"depname.deployunitname\" :value=\"depname.deployunitname\" required/>\n              </div>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"API:\">\n            <el-select v-model=\"searchcase.apiname\" placeholder=\"api名\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(api, index) in apiList\" :key=\"index\">\n                <el-option :label=\"api.apiname\" :value=\"api.apiname\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchcaseBy\" :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n        </el-form>\n      </div>\n      <el-table\n        ref=\"caseTable\"\n        :data=\"testcaselastList\"\n        :key=\"itemcaseKey\"\n        @row-click=\"casehandleClickTableRow\"\n        @selection-change=\"casehandleSelectionChange\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"getIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n\n        <el-table-column type=\"selection\" prop=\"status\" width=\"50\"/>\n        <el-table-column label=\"apiid\" v-if=\"show\" align=\"center\" prop=\"apiid\" width=\"120\"/>\n        <el-table-column label=\"deployunitid\" v-if=\"show\" align=\"center\" prop=\"deployunitid\" width=\"120\"/>\n        <el-table-column label=\"用例名\" align=\"center\" prop=\"casename\" width=\"120\"/>\n        <el-table-column label=\"微服务\" align=\"center\" prop=\"deployunitname\" width=\"120\"/>\n        <el-table-column label=\"API\" align=\"center\" prop=\"apiname\" width=\"120\"/>\n        <el-table-column label=\"期望值\" align=\"center\" prop=\"expect\" width=\"120\"/>\n      </el-table>\n      <el-pagination\n        @size-change=\"casehandleSizeChange\"\n        @current-change=\"casehandleCurrentChange\"\n        :current-page=\"searchcase.page\"\n        :page-size=\"searchcase.size\"\n        :total=\"casetotal\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n      ></el-pagination>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"casedialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addexecuteplantestcase\"\n        >装载</el-button>\n        <el-button\n          type=\"warning\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"removeexecuteplantestcase\"\n        >取消装载</el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"loadbatch\" :visible.sync=\"batchdialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form  :model=\"tmpplanbatch\" ref=\"tmpplanbatch\" >\n          <el-form-item label=\"执行计划：\"  prop=\"batchname\" required>\n            <el-input\n              type=\"text\"\n              maxlength=\"50\"\n              style=\"width:60%\"\n              placeholder=\"例如2020-10-21-tag-101\"\n              prefix-icon=\"el-icon-edit\"\n              auto-complete=\"off\"\n              v-model.trim=\"tmpplanbatch.batchname\"\n            />\n          </el-form-item>\n          <el-form-item label=\"执行类型：\" prop=\"exectype\" required >\n            <el-select v-model=\"tmpplanbatch.exectype\" placeholder=\"执行类型\" style=\"width:60%\" @change=\"exectypeselectChanged($event)\">\n              <el-option label=\"立即执行\" value=\"立即执行\"></el-option>\n              <el-option label=\"某天定时\" value=\"某天定时\"></el-option>\n              <el-option label=\"每天定时\" value=\"每天定时\"></el-option>\n            </el-select>\n          </el-form-item>\n          <div v-if=\"datevisible\">\n            <el-form-item label=\"选择日期：\" prop=\"exectmpdate\" required >\n              <el-date-picker style=\"width:60%\"\n                              v-model=\"tmpplanbatch.exectmpdate\"\n                              type=\"date\"\n                              format=\"yyyy-MM-dd\"\n                              value-format=\"yyyy-MM-dd\"\n                              placeholder=\"选择日期\">\n              </el-date-picker>\n            </el-form-item>\n          </div>\n          <div v-if=\"timevisible\">\n            <el-form-item label=\"选择时刻：\" prop=\"exectime\" required >\n              <el-time-select style=\"width:60%\"\n                              v-model=\"tmpplanbatch.exectime\"\n                              :picker-options=\"{\n              start: '00:05',\n              step: '00:10',\n              end: '23:55'\n            }\"\n                              placeholder=\"选择时间\">\n              </el-time-select>\n            </el-form-item>\n          </div>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"batchdialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          :loading=\"execbtnLoading\"\n          @click.native.prevent=\"savebatchandexecuteplancase\"\n        >执行</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title='停止运行计划' :visible.sync=\"stopbatchdialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form  :model=\"tmpstopplanbatch\" ref=\"tmpstopplanbatch\" >\n          <el-form-item label=\"执行计划：\" prop=\"batchname\" required >\n            <el-select v-model=\"tmpstopplanbatch.batchname\" clearable style=\"width:70%\" placeholder=\"执行计划\" @change=\"stopplanbatchselectChanged($event)\">\n              <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n              <div v-for=\"(tmpstopplanbatch, index) in stopplanbatchList\" :key=\"index\">\n                <el-option :label=\"tmpstopplanbatch.batchname\" :value=\"tmpstopplanbatch.batchname\" required/>\n              </div>\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"stopbatchdialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          @click.native.prevent=\"updatebatchstatus\"\n        >停止</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"全局Header\" :visible.sync=\"CollectionParamsFormVisible\">\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\">\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              v-if=\"hasPermission('executeplan:add')\"\n              @click.native.prevent=\"showAddapiparamsDialog\"\n            >添加全局Header</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <el-table\n        :data=\"paramsList\"\n        :key=\"itemKey\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"45\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"paramgetIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Header\" align=\"center\" prop=\"globalheadername\" width=\"280\"/>\n        <el-table-column label=\"管理\" align=\"center\"\n                         v-if=\"hasPermission('executeplan:update')  || hasPermission('executeplan:delete')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"warning\"\n              size=\"mini\"\n              v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n              @click.native.prevent=\"showUpdateparamsDialog(scope.$index)\"\n            >修改</el-button>\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('executeplan:delete') && scope.row.id !== id\"\n              @click.native.prevent=\"removeexecuteplanparam(scope.$index)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n\n    <el-dialog title=\"集合前置条件\" :visible.sync=\"ConditionFormVisible\">\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\">\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              v-if=\"hasPermission('testscene:scenecasecondition')\"\n              @click.native.prevent=\"ShowAddPlancaseconditionDialog\"\n            >添加前置接口</el-button>\n            <!--            <el-button-->\n            <!--              type=\"primary\"-->\n            <!--              size=\"mini\"-->\n            <!--              icon=\"el-icon-plus\"-->\n            <!--              v-if=\"hasPermission('testscene:scenecasecondition')\"-->\n            <!--              @click.native.prevent=\"AddcasedbconditionDialog\"-->\n            <!--            >添加前置数据库</el-button>-->\n            <!--            <el-button-->\n            <!--              type=\"primary\"-->\n            <!--              size=\"mini\"-->\n            <!--              icon=\"el-icon-plus\"-->\n            <!--              v-if=\"hasPermission('testscene:scenecasecondition')\"-->\n            <!--              @click.native.prevent=\"showAddapiparamsDialog\"-->\n            <!--            >添加前置脚本</el-button>-->\n\n            <!--            <el-button-->\n            <!--              type=\"primary\"-->\n            <!--              size=\"mini\"-->\n            <!--              icon=\"el-icon-plus\"-->\n            <!--              v-if=\"hasPermission('testscene:scenecasecondition')\"-->\n            <!--              @click.native.prevent=\"showAddapiparamsDialog\"-->\n            <!--            >添加前置延时</el-button>-->\n          </el-form-item>\n        </el-form>\n      </div>\n      <!--      1.接口前置条件：-->\n      <el-table\n        :data=\"apiconditioncaseList\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"45\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"apiconditioncaseIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"前置条件名\" align=\"center\" prop=\"subconditionname\" width=\"150\"/>\n        <el-table-column label=\"前置接口\" align=\"center\" prop=\"casename\" width=\"150\"/>\n        <el-table-column label=\"所属集合\" align=\"center\" prop=\"conditionname\" width=\"150\"/>\n\n        <el-table-column label=\"管理\" align=\"center\"\n                         v-if=\"hasPermission('testscene:caseupdateapicondition')  || hasPermission('testscene:casedeleteapicondition')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"warning\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:caseupdateapicondition') && scope.row.id !== id\"\n              @click.native.prevent=\"showUpdateapiconditionDialog(scope.$index)\"\n            >修改</el-button>\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:casedeleteapicondition') && scope.row.id !== id\"\n              @click.native.prevent=\"removecaseapicondition(scope.$index)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n\n    <el-dialog :title=\"SceneapiconditiontextMap[SceneconditiondialogStatus]\" :visible.sync=\"SceneconditiondialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 450px; margin-left:50px;\"\n        :model=\"tmpsceneapicondition\"\n        ref=\"tmpsceneapicondition\"\n      >\n\n        <el-form-item label=\"前置条件名\" prop=\"subconditionname\" required>\n          <el-input\n            type=\"text\"\n            maxlength=\"30\"\n            prefix-icon=\"el-icon-edit\"\n            auto-complete=\"off\"\n            v-model=\"tmpsceneapicondition.subconditionname\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"微服务\" prop=\"deployunitname\" required >\n          <el-select v-model=\"tmpsceneapicondition.deployunitname\" filterable placeholder=\"微服务\" style=\"width:100%\" @change=\"sceneconditiondeployunitselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(depunitname, index) in deployunitList\" :key=\"index\">\n              <el-option :label=\"depunitname.deployunitname\" :value=\"depunitname.deployunitname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item  label=\"模块:\" prop=\"modelname\" >\n          <el-select v-model=\"tmpsceneapicondition.modelname\" filterable placeholder=\"模块\" style=\"width:100%\" @change=\"sceneconditionmodelselectChanged($event)\">\n            <el-option label=\"请选择\" value />\n            <div v-for=\"(model, index) in sceneconditionmodelList\" :key=\"index\">\n              <el-option :label=\"model.modelname\" :value=\"model.modelname\" />\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"API\" prop=\"apiname\" required >\n          <el-select v-model=\"tmpsceneapicondition.apiname\" filterable placeholder=\"API\" style=\"width:100%\" @change=\"sceneconditionapiselectChanged($event)\">\n            <el-option label=\"请选择\" value />\n            <div v-for=\"(api, index) in sceneconditionapiList\" :key=\"index\">\n              <el-option :label=\"api.apiname\" :value=\"api.apiname\"/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"接口\" prop=\"casename\" required >\n          <el-select v-model=\"tmpsceneapicondition.casename\" filterable placeholder=\"接口\" style=\"width:100%\" @change=\"sceneconditiontestcaseselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(testcase, index) in sceneconditioncaseList\" :key=\"index\">\n              <el-option :label=\"testcase.casename\" :value=\"testcase.casename\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"SceneconditiondialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"danger\"\n          v-if=\"SceneconditiondialogStatus === 'add'\"\n          @click.native.prevent=\"$refs['tmpapicondition'].resetFields()\"\n        >重置</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"SceneconditiondialogStatus === 'add'\"\n          @click.native.prevent=\"addscenecondition\"\n        >添加</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"SceneconditiondialogStatus === 'update'\"\n          @click.native.prevent=\"updatescenecondition\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :title=\"paramstextMap[ParamsdialogStatus]\" :visible.sync=\"modifyparamdialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 600px; margin-left:30px;\"\n        :model=\"tmpparam\"\n        ref=\"tmpparam\"\n      >\n        <el-form-item label=\"全局Header:\"  prop=\"globalheadername\" required >\n          <el-select style=\"width:415px\" v-model=\"tmpparam.globalheadername\" placeholder=\"全局Header\" @change=\"notexistheaderselectChanged($event)\">\n            <div v-for=\"(globalheader, index) in globalheaderallList\" :key=\"index\">\n              <el-option :label=\"globalheader.globalheadername\" :value=\"globalheader.globalheadername\" />\n            </div>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"modifyparamdialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"ParamsdialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addparams\"\n        >添加</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"ParamsdialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updatparam\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog width=\"840px\" title='测试场景' :visible.sync=\"testscenedialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form :inline=\"true\"  >\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"ShowAddScenceDialog\" :loading=\"btnLoading\">添加场景</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n      <el-table\n        ref=\"testplansceneTable\"\n        :data=\"testplansceneList\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"planscenegetIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"场景名\" align=\"center\" prop=\"scenename\" width=\"280\"/>\n        <el-table-column width=\"120\" align=\"center\" label=\"场景顺序\">\n          <template slot-scope=\"{row}\">\n            <template v-if=\"row.edit\">\n              <el-input v-model=\"row.ordernum\" class=\"edit-input\"\n                        oninput=\"value=value.replace(/[^\\d]/g,'')\"\n                        maxLength='10'\n                        size=\"small\" />\n              <el-button\n                class=\"cancel-btn\"\n                size=\"small\"\n                icon=\"el-icon-refresh\"\n                type=\"warning\"\n                @click=\"cancelEdit(row)\"\n              >\n                取消\n              </el-button>\n            </template>\n            <span v-else>{{ row.ordernum }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"操作\" width=\"120\">\n          <template slot-scope=\"{row}\">\n            <el-button\n              v-if=\"row.edit\"\n              type=\"success\"\n              size=\"small\"\n              icon=\"el-icon-circle-check-outline\"\n              @click=\"confirmEdit(row)\"\n            >\n              保存\n            </el-button>\n            <el-button\n              v-else\n              type=\"primary\"\n              size=\"small\"\n              @click=\"row.edit=!row.edit\"\n            >\n              设置顺序\n            </el-button>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"管理\" align=\"center\" width=\"220\"\n                         v-if=\"hasPermission('testscene:deletecase')  || hasPermission('testscene:scenecondition')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:deletecase') && scope.row.id !== id\"\n              @click.native.prevent=\"removetestplanscene(scope.$index)\"\n            >删除</el-button>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:scenecondition') && scope.row.id !== id\"\n              @click.native.prevent=\"showtestscenecaseConditionDialog(scope.$index)\"\n            >前置条件</el-button>\n          </template>\n        </el-table-column>\n\n\n      </el-table>\n      <el-pagination\n        @size-change=\"planscenehandleSizeChange\"\n        @current-change=\"planscenehandleCurrentChange\"\n        :current-page=\"searchscene.page\"\n        :page-size=\"searchscene.size\"\n        :total=\"testplanscenetotal\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n      ></el-pagination>\n    </el-dialog>\n\n    <el-dialog width=\"800px\" title='添加场景' :visible.sync=\"addtestscenedialogFormVisible\">\n      <el-table\n        ref=\"addsceneTable\"\n        :data=\"testsceneList\"\n        :key=\"itemaddsceneKey\"\n        @row-click=\"addscenehandleClickTableRow\"\n        @selection-change=\"addscenehandleSelectionChange\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"addscenegetIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n\n        <el-table-column type=\"selection\" prop=\"status\" width=\"50\"/>\n        <el-table-column label=\"场景名\" align=\"center\" prop=\"scenename\" width=\"370\"/>\n        <el-table-column label=\"场景类型\" align=\"center\" prop=\"usetype\" width=\"280\"/>\n      </el-table>\n      <el-pagination\n        @size-change=\"addscenehandleSizeChange\"\n        @current-change=\"addscenehandleCurrentChange\"\n        :current-page=\"addsearchscene.page\"\n        :page-size=\"addsearchscene.size\"\n        :total=\"addscenetotal\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n      ></el-pagination>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"addtestscenedialogFormVisible = false\">取消</el-button>\n\n        <el-button\n          type=\"primary\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addplantestscene\"\n        >添加</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :title=\"apiconditiontextMap[apiconditiondialogStatus]\" :visible.sync=\"caseconditiondialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 450px; margin-left:50px;\"\n        :model=\"tmpapicondition\"\n        ref=\"tmpapicondition\"\n      >\n\n        <el-form-item label=\"前置条件名\" prop=\"subconditionname\" required>\n          <el-input\n            type=\"text\"\n            maxlength=\"30\"\n            prefix-icon=\"el-icon-edit\"\n            auto-complete=\"off\"\n            v-model=\"tmpapicondition.subconditionname\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"微服务\" prop=\"deployunitname\" required >\n          <el-select v-model=\"tmpapicondition.deployunitname\" filterable placeholder=\"微服务\" style=\"width:100%\" @change=\"apiconditiondeployunitselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(depunitname, index) in deployunitList\" :key=\"index\">\n              <el-option :label=\"depunitname.deployunitname\" :value=\"depunitname.deployunitname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item  label=\"模块:\" prop=\"modelname\" >\n          <el-select v-model=\"tmpapicondition.modelname\" filterable placeholder=\"模块\" style=\"width:100%\"  @change=\"apiconditionmodelselectChanged($event)\">\n            <el-option label=\"请选择\" value />\n            <div v-for=\"(model, index) in apiconditionmodelList\" :key=\"index\">\n              <el-option :label=\"model.modelname\" :value=\"model.modelname\" />\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"API\" prop=\"apiname\" required >\n          <el-select v-model=\"tmpapicondition.apiname\" filterable placeholder=\"API\" style=\"width:100%\" @change=\"apiconditionapiselectChanged($event)\">\n            <el-option label=\"请选择\" value />\n            <div v-for=\"(api, index) in apiconditionapiList\" :key=\"index\">\n              <el-option :label=\"api.apiname\" :value=\"api.apiname\"/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"接口\" prop=\"casename\" required >\n          <el-select v-model=\"tmpapicondition.casename\" filterable placeholder=\"接口\" style=\"width:100%\" @change=\"apiconditiontestcaseselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(testcase, index) in apiconditioncaseList\" :key=\"index\">\n              <el-option :label=\"testcase.casename\" :value=\"testcase.casename\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"caseconditiondialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"danger\"\n          v-if=\"apiconditiondialogStatus === 'add'\"\n          @click.native.prevent=\"$refs['tmpapicondition'].resetFields()\"\n        >重置</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"apiconditiondialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addapicondition\"\n        >添加</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"apiconditiondialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updateapicondition\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"场景前置条件\" :visible.sync=\"scenecaseConditionFormVisible\">\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\">\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              v-if=\"hasPermission('testscene:scenecasecondition')\"\n              @click.native.prevent=\"ShowAddPlanSceneconditionDialog\"\n            >添加前置接口</el-button>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              v-if=\"hasPermission('testscene:scenecasecondition')\"\n              @click.native.prevent=\"showAddScenedelayconditionDialog\"\n            >添加前置延时</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n            1.接口前置条件：\n\n\n      <el-table\n        :data=\"apiconditioncaseList\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"45\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"apiconditioncaseIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"前置条件名\" align=\"center\" prop=\"subconditionname\" width=\"150\"/>\n        <el-table-column label=\"前置接口\" align=\"center\" prop=\"casename\" width=\"150\"/>\n        <el-table-column label=\"所属场景\" align=\"center\" prop=\"conditionname\" width=\"150\"/>\n\n        <el-table-column label=\"管理\" align=\"center\"\n                         v-if=\"hasPermission('testscene:caseupdateapicondition')  || hasPermission('testscene:casedeleteapicondition')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"warning\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:caseupdateapicondition') && scope.row.id !== id\"\n              @click.native.prevent=\"showUpdatesceneconditionDialog(scope.$index)\"\n            >修改</el-button>\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:casedeleteapicondition') && scope.row.id !== id\"\n              @click.native.prevent=\"removecasescenecondition(scope.$index)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n            2.延时前置条件：\n\n\n      <el-table\n        :data=\"delayconditionList\"\n        :key=\"itemKey\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"getIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"前置条件名\" align=\"center\" prop=\"subconditionname\" width=\"200\"/>\n        <el-table-column label=\"等待时间(秒)\" align=\"center\" prop=\"delaytime\" width=\"150\">\n        </el-table-column>\n        <el-table-column label=\"管理\" align=\"center\"\n                         v-if=\"hasPermission('delaycondition:update')  || hasPermission('delaycondition:delete')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"warning\"\n              size=\"mini\"\n              v-if=\"hasPermission('delaycondition:update') && scope.row.id !== id\"\n              @click.native.prevent=\"showUpdatedelayconditionDialog(scope.$index)\"\n            >修改</el-button>\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('delaycondition:delete') && scope.row.id !== id\"\n              @click.native.prevent=\"removedelaycondition(scope.$index)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!--      2.数据库前置条件：-->\n\n      <!--      <el-table-->\n      <!--        :data=\"dbconditioncaseList\"-->\n      <!--        v-loading.body=\"listLoading\"-->\n      <!--        element-loading-text=\"loading\"-->\n      <!--        border-->\n      <!--        fit-->\n      <!--        highlight-current-row-->\n      <!--      >-->\n      <!--        <el-table-column label=\"编号\" align=\"center\" width=\"45\">-->\n      <!--          <template slot-scope=\"scope\">-->\n      <!--            <span v-text=\"dbconditioncaseIndex(scope.$index)\"></span>-->\n      <!--          </template>-->\n      <!--        </el-table-column>-->\n      <!--        <el-table-column label=\"接口条件\" align=\"center\" prop=\"subconditionname\" width=\"150\"/>-->\n      <!--        <el-table-column label=\"接口\" align=\"center\" prop=\"conditionname\" width=\"150\"/>-->\n\n      <!--        <el-table-column label=\"管理\" align=\"center\"-->\n      <!--                         v-if=\"hasPermission('testscene:caseupdatedbcondition')  || hasPermission('testscene:casedeletedbcondition')\">-->\n      <!--          <template slot-scope=\"scope\">-->\n      <!--            <el-button-->\n      <!--              type=\"warning\"-->\n      <!--              size=\"mini\"-->\n      <!--              v-if=\"hasPermission('testscene:caseupdatedbcondition') && scope.row.id !== id\"-->\n      <!--              @click.native.prevent=\"showUpdateparamsDialog(scope.$index)\"-->\n      <!--            >修改</el-button>-->\n      <!--            <el-button-->\n      <!--              type=\"danger\"-->\n      <!--              size=\"mini\"-->\n      <!--              v-if=\"hasPermission('testscene:casedeletedbcondition') && scope.row.id !== id\"-->\n      <!--              @click.native.prevent=\"removeexecuteplanparam(scope.$index)\"-->\n      <!--            >删除</el-button>-->\n      <!--          </template>-->\n      <!--        </el-table-column>-->\n      <!--      </el-table>-->\n\n    </el-dialog>\n\n    <el-dialog :title=\"DelaytextMap[DelaydialogStatus]\" :visible.sync=\"DelaydialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 600px; margin-left:50px;\"\n        :model=\"tmpdelaycondition\"\n        ref=\"tmpdelaycondition\"\n      >\n        <el-form-item label=\"条件名\" prop=\"subconditionname\" required>\n          <el-input\n            type=\"text\"\n            maxlength=\"30\"\n            prefix-icon=\"el-icon-edit\"\n            auto-complete=\"off\"\n            v-model=\"tmpdelaycondition.subconditionname\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"等待时间(秒)\" prop=\"delaytime\" required>\n          <el-input\n            placeholder=\"等待时间(秒)\"\n            oninput=\"value=value.replace(/[^\\d]/g,'')\"\n            maxLength='10'\n            type=\"number\"\n            prefix-icon=\"el-icon-message\"\n            auto-complete=\"off\"\n            v-model=\"tmpdelaycondition.delaytime\"\n          />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"DelaydialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"danger\"\n          v-if=\"DelaydialogStatus === 'add'\"\n          @click.native.prevent=\"$refs['tmpdelaycondition'].resetFields()\"\n        >重置</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"DelaydialogStatus === 'add'\"\n          @click.native.prevent=\"adddelaycondition\"\n        >添加</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"DelaydialogStatus === 'update'\"\n          @click.native.prevent=\"updatedelaycondition\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n<script>\n  import {\n    getapicasesList as getapicasesList,\n    search as getapicases\n  } from '@/api/assets/apicases'\n  import { search as getapiList } from '@/api/deployunit/api'\n  import { getdepunitLists } from '@/api/deployunit/depunit'\n  import { getstopplanbatchList as getstopplanbatchList, updatebatchstatus } from '@/api/executecenter/executeplanbatch'\n  import { searchcases as searchtestplancases, addexecuteplantestcase, removeexecuteplantestcase } from '@/api/executecenter/executeplantestcase'\n  import { checkplancondition as checkplancondition, search, addexecuteplan, updateexecuteplan, removeexecuteplan, executeplan, updateexecuteplanstatus } from '@/api/executecenter/executeplan'\n  import { unix2CurrentTime } from '@/utils'\n  import { getenviromentallList as getenviromentallList } from '@/api/enviroment/testenviroment'\n  import { getdatabydiccodeList as getdatabydiccodeList } from '@/api/system/dictionary'\n  import { getglobalheaderallList } from '@/api/testvariables/globalheader'\n  import { mapGetters } from 'vuex'\n  import { search as searchscence } from '@/api/executecenter/testscene'\n  import { addapicasesdebug, removeapicasesdebug, updateapicasesdebug, searchheaderbyepid } from '@/api/assets/globalheaderuse'\n  import { addtestplantestscene, findscenebyexecplanid, updateplanscenenorder } from '@/api/executecenter/testplantestscene'\n  import { getapiListbydeploy as getapiListbydeploy } from '@/api/deployunit/api'\n  import { searchdeployunitmodel } from '@/api/deployunit/depunitmodel'\n  import { search as searchapicondition, addapicondition, removeapicondition, updateapicondition } from '@/api/condition/apicondition'\n  import { findcasesbyname as findcasesbyname } from '@/api/assets/apicases'\n  import { removetestplanscene } from '@/api/executecenter/testplantestscene'\n  import { adddelaycondition, updatedelaycondition, removedelaycondition, searchbytype } from '@/api/condition/delaycondition'\n  export default {\n    name: '测试集合',\n    filters: {\n      statusFilter(status) {\n        const statusMap = {\n          published: 'success',\n          draft: 'gray',\n          deleted: 'danger'\n        }\n        return statusMap[status]\n      }\n    },\n    data() {\n      return {\n        id: null,\n        datevisible: false,\n        timevisible: false,\n        itemKey: null,\n        itemplanKey: null,\n        itemcaseKey: null,\n        planbusinessdiclist: [], // 执行计划字典表业务类型列表\n        tmpexecuteplanname: '',\n        tmpcasedeployunitname: null,\n        tmpcaseapiname: null,\n        tmpcaseexecuteplanid: null,\n        tmpcasecasetype: null,\n        show: false,\n        PerformanceVisible: false, // 显示性能运行模式\n        enviromentnameList: [], // 环境列表\n        apiList: [], // api列表\n        deployunitList: [], // 微服务列表\n        multipleSelection: [], // 执行计划表格被选中的内容\n        casemultipleSelection: [], // 用例表格被选中的内容\n        globalheaderallList: [], // 全局header列表\n        executeplanList: [], // 执行计划列表\n        testcaseList: [], // 用例列表\n        testcaselastList: [], // 经过用例列表和已装载的用例组合出的结果列表\n        executeplancaseList: [], // 执行计划装载用例列表\n        executeplancaseexistList: [], // 查询执行计划已存在的用例列表\n        executeplancaseremovetList: [], // 查询执行计划需要删除存在的用例列表\n        executeplanstopList: [], // 停止执行计划列表\n        tmpplanbatchList: [], // 计划批次列表\n        paramsList: [], // 参数列表\n        addtestscenelastList: [],\n        testplansceneList: [],\n        testsceneList: [], // 列表\n        addtestsceneList: [], // 列表\n        apiconditioncaseList: [], // 列表\n        sceneconditioncaseList: [], // 列表\n        apiconditionmodelList: [],\n        sceneconditionmodelList: [],\n        apiconditionapiList: [],\n        sceneconditionapiList: [],\n        itemaddsceneKey: null,\n        scenemultipleSelection: [], // 查询用例表格被选中的内容\n        delayconditionList: [],\n        stopplanbatchList: [], // 期望停止的计划\n        tmptestscenename: null,\n        scenetotal: 0,\n        addscenetotal: 0,\n        testplanscenetotal: 0,\n        SceneapiconditiontextMap: {\n          update: '修改前置接口',\n          add: '添加前置接口'\n        },\n        DelaytextMap: {\n          update: '修改延时条件',\n          add: '添加延时条件'\n        },\n        addsearchscene: {\n          page: 1,\n          size: 10,\n          casetype: null,\n          projectid: ''\n        },\n        searchscene: {\n          page: 1,\n          size: 10,\n          testplanid: 0,\n          projectid: ''\n        },\n        listLoading: false, // 数据加载等待动画\n        caselistLoading: false, // 用例列表页面数据加载等待动画\n        total: 0, // 数据总数\n        casetotal: 0, // 用例数据总数\n        apiQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          deployunitname: '' // 获取字典表入参\n        },\n        listQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          executeplanname: '',\n          projectid: '',\n          creator: ''\n        },\n        caselistQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          deployunitname: null,\n          apiname: null,\n          executeplanid: null,\n          casetype: null\n        },\n        ParamsdialogStatus: 'add',\n        DelaydialogStatus: 'add',\n        dialogStatus: 'add',\n        SceneconditiondialogStatus: 'add',\n        dialogFormVisible: false,\n        casedialogFormVisible: false,\n        batchdialogFormVisible: false,\n        CollectionParamsFormVisible: false,\n        modifyparamdialogFormVisible: false,\n        ConditionFormVisible: false,\n        testscenedialogFormVisible: false,\n        addtestscenedialogFormVisible: false,\n        scenecaseConditionFormVisible: false,\n        SceneconditiondialogFormVisible: false,\n        DelaydialogFormVisible: false,\n        stopbatchdialogFormVisible: false, // 停止运行\n        loadcase: '装载用例',\n        loadbatch: '执行计划',\n        textMap: {\n          updateRole: '修改测试集合',\n          update: '修改测试集合',\n          add: '添加测试集合'\n        },\n        apiconditiontextMap: {\n          update: '修改前置接口',\n          add: '添加前置接口'\n        },\n        apiconditiondialogStatus: 'add',\n        caseconditiondialogFormVisible: false,\n        tmpapicondition: {\n          page: 1,\n          size: 10,\n          id: '',\n          modelid: 0,\n          modelname: '',\n          conditionid: '',\n          subconditionname: '',\n          conditionname: '',\n          deployunitid: '',\n          deployunitname: '',\n          apiname: '',\n          apiid: '',\n          caseid: '',\n          casename: '',\n          memo: '',\n          conditiontype: '',\n          creator: '',\n          projectid: ''\n        },\n        tmpsceneapicondition: {\n          page: 1,\n          size: 10,\n          id: '',\n          modelid: 0,\n          modelname: '',\n          conditionid: '',\n          subconditionname: '',\n          conditionname: '',\n          deployunitid: '',\n          deployunitname: '',\n          apiname: '',\n          apiid: '',\n          caseid: '',\n          casename: '',\n          memo: '',\n          conditiontype: '',\n          creator: '',\n          projectid: ''\n        },\n        tmpdelaycondition: {\n          id: '',\n          subconditionname: '',\n          conditionid: '',\n          conditionname: '',\n          conditiontype: '',\n          delaytime: '',\n          creator: '',\n          projectid: ''\n        },\n        paramstextMap: {\n          updateRole: '修改参数',\n          update: '修改参数',\n          add: '添加参数'\n        },\n        diclevelQuery: {\n          page: 1, // 页码\n          size: 100, // 每页数量\n          diccode: 'planbusinesstype' // 获取字典表入参\n        },\n        btnLoading: false, // 按钮等待动画\n        casebtnLoading: false, // 按钮等待动画\n        execbtnLoading: false, // 按钮等待动画\n        tmpexecuteplan: {\n          id: '',\n          executeplanname: '',\n          enviromentname: '',\n          envid: '',\n          status: '',\n          usetype: '',\n          businesstype: '',\n          ip: '',\n          memo: '',\n          creator: '',\n          dingdingtoken: '',\n          runmode: '',\n          projectid: ''\n        },\n        tmpplanbatch: {\n          executeplanid: '',\n          executeplanname: '',\n          batchid: '',\n          batchname: '',\n          creator: '',\n          exectype: '',\n          exectmpdate: '',\n          execdate: '',\n          exectime: '',\n          projectid: ''\n        },\n        tmpstopplanbatch: {\n          executeplanid: '',\n          batchid: '',\n          batchname: '',\n          projectid: ''\n        },\n        tmpplanenv: {\n          id: '',\n          envid: '',\n          projectid: '',\n          enviromentname: ''\n        },\n        tmpapicases: {\n          id: '',\n          casename: '',\n          deployunitname: '',\n          apiname: '',\n          casejmxname: '',\n          casecontent: '',\n          expect: '',\n          level: '',\n          memo: '',\n          creator: 'admin'\n        },\n        tmpparam: {\n          id: '',\n          executeplanid: '',\n          paramstype: '',\n          keyname: '',\n          keyvalue: '',\n          globalheadername: '',\n          globalheaderid: 0\n        },\n        tmpep: {\n          executeplanid: ''\n        },\n        search: {\n          page: 1,\n          size: 10,\n          executeplanname: null,\n          businesstype: '',\n          creator: '',\n          projectid: ''\n        },\n        Scenedelaysearch: {\n          conditionid: null,\n          conditiontype: null,\n          projectid: null\n        },\n        searchcase: {\n          page: 1,\n          size: 10,\n          deployunitname: null,\n          apiname: null,\n          executeplanid: null,\n          casetype: null,\n          projectid: ''\n        },\n        searchparam: {\n          page: 1,\n          size: 10\n        },\n        searchapicondition: {\n          page: 1,\n          size: 10,\n          conditionid: '',\n          conditiontype: '',\n          projectid: ''\n        },\n        tmpexecplan: {\n          execplanid: 0,\n          execplanname: null\n        }\n      }\n    },\n\n    computed: {\n      ...mapGetters(['name', 'sidebar', 'projectlist', 'projectid'])\n    },\n\n    created() {\n      this.search.projectid = window.localStorage.getItem('pid')\n      this.tmpplanbatch.projectid = window.localStorage.getItem('pid')\n      this.tmpplanenv.projectid = window.localStorage.getItem('pid')\n      this.listQuery.projectid = window.localStorage.getItem('pid')\n      this.addsearchscene.projectid = window.localStorage.getItem('pid')\n      this.searchapicondition.projectid = window.localStorage.getItem('pid')\n      this.Scenedelaysearch.projectid = window.localStorage.getItem('pid')\n      this.tmpstopplanbatch.projectid = window.localStorage.getItem('pid')\n      this.getexecuteplanList()\n      // this.getapiList()\n      this.getdepunitList()\n      this.getenviromentallList()\n      this.getdatabydiccodeList()\n      this.getglobalheaderallList()\n    },\n\n    activated() {\n      // this.getapiList()\n      this.getdepunitList()\n      this.getenviromentallList()\n      this.getdatabydiccodeList()\n      this.getglobalheaderallList()\n    },\n\n    methods: {\n      getstopplanbatchList() {\n        getstopplanbatchList(this.tmpstopplanbatch).then(response => {\n          this.stopplanbatchList = response.data\n        }).catch(res => {\n          this.$message.error('加载停止计划列表失败')\n        })\n      },\n      /**\n       * 获取延时条件列表\n       */\n      getdelayconditionList() {\n        this.Scenedelaysearch.conditiontype = 'scene'\n        searchbytype(this.Scenedelaysearch).then(response => {\n          this.delayconditionList = response.data\n        }).catch(res => {\n          this.$message.error('加载测试延时条件列表失败')\n        })\n      },\n      /**\n       * 显示修改延时条件对话框\n       * @param index 延时条件下标\n       */\n      showUpdatedelayconditionDialog(index) {\n        this.DelaydialogFormVisible = true\n        this.DelaydialogStatus = 'update'\n        this.tmpdelaycondition.id = this.delayconditionList[index].id\n        this.tmpdelaycondition.subconditionname = this.delayconditionList[index].subconditionname\n        this.tmpdelaycondition.delaytime = this.delayconditionList[index].delaytime\n        this.tmpdelaycondition.creator = this.name\n      },\n      /**\n       * 删除延时条件\n       * @param index 延时条件下标\n       */\n      removedelaycondition(index) {\n        this.$confirm('删除该延时条件？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.delayconditionList[index].id\n          removedelaycondition(id).then(() => {\n            this.$message.success('删除成功')\n            this.getdelayconditionList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      updatebatchstatus(index) {\n        this.$confirm('确认停止该执行计划？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          updatebatchstatus(this.tmpstopplanbatch).then(() => {\n            this.$message.success('停止成功')\n            this.stopbatchdialogFormVisible = false\n            this.getdelayconditionList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消停止')\n        })\n      },\n      updatedelaycondition() {\n        this.$refs.tmpdelaycondition.validate(valid => {\n          if (valid) {\n            updatedelaycondition(this.tmpdelaycondition).then(() => {\n              this.$message.success('更新成功')\n              this.getdelayconditionList()\n              this.DelaydialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n            })\n          }\n        })\n      },\n      /**\n       * 添加延时条件\n       */\n      adddelaycondition() {\n        this.$refs.tmpdelaycondition.validate(valid => {\n          if (valid) {\n            adddelaycondition(this.tmpdelaycondition).then(() => {\n              this.$message.success('添加成功')\n              this.getdelayconditionList()\n              this.DelaydialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n      /**\n       * 显示添加延时条件对话框\n       */\n      showAddScenedelayconditionDialog() {\n        // 显示新增对话框\n        this.DelaydialogFormVisible = true\n        this.DelaydialogStatus = 'add'\n        this.tmpdelaycondition.id = ''\n        this.tmpdelaycondition.subconditionname = ''\n        this.tmpdelaycondition.conditionid = this.tmpsceneapicondition.conditionid\n        this.tmpdelaycondition.conditionname = this.tmpsceneapicondition.conditionname\n        this.tmpdelaycondition.conditiontype = 'scene'\n        this.tmpdelaycondition.delaytime = ''\n        this.tmpdelaycondition.creator = this.name\n        this.tmpdelaycondition.projectid = window.localStorage.getItem('pid')\n      },\n      showtestscenecaseConditionDialog(index) {\n        this.scenecaseConditionFormVisible = true\n        this.tmpsceneapicondition.conditionid = this.testplansceneList[index].id\n        this.tmpsceneapicondition.conditionname = this.testplansceneList[index].scenename\n        this.tmpsceneapicondition.conditiontype = 'scence'\n        this.searchapicondition.conditiontype = 'scence'\n        this.searchapicondition.conditionid = this.testplansceneList[index].id\n        this.Scenedelaysearch.conditionid = this.testplansceneList[index].id\n        this.getapiconditionList()\n        this.getdelayconditionList()\n      },\n      /**\n       * 删除测试场景\n       * @param index 测试场景下标\n       */\n      removetestplanscene(index) {\n        this.$confirm('删除该测试场景？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.testplansceneList[index].id\n          removetestplanscene(id).then(() => {\n            this.$message.success('删除成功')\n            this.findscenebyexecplanid()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n      showUpdateapiconditionDialog(index) {\n        this.caseconditiondialogFormVisible = true\n        this.apiconditiondialogStatus = 'update'\n        this.tmpapicondition.id = this.apiconditioncaseList[index].id\n        this.tmpapicondition.subconditionname = this.apiconditioncaseList[index].subconditionname\n        this.tmpapicondition.deployunitname = this.apiconditioncaseList[index].deployunitname\n        this.tmpapicondition.apiname = this.apiconditioncaseList[index].apiname\n        this.tmpapicondition.casename = this.apiconditioncaseList[index].casename\n        this.tmpapicondition.modelname = this.apiconditioncaseList[index].modelname\n        this.tmpapicondition.memo = this.apiconditioncaseList[index].memo\n        this.tmpapicondition.creator = this.name\n        this.tmpapicondition.projectid = window.localStorage.getItem('pid')\n      },\n\n      showUpdatesceneconditionDialog(index) {\n        this.SceneconditiondialogFormVisible = true\n        this.SceneconditiondialogStatus = 'update'\n        this.tmpsceneapicondition.id = this.apiconditioncaseList[index].id\n        this.tmpsceneapicondition.subconditionname = this.apiconditioncaseList[index].subconditionname\n        this.tmpsceneapicondition.deployunitname = this.apiconditioncaseList[index].deployunitname\n        this.tmpsceneapicondition.apiname = this.apiconditioncaseList[index].apiname\n        this.tmpsceneapicondition.casename = this.apiconditioncaseList[index].casename\n        this.tmpsceneapicondition.modelname = this.apiconditioncaseList[index].modelname\n        this.tmpsceneapicondition.memo = this.apiconditioncaseList[index].memo\n        this.tmpsceneapicondition.creator = this.name\n        this.tmpsceneapicondition.projectid = window.localStorage.getItem('pid')\n      },\n\n      updateapicondition() {\n        this.$refs.tmpapicondition.validate(valid => {\n          if (valid) {\n            updateapicondition(this.tmpapicondition).then(() => {\n              this.$message.success('更新成功')\n              this.getapiconditionList()\n              this.caseconditiondialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n            })\n          }\n        })\n      },\n\n      updatescenecondition() {\n        this.$refs.tmpsceneapicondition.validate(valid => {\n          if (valid) {\n            updateapicondition(this.tmpsceneapicondition).then(() => {\n              this.$message.success('更新成功')\n              this.getapiconditionList()\n              this.SceneconditiondialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n            })\n          }\n        })\n      },\n      removecasescenecondition(index) {\n        this.$confirm('删除该前置条件？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.apiconditioncaseList[index].id\n          removeapicondition(id).then(() => {\n            this.$message.success('删除成功')\n            this.getapiconditionList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      removecaseapicondition(index) {\n        this.$confirm('删除该前置条件？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.apiconditioncaseList[index].id\n          removeapicondition(id).then(() => {\n            this.$message.success('删除成功')\n            this.getapiconditionList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      apiconditiontestcaseselectChanged(e) {\n        for (let i = 0; i < this.apiconditioncaseList.length; i++) {\n          if (this.apiconditioncaseList[i].casename === e) {\n            this.tmpapicondition.caseid = this.apiconditioncaseList[i].id\n          }\n        }\n      },\n\n      sceneconditiontestcaseselectChanged(e) {\n        for (let i = 0; i < this.sceneconditioncaseList.length; i++) {\n          if (this.sceneconditioncaseList[i].casename === e) {\n            this.tmpsceneapicondition.caseid = this.sceneconditioncaseList[i].id\n          }\n        }\n      },\n      sceneconditionmodelselectChanged(e) {\n        this.tmpsceneapicondition.apiname = null\n        this.tmpsceneapicondition.casename = null\n        for (let i = 0; i < this.sceneconditionmodelList.length; i++) {\n          if (this.sceneconditionmodelList[i].modelname === e) {\n            this.tmpsceneapicondition.modelid = this.sceneconditionmodelList[i].id\n          }\n        }\n        if (e === '') {\n          this.tmpsceneapicondition.modelid = 0\n          this.tmpsceneapicondition.modelname = ''\n        }\n        getapiListbydeploy(this.tmpsceneapicondition).then(response => {\n          this.sceneconditionapiList = response.data\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      apiconditionmodelselectChanged(e) {\n        this.tmpapicondition.apiname = null\n        this.tmpapicondition.casename = null\n        for (let i = 0; i < this.apiconditionmodelList.length; i++) {\n          if (this.apiconditionmodelList[i].modelname === e) {\n            this.tmpapicondition.modelid = this.apiconditionmodelList[i].id\n          }\n        }\n        if (e === '') {\n          this.tmpapicondition.modelid = 0\n          this.tmpapicondition.modelname = ''\n        }\n        getapiListbydeploy(this.tmpapicondition).then(response => {\n          this.apiconditionapiList = response.data\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      apiconditionapiselectChanged(e) {\n        this.tmpapicondition.casename = null\n        for (let i = 0; i < this.apiconditionapiList.length; i++) {\n          if (this.apiconditionapiList[i].apiname === e) {\n            this.tmpapicondition.apiid = this.apiconditionapiList[i].id\n          }\n        }\n        findcasesbyname(this.tmpapicondition).then(response => {\n          this.apiconditioncaseList = response.data\n        }).catch(res => {\n          this.$message.error('加载apicase列表失败')\n        })\n      },\n\n      sceneconditionapiselectChanged(e) {\n        this.tmpsceneapicondition.casename = null\n        for (let i = 0; i < this.sceneconditionapiList.length; i++) {\n          if (this.sceneconditionapiList[i].apiname === e) {\n            this.tmpsceneapicondition.apiid = this.sceneconditionapiList[i].id\n          }\n        }\n        findcasesbyname(this.tmpsceneapicondition).then(response => {\n          this.sceneconditioncaseList = response.data\n        }).catch(res => {\n          this.$message.error('加载apicase列表失败')\n        })\n      },\n      showtestplanConditionDialog(index) {\n        this.ConditionFormVisible = true\n        this.searchapicondition.conditiontype = 'execplan'\n        this.searchapicondition.conditionid = this.executeplanList[index].id\n        this.tmpapicondition.conditionid = this.executeplanList[index].id\n        this.tmpapicondition.conditionname = this.executeplanList[index].executeplanname\n        this.tmpapicondition.conditiontype = 'execplan'\n        this.getapiconditionList()\n      },\n\n      apiconditioncaseIndex(index) {\n        return (this.searchapicondition.page - 1) * this.searchapicondition.size + index + 1\n      },\n\n      getapiconditionList() {\n        searchapicondition(this.searchapicondition).then(response => {\n          this.apiconditioncaseList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载测试接口条件列表失败')\n        })\n      },\n\n      addscenecondition() {\n        this.$refs.tmpsceneapicondition.validate(valid => {\n          if (valid) {\n            addapicondition(this.tmpsceneapicondition).then(() => {\n              this.$message.success('添加成功')\n              this.SceneconditiondialogFormVisible = false\n              this.getapiconditionList()\n            }).catch(res => {\n              this.$message.error('添加失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n\n      addapicondition() {\n        this.$refs.tmpapicondition.validate(valid => {\n          if (valid) {\n            addapicondition(this.tmpapicondition).then(() => {\n              this.$message.success('添加成功')\n              this.caseconditiondialogFormVisible = false\n              this.getapiconditionList()\n            }).catch(res => {\n              this.$message.error('添加失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n      sceneconditiondeployunitselectChanged(e) {\n        this.tmpsceneapicondition.casename = null\n        this.tmpsceneapicondition.apiname = null\n        this.tmpsceneapicondition.modelname = null\n        for (let i = 0; i < this.deployunitList.length; i++) {\n          if (this.deployunitList[i].deployunitname === e) {\n            this.tmpsceneapicondition.deployunitid = this.deployunitList[i].id\n          }\n        }\n        searchdeployunitmodel(this.tmpsceneapicondition).then(response => {\n          this.sceneconditionmodelList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载服务模块列表失败')\n        })\n        this.sceneconditionapiList = null\n        getapiListbydeploy(this.tmpsceneapicondition).then(response => {\n          this.sceneconditionapiList = response.data\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      apiconditiondeployunitselectChanged(e) {\n        this.tmpapicondition.casename = null\n        this.tmpapicondition.apiname = null\n        this.tmpapicondition.modelname = null\n        for (let i = 0; i < this.deployunitList.length; i++) {\n          if (this.deployunitList[i].deployunitname === e) {\n            this.tmpapicondition.deployunitid = this.deployunitList[i].id\n          }\n        }\n        searchdeployunitmodel(this.tmpapicondition).then(response => {\n          this.apiconditionmodelList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载服务模块列表失败')\n        })\n        this.apiconditionapiList = null\n        getapiListbydeploy(this.tmpapicondition).then(response => {\n          this.apiconditionapiList = response.data\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      cancelEdit(row) {\n        row.ordernum = row.oldcaseorder\n        row.edit = false\n        // this.$message({\n        //   message: 'The title has been restored to the original value',\n        //   type: 'warning'\n        // })\n      },\n      confirmEdit(row) {\n        row.edit = false\n        updateplanscenenorder(row).then(response => {\n          row.oldcaseorder = row.ordernum\n          this.$message.success('修改顺序成功')\n        }).catch(res => {\n          row.ordernum = row.oldcaseorder\n          this.$message.error('修改顺序失败')\n        })\n        // console.log(22222222222222222)\n        // console.log(row)\n        // this.$message({\n        //   message: 'The title has been edited',\n        //   type: 'success'\n        // })\n      },\n\n      findscenebyexecplanid() {\n        findscenebyexecplanid(this.searchscene).then(response => {\n          this.testplansceneList = response.data.list\n          const items = response.data.list\n          this.testplansceneList = items.map(v => {\n            this.$set(v, 'edit', false) // https://vuejs.org/v2/guide/reactivity.html\n            v.oldcaseorder = v.ordernum //  will be used when user click the cancel botton\n            return v\n          })\n          this.testplanscenetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载场景用例列表失败')\n        })\n      },\n\n      addscenehandleClickTableRow(row, event, column) {\n      },\n      addscenehandleSelectionChange(rows) {\n        this.scenemultipleSelection = rows\n      },\n\n      addscenehandleCurrentChange(page) {\n        this.addsearchscene.page = page\n        this.gettestsceneList()\n      },\n\n      planscenehandleCurrentChange(page) {\n        this.searchscene.page = page\n        this.findscenebyexecplanid()\n      },\n\n      addscenegetIndex(index) {\n        return (this.addsearchscene.page - 1) * this.addsearchscene.size + index + 1\n      },\n\n      gettestsceneList() {\n        this.addsearchscene.scenename = this.tmptestscenename\n        searchscence(this.addsearchscene).then(response => {\n          this.testsceneList = response.data.list\n          this.addscenetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载场景列表失败')\n        })\n      },\n\n      addscenehandleSizeChange(size) {\n        this.addsearchscene.page = 1\n        this.addsearchscene.size = size\n        this.gettestsceneList()\n      },\n\n      planscenehandleSizeChange(size) {\n        this.searchscene.page = 1\n        this.searchscene.size = size\n        this.findscenebyexecplanid()\n      },\n      /**\n       * 获取组件名字典列表\n       */\n      getdatabydiccodeList() {\n        getdatabydiccodeList(this.diclevelQuery).then(response => {\n          this.planbusinessdiclist = response.data.list\n        }).catch(res => {\n          this.$message.error('加载组件名字典列表失败')\n        })\n      },\n\n      unix2CurrentTime,\n\n      getglobalheaderallList() {\n        getglobalheaderallList(this.search).then(response => {\n          this.globalheaderallList = response.data\n        }).catch(res => {\n          this.$message.error('加载全局Header列表失败')\n        })\n      },\n\n      /**\n       * 获取header列表\n       */\n      searchheaderbyepid() {\n        console.log(this.tmpep)\n        searchheaderbyepid(this.tmpep).then(response => {\n          this.paramsList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载header列表失败')\n        })\n      },\n      /**\n       * 停止执行计划\n       */\n      stopexecuteplanList() {\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 'waiting' || this.multipleSelection[i].status === 'new' || this.multipleSelection[i].status === 'finish' || this.multipleSelection[i].status === 'stop') {\n            this.multipleSelection.splice(i)\n          }\n        }\n        if (this.multipleSelection.length === 0) {\n          this.$message.error('未选择执行计划,或者只有运行中才可以停止')\n        } else {\n          for (let i = 0; i < this.multipleSelection.length; i++) {\n            this.executeplanstopList.push({\n              'id': this.multipleSelection[i].id,\n              'status': 'stop'\n            })\n          }\n          updateexecuteplanstatus(this.executeplanstopList).then(() => {\n            this.$message.success('已停止执行计划')\n            this.btnLoading = false\n          }).catch(res => {\n            this.$message.error('停止计划执行失败')\n            this.btnLoading = false\n          })\n        }\n        this.getexecuteplanList()\n      },\n      /**\n       * 添加执行计划批次\n       */\n      savebatchandexecuteplancase() {\n        this.$refs.tmpplanbatch.validate(valid => {\n          if (valid) {\n            if (this.multipleSelection.length === 0) {\n              this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n              return\n            }\n            if (this.multipleSelection.length > 1) {\n              this.$message.error('不支持多执行计划一起提交，单个提交')\n              return\n            }\n            this.tmpplanbatch.executeplanname = this.multipleSelection[0].executeplanname\n            this.tmpplanbatch.execdate = this.tmpplanbatch.exectmpdate + ' ' + this.tmpplanbatch.exectime + ':00'\n            if (this.tmpplanbatch.execdate === ':00') {\n              this.tmpplanbatch.execdate = '/'\n            }\n            if (this.tmpplanbatch.exectmpdate === '') {\n              this.tmpplanbatch.execdate = this.tmpplanbatch.exectime + ':00'\n            }\n            this.executeplancase()\n            this.batchdialogFormVisible = false\n            // addexecuteplanbatch(this.tmpplanbatch).then(() => {\n            //   this.executeplancase()\n            //   this.batchdialogFormVisible = false\n            // }).catch(res => {\n            //   this.$message.error('计划执行失败')\n            // })\n          }\n        })\n      },\n      /**\n       * 添加执行计划批次并且执行计划用例\n       */\n      // savebatchandexecuteplancase() {\n      // this.addexecuteplanbatch()\n      // this.executeplancase()\n      // this.batchdialogFormVisible = false\n      // },\n      /**\n       * 执行执行计划\n       */\n      executeplancase() {\n        this.tmpplanbatchList = []\n        this.$refs.tmpplanbatch.validate(valid => {\n          if (valid) {\n            for (let i = 0; i < this.multipleSelection.length; i++) {\n              if (this.multipleSelection[i].status === 'running') {\n                this.multipleSelection.splice(i)\n              }\n            }\n            if (this.multipleSelection.length === 0) {\n              this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n            } else {\n              if (this.multipleSelection.length > 1) {\n                this.$message.error('不支持多执行计划一起提交，单个提交')\n              } else {\n                for (let i = 0; i < this.multipleSelection.length; i++) {\n                  this.tmpplanbatchList.push({\n                    // 'planid': this.multipleSelection[0].id,\n                    // 'planname': this.multipleSelection[0].execplanname,\n                    // 'batchname': this.tmpplanbatch.batchname\n                    'executeplanname': this.tmpplanbatch.executeplanname,\n                    'batchname': this.tmpplanbatch.batchname,\n                    'exectype': this.tmpplanbatch.exectype,\n                    'execdate': this.tmpplanbatch.execdate,\n                    'creator': this.name,\n                    'projectid': this.tmpplanbatch.projectid,\n                    'exectime': this.tmpplanbatch.exectime,\n                    'executeplanid': this.tmpplanbatch.executeplanid,\n                    'exectmpdate': this.tmpplanbatch.exectmpdate\n                  })\n                }\n                executeplan(this.tmpplanbatchList).then(() => {\n                  this.$message.success('测试集合已经提交，即将开始执行')\n                }).catch(res => {\n                  this.$message.error('执行测试集合失败')\n                })\n              }\n            }\n            this.getexecuteplanList()\n          }\n        })\n      },\n\n      handleClickTableRow(row, event, column) {\n        // console.log(row)\n        // console.log(column)\n        // this.$refs.fileTable.toggleRowSelection(row)\n      },\n      handleSelectionChange(rows) {\n        // console.log(rows)\n        this.multipleSelection = rows\n        console.log('00000000000000000000000000')\n        console.log(this.multipleSelection)\n      },\n      casehandleClickTableRow(row, event, column) {\n        console.log(row)\n      },\n\n      casehandleSelectionChange(rows) {\n        this.casemultipleSelection = rows\n        // console.log(this.casemultipleSelection)\n      },\n\n      exectypeselectChanged(e) {\n        if (e === '立即执行') {\n          this.datevisible = false\n          this.timevisible = false\n        }\n        if (e === '某天定时') {\n          this.datevisible = true\n          this.timevisible = true\n          this.tmpplanbatch.execdate = ''\n          this.tmpplanbatch.exectime = ''\n        }\n        if (e === '每天定时') {\n          this.datevisible = false\n          this.timevisible = true\n          this.tmpplanbatch.exectime = ''\n        }\n      },\n      /**\n       * 参数胡类型选择  e的值为options的选值\n       */\n      paramstypeselectChanged(e) {\n        this.tmpparam.keyname = ''\n        this.tmpparam.keyvalue = ''\n      },\n      /**\n       * 获取执行计划列表\n       */\n      getexecuteplanList() {\n        this.search.execplanname = this.tmpexecplanname\n        this.search.batchname = this.tmpbatchname\n        this.search.creator = this.name\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.executeplanList = response.data.list\n          this.total = response.data.total\n          this.listLoading = false\n        }).catch(res => {\n          this.$message.error('加载字典列表失败')\n        })\n      },\n\n      searchBy() {\n        this.search.page = 1\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.itemKey = Math.random()\n          this.executeplanList = response.data.list\n          this.total = response.data.total\n        }).catch(res => {\n          this.$message.error('搜索失败')\n        })\n        this.tmpexecuteplanname = this.search.executeplanname\n        this.listLoading = false\n        this.btnLoading = false\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      handleSizeChange(size) {\n        this.search.page = 1\n        this.search.size = size\n        this.getexecuteplanList()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      handleCurrentChange(page) {\n        this.search.page = page\n        this.getexecuteplanList()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      getIndex(index) {\n        return (this.search.page - 1) * this.search.size + index + 1\n      },\n\n      paramgetIndex(index) {\n        return (this.searchparam.page - 1) * this.searchparam.size + index + 1\n      },\n\n      planscenegetIndex(index) {\n        return (this.searchscene.page - 1) * this.searchscene.size + index + 1\n      },\n      /**\n       * 环境下拉框活的环境id\n       */\n      enviromentselectChanged(e) {\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === e) {\n            this.tmpexecuteplan.envid = this.enviromentnameList[i].id\n          }\n          console.log(this.enviromentnameList[i].id)\n        }\n      },\n      /**\n       * 微服务下拉选择事件获取微服务id  e的值为options的选值\n       */\n      selectChanged(e) {\n        this.apiList = null\n        this.apiQuery.deployunitname = e\n        getapiList(this.apiQuery).then(response => {\n          this.apiList = response.data.list\n          // console.log(this.apiList)\n          // this.casetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n      /**\n       * 获取api列表\n       */\n      getapiList() {\n        this.caselistLoading = true\n        this.listQuery.creator = this.name\n        getapiList(this.listQuery).then(response => {\n          this.apiList = response.data.list\n          // this.casetotal = response.data.total\n          this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      /**\n       * 获取环境列表\n       */\n      getenviromentallList() {\n        getenviromentallList(this.search).then(response => {\n          this.enviromentnameList = response.data\n        }).catch(res => {\n          this.$message.error('加载环境列表失败')\n        })\n      },\n\n      /**\n       * 获取微服务列表\n       */\n      getdepunitList() {\n        this.caselistLoading = true\n        getdepunitLists(this.listQuery).then(response => {\n          this.deployunitList = response.data\n          // this.casetotal = response.data.total\n          // this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载微服务列表失败')\n        })\n      },\n\n      /**\n       * 获取用例列表\n       */\n      getcaseList() {\n        this.caselistLoading = true\n        getapicasesList(this.listQuery).then(response => {\n          this.apicasesList = response.data.list\n          // this.casetotal = response.data.total\n          this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载用例列表失败')\n        })\n      },\n\n      /**\n       * 获取微服务和api的用例\n       */\n      searchcaseBy() {\n        this.searchtestplanexistcase()\n      },\n\n      // 已废弃\n      async gettestcaselastList() {\n        console.log(this.testcaseList.length)\n        console.log(this.executeplancaseexistList.length)\n        for (let i = 0; i < this.testcaseList.length; i++) {\n          for (let j = 0; j < this.executeplancaseexistList.length; j++) {\n            if (this.testcaseList[i].id === this.executeplancaseexistList[j].testcaseid) {\n              this.testcaselastList.push({\n                'checkstats': true,\n                'deployunitname': this.testcaseList[i].deployunitname,\n                'apiname': this.testcaseList[i].apiname,\n                'casename': this.testcaseList[i].casename,\n                'expect': this.testcaseList[i].expect\n              })\n            } else {\n              this.testcaselastList.push({\n                'checkstats': false,\n                'deployunitname': this.testcaseList[i].deployunitname,\n                'apiname': this.testcaseList[i].apiname,\n                'casename': this.testcaseList[i].casename,\n                'expect': this.testcaseList[i].expect\n              })\n            }\n          }\n        }\n        console.log(this.testcaselastList)\n      },\n\n      /**\n       * 获取微服务和api的用例，已废弃\n       */\n      async searchcaseBydepandapi() {\n        this.$refs.searchcase.validate(valid => {\n          if (valid) {\n            this.casebtnLoading = true\n            this.caselistLoading = true\n            this.searchcase.page = this.caselistQuery.page\n            this.searchcase.size = this.caselistQuery.size\n            getapicases(this.searchcase).then(response => {\n              this.testcaseList = response.data.list\n              console.log(this.testcaseList.length)\n              this.casetotal = response.data.total\n            }).catch(res => {\n              this.$message.error('搜索失败')\n            })\n            this.caselistLoading = false\n            this.casebtnLoading = false\n          }\n        })\n      },\n\n      /**\n       * 获取执行计划下微服务和api已的用例,如果是已装载过的，会带上装载状态\n       */\n      searchtestplanexistcase() {\n        this.testcaselastList = []\n        this.$refs.searchcase.validate(valid => {\n          if (valid) {\n            this.searchcase.executeplanid = this.tmpexecuteplan.id\n            this.searchcase.casetype = this.tmpexecuteplan.usetype\n            // this.searchcase.page = this.caselistQuery.page\n            // this.searchcase.size = this.caselistQuery.size\n            this.searchcase.page = 1\n            searchtestplancases(this.searchcase).then(response => {\n              this.testcaselastList = response.data.list\n              this.casetotal = response.data.total\n              this.$nextTick(() => {\n                for (let i = 0; i < this.testcaselastList.length; i++) {\n                  if (this.testcaselastList[i].status === true) {\n                    this.$refs.caseTable.toggleRowSelection(this.testcaselastList[i], true)\n                  }\n                }\n              })\n            }).catch(res => {\n              this.$message.error('获取已装载的用例失败')\n            })\n          }\n        })\n        this.tmpcasedeployunitname = this.searchcase.deployunitname\n        this.tmpcaseapiname = this.searchcase.apiname\n        this.tmpcaseexecuteplanid = this.searchcase.executeplanid\n        this.tmpcasecasetype = this.searchcase.casetype\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      casehandleSizeChange(size) {\n        this.searchcase.page = 1\n        this.searchcase.size = size\n        this.searchtestplanexistcase()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      casehandleCurrentChange(page) {\n        this.searchcase.page = page\n        this.searchtestplanexistcase()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      casegetIndex(index) {\n        return (this.searchcase.page - 1) * this.searchcase.size + index + 1\n      },\n      /**\n       * 显示添加执行计划对话框\n       */\n      showAddexecuteplanDialog() {\n        // 显示新增对话框\n        this.dialogFormVisible = true\n        this.dialogStatus = 'add'\n        this.tmpexecuteplan.id = ''\n        this.tmpexecuteplan.executeplanname = ''\n        this.tmpexecuteplan.status = 'new'\n        this.tmpexecuteplan.memo = ''\n        this.tmpexecuteplan.usetype = ''\n        this.tmpexecuteplan.enviromentname = ''\n        this.tmpexecuteplan.businesstype = ''\n        this.tmpexecuteplan.creator = this.name\n        this.tmpexecuteplan.runmode = ''\n        this.tmpexecuteplan.dingdingtoken = ''\n        this.tmpexecuteplan.projectid = window.localStorage.getItem('pid')\n      },\n\n      showplanparamsDialog(index) {\n        // 显示新增对话框\n        this.CollectionParamsFormVisible = true\n        this.tmpparam.executeplanid = this.executeplanList[index].id\n        this.tmpep.executeplanid = this.executeplanList[index].id\n        this.searchheaderbyepid()\n      },\n\n      showstopbatchDialog(index) {\n        // 显示新增对话框\n        this.stopbatchdialogFormVisible = true\n        this.tmpstopplanbatch.batchname = ''\n        this.tmpstopplanbatch.executeplanid = this.executeplanList[index].id\n        this.getstopplanbatchList()\n      },\n      showtestsceneDialog(index) {\n        // 显示新增对话框\n        this.testscenedialogFormVisible = true\n        this.tmpexecplan.execplanid = this.executeplanList[index].id\n        this.tmpexecplan.execplanname = this.executeplanList[index].executeplanname\n        this.searchscene.testplanid = this.executeplanList[index].id\n        this.findscenebyexecplanid()\n      },\n\n      ShowAddScenceDialog(index) {\n        // 显示新增对话框\n        this.addtestscenedialogFormVisible = true\n        this.gettestsceneList()\n      },\n\n      ShowAddPlancaseconditionDialog(index) {\n        this.caseconditiondialogFormVisible = true\n        this.apiconditiondialogStatus = 'add'\n        this.tmpapicondition.id = ''\n        this.tmpapicondition.subconditionname = ''\n        this.tmpapicondition.deployunitname = ''\n        this.tmpapicondition.apiname = ''\n        this.tmpapicondition.modelname = ''\n        this.tmpapicondition.casename = ''\n        this.tmpapicondition.memo = ''\n        this.tmpapicondition.creator = this.name\n        this.tmpapicondition.projectid = window.localStorage.getItem('pid')\n      },\n\n      ShowAddPlanSceneconditionDialog(index) {\n        this.SceneconditiondialogFormVisible = true\n        this.SceneconditiondialogStatus = 'add'\n        this.tmpsceneapicondition.id = ''\n        this.tmpsceneapicondition.subconditionname = ''\n        this.tmpsceneapicondition.deployunitname = ''\n        this.tmpsceneapicondition.apiname = ''\n        this.tmpsceneapicondition.modelname = ''\n        this.tmpsceneapicondition.casename = ''\n        this.tmpsceneapicondition.memo = ''\n        this.tmpsceneapicondition.creator = this.name\n        this.tmpsceneapicondition.projectid = window.localStorage.getItem('pid')\n      },\n\n      // 显示新增对话框\n      showAddapiparamsDialog() {\n        this.modifyparamdialogFormVisible = true\n        this.ParamsdialogStatus = 'add'\n        this.tmpparam.id = ''\n        this.tmpparam.globalheaderid = ''\n        this.tmpparam.globalheadername = ''\n      },\n\n      showUpdateparamsDialog(index) {\n        this.modifyparamdialogFormVisible = true\n        this.ParamsdialogStatus = 'update'\n        this.tmpparam.id = this.paramsList[index].id\n        this.tmpparam.globalheadername = this.paramsList[index].globalheadername\n      },\n      /**\n       * 显示添加执行计划批次对话框\n       */\n      showplanbatchDialog() {\n        this.tmpplanbatch.exectmpdate = ''\n        this.tmpplanbatch.exectime = ''\n        this.tmpplanbatch.execdate = ''\n        this.tmpplanbatch.exectype = ''\n        this.timevisible = false\n        this.datevisible = false\n        // 显示新增对话框\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 'running') {\n            this.multipleSelection.splice(i)\n          }\n        }\n        if (this.multipleSelection.length === 0) {\n          this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n        } else {\n          if (this.multipleSelection.length > 1) {\n            this.$message.error('不支持多执行计划一起提交，单个提交')\n          } else {\n            this.tmpplanenv.id = this.multipleSelection[0].id\n            this.tmpplanenv.envid = this.multipleSelection[0].envid\n            this.tmpplanenv.enviromentname = this.multipleSelection[0].enviromentname\n            checkplancondition(this.tmpplanenv).then(() => {\n              this.batchdialogFormVisible = true\n              this.tmpplanbatch.executeplanid = this.multipleSelection[0].id\n              this.tmpplanbatch.creator = this.name\n              this.tmpplanbatch.batchname = ''\n            }).catch(res => {\n              // this.$message.error('执行失败')\n            })\n          }\n        }\n      },\n      /**\n       * 添加执行计划\n       */\n      addexecuteplan() {\n        this.$refs.tmpexecuteplan.validate(valid => {\n          if (valid) {\n            this.btnLoading = true\n            addexecuteplan(this.tmpexecuteplan).then(() => {\n              this.$message.success('添加成功')\n              this.getexecuteplanList()\n              this.dialogFormVisible = false\n              this.btnLoading = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n\n      /**\n       * 添加params\n       */\n      addparams() {\n        this.$refs.tmpparam.validate(valid => {\n          if (valid) {\n            addapicasesdebug(this.tmpparam).then(() => {\n              this.$message.success('添加成功')\n              this.modifyparamdialogFormVisible = false\n              this.searchheaderbyepid()\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 更新param\n       */\n      updatparam() {\n        this.$refs.tmpparam.validate(valid => {\n          if (valid) {\n            updateapicasesdebug(this.tmpparam).then(() => {\n              this.$message.success('更新成功')\n              this.searchheaderbyepid()\n              this.modifyparamdialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 删除param\n       * @param index api下标\n       */\n      removeexecuteplanparam(index) {\n        this.$confirm('删除该参数？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.paramsList[index].id\n          removeapicasesdebug(id).then(() => {\n            this.$message.success('删除成功')\n            this.searchheaderbyepid()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 显示修改执行计划对话框\n       * @param index 执行计划下标\n       */\n      showUpdateexecuteplanDialog(index) {\n        this.dialogFormVisible = true\n        this.dialogStatus = 'update'\n        this.tmpexecuteplan.id = this.executeplanList[index].id\n        this.tmpexecuteplan.executeplanname = this.executeplanList[index].executeplanname\n        this.tmpexecuteplan.status = this.executeplanList[index].status\n        this.tmpexecuteplan.usetype = this.executeplanList[index].usetype\n        this.tmpexecuteplan.memo = this.executeplanList[index].memo\n        this.tmpexecuteplan.enviromentname = this.executeplanList[index].enviromentname\n        this.tmpexecuteplan.businesstype = this.executeplanList[index].businesstype\n        this.tmpexecuteplan.creator = this.name\n        this.tmpexecuteplan.runmode = this.executeplanList[index].runmode\n        this.tmpexecuteplan.dingdingtoken = this.executeplanList[index].dingdingtoken\n        this.tmpexecuteplan.projectid = window.localStorage.getItem('pid')\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === this.tmpexecuteplan.enviromentname) {\n            this.tmpexecuteplan.envid = this.enviromentnameList[i].id\n          }\n        }\n      },\n\n      /**\n       * 装载执行计划的用例\n       */\n      addplantestscene() {\n        this.addtestsceneList = []\n        if (this.scenemultipleSelection.length === 0) {\n          this.$message.error('请选择添加的场景')\n        } else {\n          for (let i = 0; i < this.scenemultipleSelection.length; i++) {\n            this.addtestsceneList.push({\n              'testscenenid': this.scenemultipleSelection[i].id,\n              'scenename': this.scenemultipleSelection[i].scenename,\n              'testplanid': this.tmpexecplan.execplanid,\n              'planname': this.tmpexecplan.execplanname,\n              'ordernum': 0,\n              'creator': this.name,\n              'projectid': window.localStorage.getItem('pid')\n            })\n          }\n          addtestplantestscene(this.addtestsceneList).then(() => {\n            this.$message.success('装载成功')\n            this.addtestscenedialogFormVisible = false\n            this.findscenebyexecplanid()\n          }).catch(res => {\n            this.$message.error('装载失败')\n          })\n        }\n      },\n\n      /**\n       * 装载执行计划的用例\n       */\n      addexecuteplantestcase() {\n        this.executeplancaseList = []\n        if (this.casemultipleSelection.length === 0) {\n          this.$message.error('请选择装载的用例')\n        } else {\n          for (let i = 0; i < this.casemultipleSelection.length; i++) {\n            this.executeplancaseList.push({\n              'executeplanid': this.tmpexecuteplan.id,\n              'deployunitid': this.casemultipleSelection[i].deployunitid,\n              'apiid': this.casemultipleSelection[i].apiid,\n              'deployunitname': this.casemultipleSelection[i].deployunitname,\n              'apiname': this.casemultipleSelection[i].apiname,\n              'testcaseid': this.casemultipleSelection[i].id,\n              'casename': this.casemultipleSelection[i].casename\n            })\n          }\n          addexecuteplantestcase(this.executeplancaseList).then(() => {\n            this.$message.success('装载成功')\n          }).catch(res => {\n            this.$message.error('装载失败')\n          })\n        }\n      },\n\n      /**\n       * 删除装载的用例\n       */\n      removeexecuteplantestcase() {\n        this.executeplancaseremovetList = []\n        if (this.testcaselastList.length === this.casemultipleSelection.length) {\n          this.$message.error('未找到需要取消装载的用例')\n        } else {\n          for (let i = 0; i < this.testcaselastList.length; i++) {\n            var findflag = false\n            for (let j = 0; j < this.casemultipleSelection.length; j++) {\n              if (this.testcaselastList[i].id === this.casemultipleSelection[j].id) {\n                findflag = true\n                break\n              }\n            }\n            // 表示未选中的记录，需要删除\n            this.testcaselastList[i].id\n            if (!findflag) {\n              this.executeplancaseremovetList.push({\n                'executeplanid': this.tmpexecuteplan.id,\n                'deployunitname': this.testcaselastList[i].deployunitname,\n                'apiname': this.testcaselastList[i].apiname,\n                'testcaseid': this.testcaselastList[i].id,\n                'casename': this.testcaselastList[i].casename\n              })\n            }\n          }\n          console.log(this.executeplancaseremovetList)\n          removeexecuteplantestcase(this.executeplancaseremovetList).then(() => {\n            this.$message.success('取消装载用例成功')\n          }).catch(res => {\n            this.$message.error('取消装载用例失败')\n          })\n        }\n      },\n      /**\n       * 显示用例对话框\n       * @param index 执行计划下标\n       */\n      showTestCaseDialog(index) {\n        this.casedialogFormVisible = true\n        this.tmpexecuteplan.id = this.executeplanList[index].id\n        this.tmpexecuteplan.executeplanname = this.executeplanList[index].executeplanname\n        this.tmpexecuteplan.status = this.executeplanList[index].status\n        this.tmpexecuteplan.usetype = this.executeplanList[index].usetype\n        this.tmpexecuteplan.memo = this.executeplanList[index].memo\n        this.searchcase.deployunitname = null\n        this.searchcase.apiname = null\n        this.testcaselastList = []\n        this.casetotal = 0\n      },\n      /**\n       * 更新执行计划\n       */\n      updateexecuteplan() {\n        this.$refs.tmpexecuteplan.validate(valid => {\n          if (valid) {\n            updateexecuteplan(this.tmpexecuteplan).then(() => {\n              this.$message.success('更新成功')\n              this.getexecuteplanList()\n              this.dialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n      /**\n       * 删除字典\n       * @param index 执行计划下标\n       */\n      removeexecuteplan(index) {\n        this.$confirm('删除该执行计划？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.executeplanList[index].id\n          removeexecuteplan(id).then(() => {\n            this.$message.success('删除成功')\n            this.getexecuteplanList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 执行计划资料是否唯一\n       * @param 执行计划\n       */\n      isUniqueDetail(executeplan) {\n        for (let i = 0; i < this.executeplanList.length; i++) {\n          if (this.executeplanList[i].id !== executeplan.id) { // 排除自己\n            if (this.executeplanList[i].executeplanname === executeplan.executeplanname) {\n              this.$message.error('执行计划名已存在')\n              return false\n            }\n          }\n        }\n        return true\n      },\n      notexistheaderselectChanged(e) {\n        for (let i = 0; i < this.globalheaderallList.length; i++) {\n          if (this.globalheaderallList[i].globalheadername === e) {\n            this.tmpparam.globalheaderid = this.globalheaderallList[i].id\n          }\n        }\n      }\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/executecenter/executeplan/index.vue","import request from '@/utils/request'\n\nexport function gettestplanList(params) {\n  return request({\n    url: '/testplan/testscene',\n    method: 'get',\n    params\n  })\n}\n\nexport function addtestplantestscene(sceneForm) {\n  return request({\n    url: '/testplan/testscene/addplanscene',\n    method: 'post',\n    data: sceneForm\n  })\n}\n\nexport function updateplanscenenorder(executeplanForm) {\n  return request({\n    url: '/testplan/testscene/updateplanscenenorder',\n    method: 'post',\n    data: executeplanForm\n  })\n}\n\nexport function getstaticsplan(params) {\n  return request({\n    url: '/testplan/testscene/getstaticsplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function gettestplannum(params) {\n  return request({\n    url: '/testplan/testscene/gettestplannum',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplanbytype(params) {\n  return request({\n    url: '/testplan/testscene/getallexplanbytype',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplan(params) {\n  return request({\n    url: '/testplan/testscene/getallexplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function search(testplanForm) {\n  return request({\n    url: '/testplan/testscene/search',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function findscenebyexecplanid(testplanForm) {\n  return request({\n    url: '/testplan/testscene/findscenebyexecplanid',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function addtestplan(testplanForm) {\n  return request({\n    url: '/testplan/testscene',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function testplan(testplanForm) {\n  return request({\n    url: '/testplan/testscene/execplancases',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function checkplancondition(testplanForm) {\n  return request({\n    url: '/testplan/testscene/checkcondition',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function updatetestplan(testplanForm) {\n  return request({\n    url: '/testplan/testscene/detail',\n    method: 'put',\n    data: testplanForm\n  })\n}\n\nexport function updatetestplanstatus(testplanForm) {\n  return request({\n    url: '/testplan/testscene/updatestatus',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function removetestplanscene(executeplanSceneId) {\n  return request({\n    url: '/testplan/testscene/' + executeplanSceneId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/executecenter/testplantestscene.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('executeplan:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\",\"icon\":\"el-icon-refresh\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.getexecuteplanList($event)}}},[_vm._v(\"刷新\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showplanbatchDialog($event)}}},[_vm._v(\"运行\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:add'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAddexecuteplanDialog($event)}}},[_vm._v(\"添加测试集合\")]):_vm._e()],1),_vm._v(\" \"),(_vm.hasPermission('executeplan:search'))?_c('span',[_c('el-form-item',{attrs:{\"label\":\"测试集合:\"}},[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"测试集合\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchBy($event)}},model:{value:(_vm.search.executeplanname),callback:function ($$v) {_vm.$set(_vm.search, \"executeplanname\", $$v)},expression:\"search.executeplanname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"业务类型:\"}},[_c('el-select',{attrs:{\"clearable\":\"\",\"placeholder\":\"业务类型\"},model:{value:(_vm.search.businesstype),callback:function ($$v) {_vm.$set(_vm.search, \"businesstype\", $$v)},expression:\"search.businesstype\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.planbusinessdiclist),function(businessdicitem,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":businessdicitem.dicitmevalue,\"value\":businessdicitem.dicitmevalue}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemplanKey,ref:\"fileTable\",attrs:{\"data\":_vm.executeplanList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.handleClickTableRow,\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"40\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"集合名\",\"align\":\"center\",\"prop\":\"executeplanname\",\"width\":\"100\"}}),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"envid\",\"align\":\"center\",\"prop\":\"envid\",\"width\":\"50\"}}):_vm._e(),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"状态\",\"align\":\"center\",\"prop\":\"status\",\"width\":\"50\"}}):_vm._e(),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"业务类型\",\"align\":\"center\",\"prop\":\"businesstype\",\"width\":\"70\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"执行环境\",\"align\":\"center\",\"prop\":\"enviromentname\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"类型\",\"align\":\"center\",\"prop\":\"usetype\",\"width\":\"50\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"运行模式\",\"align\":\"center\",\"prop\":\"runmode\",\"width\":\"70\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"场景数\",\"align\":\"center\",\"prop\":\"scenenums\",\"width\":\"60\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"用例数\",\"align\":\"center\",\"prop\":\"casecounts\",\"width\":\"60\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"通知钉钉token\",\"align\":\"center\",\"prop\":\"dingdingtoken\",\"width\":\"110\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作人\",\"align\":\"center\",\"prop\":\"creator\",\"width\":\"60\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"创建时间\",\"align\":\"center\",\"prop\":\"createTime\",\"width\":\"110\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.createTime)))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"最后修改时间\",\"align\":\"center\",\"prop\":\"lastmodifyTime\",\"width\":\"110\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.lastmodifyTime))+\"\\n        \")]}}])}),_vm._v(\" \"),(_vm.hasPermission('executeplan:update')  || _vm.hasPermission('executeplan:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\",\"width\":\"550\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateexecuteplanDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:delete') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplan(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showstopbatchDialog(scope.$index)}}},[_vm._v(\"停止运行\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showplanparamsDialog(scope.$index)}}},[_vm._v(\"全局Header\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showtestsceneDialog(scope.$index)}}},[_vm._v(\"测试场景\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showtestplanConditionDialog(scope.$index)}}},[_vm._v(\"前置条件\")]):_vm._e()]}}],null,false,464251033)}):_vm._e()],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.search.page,\"page-size\":_vm.search.size,\"total\":_vm.total,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.textMap[_vm.dialogStatus],\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpexecuteplan\",staticClass:\"small-space\",staticStyle:{\"width\":\"400px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpexecuteplan}},[_c('el-form-item',{attrs:{\"label\":\"集合名\",\"prop\":\"executeplanname\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.executeplanname),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"executeplanname\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"tmpexecuteplan.executeplanname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"类型\",\"prop\":\"usetype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"类型\"},model:{value:(_vm.tmpexecuteplan.usetype),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"usetype\", $$v)},expression:\"tmpexecuteplan.usetype\"}},[_c('el-option',{attrs:{\"label\":\"功能\",\"value\":\"功能\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"性能\",\"value\":\"性能\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"执行环境\",\"prop\":\"enviromentname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"执行环境\"},on:{\"change\":function($event){return _vm.enviromentselectChanged($event)}},model:{value:(_vm.tmpexecuteplan.enviromentname),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"enviromentname\", $$v)},expression:\"tmpexecuteplan.enviromentname\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.enviromentnameList),function(envname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":envname.enviromentname,\"value\":envname.enviromentname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"业务类型\",\"prop\":\"businesstype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"业务类型\"},on:{\"change\":function($event){return _vm.businesstypeselectChanged($event)}},model:{value:(_vm.tmpexecuteplan.businesstype),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"businesstype\", $$v)},expression:\"tmpexecuteplan.businesstype\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.planbusinessdiclist),function(dicitem,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":dicitem.dicitmevalue,\"value\":dicitem.dicitmevalue,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"运行模式\",\"prop\":\"runmode\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"运行模式\"},model:{value:(_vm.tmpexecuteplan.runmode),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"runmode\", $$v)},expression:\"tmpexecuteplan.runmode\"}},[_c('el-option',{attrs:{\"label\":\"单机运行\",\"value\":\"单机运行\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"多机并行\",\"value\":\"多机并行\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"钉钉通知token\",\"prop\":\"dingdingtoken\"}},[_c('el-input',{attrs:{\"maxlength\":\"200\",\"type\":\"text\",\"prefix-icon\":\"el-icon-message\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.dingdingtoken),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"dingdingtoken\", $$v)},expression:\"tmpexecuteplan.dingdingtoken\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"备注\",\"prop\":\"memo\"}},[_c('el-input',{attrs:{\"maxlength\":\"200\",\"type\":\"text\",\"prefix-icon\":\"el-icon-message\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.memo),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"memo\", $$v)},expression:\"tmpexecuteplan.memo\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.dialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.dialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addexecuteplan($event)}}},[_vm._v(\"保存\\n        \")]):_vm._e(),_vm._v(\" \"),(_vm.dialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updateexecuteplan($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.loadcase,\"visible\":_vm.casedialogFormVisible},on:{\"update:visible\":function($event){_vm.casedialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{ref:\"searchcase\",attrs:{\"inline\":true,\"model\":_vm.searchcase}},[(_vm.hasPermission('apicases:search'))?_c('span',[_c('el-form-item',{attrs:{\"label\":\"微服务:\",\"prop\":\"deployunitname\",\"required\":\"\"}},[_c('el-select',{attrs:{\"placeholder\":\"微服务\"},on:{\"change\":function($event){return _vm.selectChanged($event)}},model:{value:(_vm.searchcase.deployunitname),callback:function ($$v) {_vm.$set(_vm.searchcase, \"deployunitname\", $$v)},expression:\"searchcase.deployunitname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.deployunitList),function(depname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":depname.deployunitname,\"value\":depname.deployunitname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"API:\"}},[_c('el-select',{attrs:{\"placeholder\":\"api名\"},model:{value:(_vm.searchcase.apiname),callback:function ($$v) {_vm.$set(_vm.searchcase, \"apiname\", $$v)},expression:\"searchcase.apiname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.apiList),function(api,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":api.apiname,\"value\":api.apiname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchcaseBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()])],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemcaseKey,ref:\"caseTable\",attrs:{\"data\":_vm.testcaselastList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.casehandleClickTableRow,\"selection-change\":_vm.casehandleSelectionChange}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"type\":\"selection\",\"prop\":\"status\",\"width\":\"50\"}}),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"apiid\",\"align\":\"center\",\"prop\":\"apiid\",\"width\":\"120\"}}):_vm._e(),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"deployunitid\",\"align\":\"center\",\"prop\":\"deployunitid\",\"width\":\"120\"}}):_vm._e(),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"用例名\",\"align\":\"center\",\"prop\":\"casename\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"微服务\",\"align\":\"center\",\"prop\":\"deployunitname\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"API\",\"align\":\"center\",\"prop\":\"apiname\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"期望值\",\"align\":\"center\",\"prop\":\"expect\",\"width\":\"120\"}})],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.searchcase.page,\"page-size\":_vm.searchcase.size,\"total\":_vm.casetotal,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.casehandleSizeChange,\"current-change\":_vm.casehandleCurrentChange}}),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.casedialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addexecuteplantestcase($event)}}},[_vm._v(\"装载\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"warning\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplantestcase($event)}}},[_vm._v(\"取消装载\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.loadbatch,\"visible\":_vm.batchdialogFormVisible},on:{\"update:visible\":function($event){_vm.batchdialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{ref:\"tmpplanbatch\",attrs:{\"model\":_vm.tmpplanbatch}},[_c('el-form-item',{attrs:{\"label\":\"执行计划：\",\"prop\":\"batchname\",\"required\":\"\"}},[_c('el-input',{staticStyle:{\"width\":\"60%\"},attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"placeholder\":\"例如2020-10-21-tag-101\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpplanbatch.batchname),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"batchname\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"tmpplanbatch.batchname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"执行类型：\",\"prop\":\"exectype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"placeholder\":\"执行类型\"},on:{\"change\":function($event){return _vm.exectypeselectChanged($event)}},model:{value:(_vm.tmpplanbatch.exectype),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectype\", $$v)},expression:\"tmpplanbatch.exectype\"}},[_c('el-option',{attrs:{\"label\":\"立即执行\",\"value\":\"立即执行\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"某天定时\",\"value\":\"某天定时\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"每天定时\",\"value\":\"每天定时\"}})],1)],1),_vm._v(\" \"),(_vm.datevisible)?_c('div',[_c('el-form-item',{attrs:{\"label\":\"选择日期：\",\"prop\":\"exectmpdate\",\"required\":\"\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"60%\"},attrs:{\"type\":\"date\",\"format\":\"yyyy-MM-dd\",\"value-format\":\"yyyy-MM-dd\",\"placeholder\":\"选择日期\"},model:{value:(_vm.tmpplanbatch.exectmpdate),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectmpdate\", $$v)},expression:\"tmpplanbatch.exectmpdate\"}})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.timevisible)?_c('div',[_c('el-form-item',{attrs:{\"label\":\"选择时刻：\",\"prop\":\"exectime\",\"required\":\"\"}},[_c('el-time-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"picker-options\":{\n              start: '00:05',\n              step: '00:10',\n              end: '23:55'\n            },\"placeholder\":\"选择时间\"},model:{value:(_vm.tmpplanbatch.exectime),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectime\", $$v)},expression:\"tmpplanbatch.exectime\"}})],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.batchdialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.execbtnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.savebatchandexecuteplancase($event)}}},[_vm._v(\"执行\")])],1)]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"停止运行计划\",\"visible\":_vm.stopbatchdialogFormVisible},on:{\"update:visible\":function($event){_vm.stopbatchdialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{ref:\"tmpstopplanbatch\",attrs:{\"model\":_vm.tmpstopplanbatch}},[_c('el-form-item',{attrs:{\"label\":\"执行计划：\",\"prop\":\"batchname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"70%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"执行计划\"},on:{\"change\":function($event){return _vm.stopplanbatchselectChanged($event)}},model:{value:(_vm.tmpstopplanbatch.batchname),callback:function ($$v) {_vm.$set(_vm.tmpstopplanbatch, \"batchname\", $$v)},expression:\"tmpstopplanbatch.batchname\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.stopplanbatchList),function(tmpstopplanbatch,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":tmpstopplanbatch.batchname,\"value\":tmpstopplanbatch.batchname,\"required\":\"\"}})],1)})],2)],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.stopbatchdialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updatebatchstatus($event)}}},[_vm._v(\"停止\")])],1)]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"全局Header\",\"visible\":_vm.CollectionParamsFormVisible},on:{\"update:visible\":function($event){_vm.CollectionParamsFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('executeplan:add'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAddapiparamsDialog($event)}}},[_vm._v(\"添加全局Header\")]):_vm._e()],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemKey,attrs:{\"data\":_vm.paramsList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"45\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.paramgetIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"Header\",\"align\":\"center\",\"prop\":\"globalheadername\",\"width\":\"280\"}}),_vm._v(\" \"),(_vm.hasPermission('executeplan:update')  || _vm.hasPermission('executeplan:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateparamsDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:delete') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplanparam(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e()]}}],null,false,2267587065)}):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"集合前置条件\",\"visible\":_vm.ConditionFormVisible},on:{\"update:visible\":function($event){_vm.ConditionFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('testscene:scenecasecondition'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.ShowAddPlancaseconditionDialog($event)}}},[_vm._v(\"添加前置接口\")]):_vm._e()],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],attrs:{\"data\":_vm.apiconditioncaseList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"45\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.apiconditioncaseIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"前置条件名\",\"align\":\"center\",\"prop\":\"subconditionname\",\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"前置接口\",\"align\":\"center\",\"prop\":\"casename\",\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"所属集合\",\"align\":\"center\",\"prop\":\"conditionname\",\"width\":\"150\"}}),_vm._v(\" \"),(_vm.hasPermission('testscene:caseupdateapicondition')  || _vm.hasPermission('testscene:casedeleteapicondition'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('testscene:caseupdateapicondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateapiconditionDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('testscene:casedeleteapicondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removecaseapicondition(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e()]}}],null,false,3600714770)}):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.SceneapiconditiontextMap[_vm.SceneconditiondialogStatus],\"visible\":_vm.SceneconditiondialogFormVisible},on:{\"update:visible\":function($event){_vm.SceneconditiondialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpsceneapicondition\",staticClass:\"small-space\",staticStyle:{\"width\":\"450px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpsceneapicondition}},[_c('el-form-item',{attrs:{\"label\":\"前置条件名\",\"prop\":\"subconditionname\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"maxlength\":\"30\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpsceneapicondition.subconditionname),callback:function ($$v) {_vm.$set(_vm.tmpsceneapicondition, \"subconditionname\", $$v)},expression:\"tmpsceneapicondition.subconditionname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"微服务\",\"prop\":\"deployunitname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"微服务\"},on:{\"change\":function($event){return _vm.sceneconditiondeployunitselectChanged($event)}},model:{value:(_vm.tmpsceneapicondition.deployunitname),callback:function ($$v) {_vm.$set(_vm.tmpsceneapicondition, \"deployunitname\", $$v)},expression:\"tmpsceneapicondition.deployunitname\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.deployunitList),function(depunitname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":depunitname.deployunitname,\"value\":depunitname.deployunitname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"模块:\",\"prop\":\"modelname\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"模块\"},on:{\"change\":function($event){return _vm.sceneconditionmodelselectChanged($event)}},model:{value:(_vm.tmpsceneapicondition.modelname),callback:function ($$v) {_vm.$set(_vm.tmpsceneapicondition, \"modelname\", $$v)},expression:\"tmpsceneapicondition.modelname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.sceneconditionmodelList),function(model,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":model.modelname,\"value\":model.modelname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"API\",\"prop\":\"apiname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"API\"},on:{\"change\":function($event){return _vm.sceneconditionapiselectChanged($event)}},model:{value:(_vm.tmpsceneapicondition.apiname),callback:function ($$v) {_vm.$set(_vm.tmpsceneapicondition, \"apiname\", $$v)},expression:\"tmpsceneapicondition.apiname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.sceneconditionapiList),function(api,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":api.apiname,\"value\":api.apiname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"接口\",\"prop\":\"casename\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"接口\"},on:{\"change\":function($event){return _vm.sceneconditiontestcaseselectChanged($event)}},model:{value:(_vm.tmpsceneapicondition.casename),callback:function ($$v) {_vm.$set(_vm.tmpsceneapicondition, \"casename\", $$v)},expression:\"tmpsceneapicondition.casename\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.sceneconditioncaseList),function(testcase,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":testcase.casename,\"value\":testcase.casename,\"required\":\"\"}})],1)})],2)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.SceneconditiondialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.SceneconditiondialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"danger\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.$refs['tmpapicondition'].resetFields()}}},[_vm._v(\"重置\")]):_vm._e(),_vm._v(\" \"),(_vm.SceneconditiondialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addscenecondition($event)}}},[_vm._v(\"添加\")]):_vm._e(),_vm._v(\" \"),(_vm.SceneconditiondialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updatescenecondition($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.paramstextMap[_vm.ParamsdialogStatus],\"visible\":_vm.modifyparamdialogFormVisible},on:{\"update:visible\":function($event){_vm.modifyparamdialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpparam\",staticClass:\"small-space\",staticStyle:{\"width\":\"600px\",\"margin-left\":\"30px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpparam}},[_c('el-form-item',{attrs:{\"label\":\"全局Header:\",\"prop\":\"globalheadername\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"415px\"},attrs:{\"placeholder\":\"全局Header\"},on:{\"change\":function($event){return _vm.notexistheaderselectChanged($event)}},model:{value:(_vm.tmpparam.globalheadername),callback:function ($$v) {_vm.$set(_vm.tmpparam, \"globalheadername\", $$v)},expression:\"tmpparam.globalheadername\"}},_vm._l((_vm.globalheaderallList),function(globalheader,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":globalheader.globalheadername,\"value\":globalheader.globalheadername}})],1)}),0)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.modifyparamdialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.ParamsdialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addparams($event)}}},[_vm._v(\"添加\")]):_vm._e(),_vm._v(\" \"),(_vm.ParamsdialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updatparam($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"width\":\"840px\",\"title\":\"测试场景\",\"visible\":_vm.testscenedialogFormVisible},on:{\"update:visible\":function($event){_vm.testscenedialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.ShowAddScenceDialog}},[_vm._v(\"添加场景\")])],1)],1)],1),_vm._v(\" \"),_c('el-table',{ref:\"testplansceneTable\",attrs:{\"data\":_vm.testplansceneList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.planscenegetIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"场景名\",\"align\":\"center\",\"prop\":\"scenename\",\"width\":\"280\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"width\":\"120\",\"align\":\"center\",\"label\":\"场景顺序\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n            var row = ref.row;\nreturn [(row.edit)?[_c('el-input',{staticClass:\"edit-input\",attrs:{\"oninput\":\"value=value.replace(/[^\\\\d]/g,'')\",\"maxLength\":\"10\",\"size\":\"small\"},model:{value:(row.ordernum),callback:function ($$v) {_vm.$set(row, \"ordernum\", $$v)},expression:\"row.ordernum\"}}),_vm._v(\" \"),_c('el-button',{staticClass:\"cancel-btn\",attrs:{\"size\":\"small\",\"icon\":\"el-icon-refresh\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.cancelEdit(row)}}},[_vm._v(\"\\n                取消\\n              \")])]:_c('span',[_vm._v(_vm._s(row.ordernum))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"align\":\"center\",\"label\":\"操作\",\"width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n            var row = ref.row;\nreturn [(row.edit)?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"small\",\"icon\":\"el-icon-circle-check-outline\"},on:{\"click\":function($event){return _vm.confirmEdit(row)}}},[_vm._v(\"\\n              保存\\n            \")]):_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){row.edit=!row.edit}}},[_vm._v(\"\\n              设置顺序\\n            \")])]}}])}),_vm._v(\" \"),(_vm.hasPermission('testscene:deletecase')  || _vm.hasPermission('testscene:scenecondition'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\",\"width\":\"220\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('testscene:deletecase') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removetestplanscene(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('testscene:scenecondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showtestscenecaseConditionDialog(scope.$index)}}},[_vm._v(\"前置条件\")]):_vm._e()]}}],null,false,1684076174)}):_vm._e()],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.searchscene.page,\"page-size\":_vm.searchscene.size,\"total\":_vm.testplanscenetotal,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.planscenehandleSizeChange,\"current-change\":_vm.planscenehandleCurrentChange}})],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"width\":\"800px\",\"title\":\"添加场景\",\"visible\":_vm.addtestscenedialogFormVisible},on:{\"update:visible\":function($event){_vm.addtestscenedialogFormVisible=$event}}},[_c('el-table',{key:_vm.itemaddsceneKey,ref:\"addsceneTable\",attrs:{\"data\":_vm.testsceneList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.addscenehandleClickTableRow,\"selection-change\":_vm.addscenehandleSelectionChange}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.addscenegetIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"type\":\"selection\",\"prop\":\"status\",\"width\":\"50\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"场景名\",\"align\":\"center\",\"prop\":\"scenename\",\"width\":\"370\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"场景类型\",\"align\":\"center\",\"prop\":\"usetype\",\"width\":\"280\"}})],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.addsearchscene.page,\"page-size\":_vm.addsearchscene.size,\"total\":_vm.addscenetotal,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.addscenehandleSizeChange,\"current-change\":_vm.addscenehandleCurrentChange}}),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.addtestscenedialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addplantestscene($event)}}},[_vm._v(\"添加\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.apiconditiontextMap[_vm.apiconditiondialogStatus],\"visible\":_vm.caseconditiondialogFormVisible},on:{\"update:visible\":function($event){_vm.caseconditiondialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpapicondition\",staticClass:\"small-space\",staticStyle:{\"width\":\"450px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpapicondition}},[_c('el-form-item',{attrs:{\"label\":\"前置条件名\",\"prop\":\"subconditionname\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"maxlength\":\"30\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpapicondition.subconditionname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"subconditionname\", $$v)},expression:\"tmpapicondition.subconditionname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"微服务\",\"prop\":\"deployunitname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"微服务\"},on:{\"change\":function($event){return _vm.apiconditiondeployunitselectChanged($event)}},model:{value:(_vm.tmpapicondition.deployunitname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"deployunitname\", $$v)},expression:\"tmpapicondition.deployunitname\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.deployunitList),function(depunitname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":depunitname.deployunitname,\"value\":depunitname.deployunitname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"模块:\",\"prop\":\"modelname\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"模块\"},on:{\"change\":function($event){return _vm.apiconditionmodelselectChanged($event)}},model:{value:(_vm.tmpapicondition.modelname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"modelname\", $$v)},expression:\"tmpapicondition.modelname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.apiconditionmodelList),function(model,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":model.modelname,\"value\":model.modelname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"API\",\"prop\":\"apiname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"API\"},on:{\"change\":function($event){return _vm.apiconditionapiselectChanged($event)}},model:{value:(_vm.tmpapicondition.apiname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"apiname\", $$v)},expression:\"tmpapicondition.apiname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.apiconditionapiList),function(api,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":api.apiname,\"value\":api.apiname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"接口\",\"prop\":\"casename\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"接口\"},on:{\"change\":function($event){return _vm.apiconditiontestcaseselectChanged($event)}},model:{value:(_vm.tmpapicondition.casename),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"casename\", $$v)},expression:\"tmpapicondition.casename\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.apiconditioncaseList),function(testcase,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":testcase.casename,\"value\":testcase.casename,\"required\":\"\"}})],1)})],2)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.caseconditiondialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.apiconditiondialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"danger\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.$refs['tmpapicondition'].resetFields()}}},[_vm._v(\"重置\")]):_vm._e(),_vm._v(\" \"),(_vm.apiconditiondialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addapicondition($event)}}},[_vm._v(\"添加\")]):_vm._e(),_vm._v(\" \"),(_vm.apiconditiondialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updateapicondition($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"场景前置条件\",\"visible\":_vm.scenecaseConditionFormVisible},on:{\"update:visible\":function($event){_vm.scenecaseConditionFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('testscene:scenecasecondition'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.ShowAddPlanSceneconditionDialog($event)}}},[_vm._v(\"添加前置接口\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('testscene:scenecasecondition'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAddScenedelayconditionDialog($event)}}},[_vm._v(\"添加前置延时\")]):_vm._e()],1)],1)],1),_vm._v(\"\\n\\n            1.接口前置条件：\\n\\n\\n      \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],attrs:{\"data\":_vm.apiconditioncaseList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"45\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.apiconditioncaseIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"前置条件名\",\"align\":\"center\",\"prop\":\"subconditionname\",\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"前置接口\",\"align\":\"center\",\"prop\":\"casename\",\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"所属场景\",\"align\":\"center\",\"prop\":\"conditionname\",\"width\":\"150\"}}),_vm._v(\" \"),(_vm.hasPermission('testscene:caseupdateapicondition')  || _vm.hasPermission('testscene:casedeleteapicondition'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('testscene:caseupdateapicondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdatesceneconditionDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('testscene:casedeleteapicondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removecasescenecondition(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e()]}}],null,false,3571302418)}):_vm._e()],1),_vm._v(\"\\n\\n            2.延时前置条件：\\n\\n\\n      \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemKey,attrs:{\"data\":_vm.delayconditionList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"前置条件名\",\"align\":\"center\",\"prop\":\"subconditionname\",\"width\":\"200\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"等待时间(秒)\",\"align\":\"center\",\"prop\":\"delaytime\",\"width\":\"150\"}}),_vm._v(\" \"),(_vm.hasPermission('delaycondition:update')  || _vm.hasPermission('delaycondition:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('delaycondition:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdatedelayconditionDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('delaycondition:delete') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removedelaycondition(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e()]}}],null,false,4005561702)}):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.DelaytextMap[_vm.DelaydialogStatus],\"visible\":_vm.DelaydialogFormVisible},on:{\"update:visible\":function($event){_vm.DelaydialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpdelaycondition\",staticClass:\"small-space\",staticStyle:{\"width\":\"600px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpdelaycondition}},[_c('el-form-item',{attrs:{\"label\":\"条件名\",\"prop\":\"subconditionname\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"maxlength\":\"30\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpdelaycondition.subconditionname),callback:function ($$v) {_vm.$set(_vm.tmpdelaycondition, \"subconditionname\", $$v)},expression:\"tmpdelaycondition.subconditionname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"等待时间(秒)\",\"prop\":\"delaytime\",\"required\":\"\"}},[_c('el-input',{attrs:{\"placeholder\":\"等待时间(秒)\",\"oninput\":\"value=value.replace(/[^\\\\d]/g,'')\",\"maxLength\":\"10\",\"type\":\"number\",\"prefix-icon\":\"el-icon-message\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpdelaycondition.delaytime),callback:function ($$v) {_vm.$set(_vm.tmpdelaycondition, \"delaytime\", $$v)},expression:\"tmpdelaycondition.delaytime\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.DelaydialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.DelaydialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"danger\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.$refs['tmpdelaycondition'].resetFields()}}},[_vm._v(\"重置\")]):_vm._e(),_vm._v(\" \"),(_vm.DelaydialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.adddelaycondition($event)}}},[_vm._v(\"添加\")]):_vm._e(),_vm._v(\" \"),(_vm.DelaydialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updatedelaycondition($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-ab702850\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/executecenter/executeplan/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ab702850\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/executecenter/executeplan/index.vue\n// module id = null\n// module chunks = ","import request from '@/utils/request'\n\nexport function getapicasesdebugList(params) {\n  return request({\n    url: 'globalheaderuse/',\n    method: 'get',\n    params\n  })\n}\n\nexport function searchheaderbyepid(params) {\n  return request({\n    url: '/globalheaderuse/searchheaderbyepid',\n    method: 'post',\n    data: params\n  })\n}\n\nexport function getapicasesdebugnum() {\n  return request({\n    url: 'globalheaderuse//getapicasesdebugnum',\n    method: 'get'\n  })\n}\n\nexport function getapicasesdebugallList() {\n  return request({\n    url: 'globalheaderuse//ens',\n    method: 'get'\n  })\n}\n\nexport function searchheadernotexist(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/searchnotexit',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function searchheaderexist(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/searchexit',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function addheadercasesdebug(apicases) {\n  return request({\n    url: 'globalheaderuse/addcases',\n    method: 'post',\n    data: apicases\n  })\n}\n\nexport function deleteheadercase(apicases) {\n  return request({\n    url: 'globalheaderuse/deletacases',\n    method: 'post',\n    data: apicases\n  })\n}\n\nexport function addapicasesdebug(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function updateapicasesdebug(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/detail',\n    method: 'put',\n    data: apicasesdebugForm\n  })\n}\n\nexport function removeapicasesdebug(apicasesdebugId) {\n  return request({\n    url: 'globalheaderuse/' + apicasesdebugId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/assets/globalheaderuse.js"],"sourceRoot":""}