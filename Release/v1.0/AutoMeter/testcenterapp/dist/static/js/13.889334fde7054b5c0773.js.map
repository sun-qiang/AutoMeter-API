{"version":3,"sources":["webpack:///./src/api/executecenter/testscene.js","webpack:///src/views/executecenter/executeplan/index.vue","webpack:///./src/api/executecenter/testplantestscene.js","webpack:///./src/views/executecenter/executeplan/index.vue?d402","webpack:///./src/views/executecenter/executeplan/index.vue","webpack:///./src/api/assets/globalheaderuse.js"],"names":["testsceneForm","Object","__WEBPACK_IMPORTED_MODULE_0__utils_request__","url","method","data","apicasesForm","params","testsceneId","executecenter_executeplan","name","filters","statusFilter","status","published","draft","deleted","id","datevisible","timevisible","itemKey","itemplanKey","itemcaseKey","planbusinessdiclist","tmpexecuteplanname","tmpcasedeployunitname","tmpcaseapiname","tmpcaseexecuteplanid","tmpcasecasetype","show","PerformanceVisible","enviromentnameList","apiList","deployunitList","multipleSelection","casemultipleSelection","globalheaderallList","executeplanList","testcaseList","testcaselastList","executeplancaseList","executeplancaseexistList","executeplancaseremovetList","executeplanstopList","tmpplanbatchList","paramsList","addtestscenelastList","testplansceneList","testsceneList","addtestsceneList","apiconditioncaseList","apiconditionmodelList","apiconditionapiList","itemaddsceneKey","scenemultipleSelection","tmptestscenename","scenetotal","addscenetotal","testplanscenetotal","addsearchscene","page","size","casetype","searchscene","projectid","listLoading","caselistLoading","total","casetotal","apiQuery","deployunitname","listQuery","executeplanname","caselistQuery","apiname","executeplanid","ParamsdialogStatus","dialogStatus","dialogFormVisible","casedialogFormVisible","batchdialogFormVisible","CollectionParamsFormVisible","modifyparamdialogFormVisible","ConditionFormVisible","testscenedialogFormVisible","addtestscenedialogFormVisible","loadcase","loadbatch","textMap","updateRole","update","add","apiconditiontextMap","apiconditiondialogStatus","caseconditiondialogFormVisible","tmpapicondition","modelid","modelname","conditionid","subconditionname","conditionname","deployunitid","apiid","caseid","casename","memo","conditiontype","creator","paramstextMap","diclevelQuery","diccode","btnLoading","casebtnLoading","execbtnLoading","tmpexecuteplan","enviromentname","envid","usetype","businesstype","ip","dingdingtoken","runmode","tmpplanbatch","batchid","batchname","exectype","exectmpdate","execdate","exectime","tmpplanenv","tmpapicases","casejmxname","casecontent","expect","level","tmpparam","paramstype","keyname","keyvalue","globalheadername","globalheaderid","tmpep","search","searchcase","searchparam","searchapicondition","tmpexecplan","execplanid","execplanname","tmpexecplanforscene","testplanid","computed","extends_default","vuex_esm","created","this","window","localStorage","getItem","getexecuteplanList","getapiList","getdepunitList","getenviromentallList","getdatabydiccodeList","getglobalheaderallList","activated","methods","showUpdateapiconditionDialog","index","updateapicondition","_this","$refs","validate","valid","apicondition","then","$message","success","getapiconditionList","catch","res","error","removecaseapicondition","_this2","$confirm","confirmButtonText","cancelButtonText","type","info","apiconditiontestcaseselectChanged","e","i","length","apiconditionmodelselectChanged","_this3","api","response","apiconditionapiselectChanged","_this4","apicases","showtestplanConditionDialog","apiconditioncaseIndex","_this5","list","addapicondition","_this6","apiconditiondeployunitselectChanged","_this7","depunitmodel","cancelEdit","row","ordernum","oldcaseorder","edit","confirmEdit","executeplanForm","_this8","request","findscenebyexecplanid","testplanForm","_this9","items","map","v","$set","addscenehandleClickTableRow","event","column","addscenehandleSelectionChange","rows","addscenehandleCurrentChange","gettestsceneList","planscenehandleCurrentChange","addscenegetIndex","_this10","scenename","testscene","addscenehandleSizeChange","planscenehandleSizeChange","_this11","dictionary","unix2CurrentTime","utils","_this12","globalheader","searchheaderbyepid","_this13","console","log","globalheaderuse","stopexecuteplanList","_this14","splice","_i","push","executeplan","savebatchandexecuteplancase","_this15","executeplancase","_this16","_i2","handleClickTableRow","handleSelectionChange","casehandleClickTableRow","casehandleSelectionChange","exectypeselectChanged","paramstypeselectChanged","_this17","tmpexecplanname","tmpbatchname","searchBy","_this18","Math","random","handleSizeChange","handleCurrentChange","getIndex","paramgetIndex","planscenegetIndex","enviromentselectChanged","selectChanged","_this19","_this20","_this21","testenviroment","_this22","depunit","getcaseList","_this23","apicasesList","searchcaseBy","searchtestplanexistcase","gettestcaselastList","_this24","asyncToGenerator_default","regenerator_default","a","mark","_callee","j","wrap","_context","prev","next","testcaseid","checkstats","stop","searchcaseBydepandapi","_this25","_callee2","_context2","_this26","executeplantestcase","$nextTick","caseTable","toggleRowSelection","casehandleSizeChange","casehandleCurrentChange","casegetIndex","showAddexecuteplanDialog","showplanparamsDialog","showtestsceneDialog","ShowAddScenceDialog","ShowAddPlancaseconditionDialog","showAddapiparamsDialog","showUpdateparamsDialog","showplanbatchDialog","_this27","addexecuteplan","_this28","addparams","_this29","updatparam","_this30","removeexecuteplanparam","_this31","showUpdateexecuteplanDialog","addplantestscene","sceneForm","_this32","testscenenid","planname","addexecuteplantestcase","_this33","removeexecuteplantestcase","_this34","findflag","showTestCaseDialog","updateexecuteplan","_this35","removeexecuteplan","_this36","isUniqueDetail","notexistheaderselectChanged","views_executecenter_executeplan","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","inline","hasPermission","icon","nativeOn","click","$event","preventDefault","_v","_e","label","clearable","placeholder","keyup","indexOf","_k","keyCode","key","model","value","callback","$$v","expression","_l","businessdicitem","dicitmevalue","loading","on","directives","rawName","modifiers","body","ref","element-loading-text","border","fit","highlight-current-row","row-click","selection-change","width","align","scopedSlots","_u","fn","scope","domProps","textContent","_s","$index","show-overflow-tooltip","prop","createTime","lastmodifyTime","current-page","page-size","page-sizes","layout","size-change","current-change","title","visible","update:visible","staticStyle","margin-left","status-icon","label-position","label-width","required","maxlength","prefix-icon","auto-complete","trim","change","display","envname","businesstypeselectChanged","dicitem","slot","depname","format","value-format","picker-options","start","step","end","filterable","depunitname","testcase","resetFields","oninput","maxLength","removetestscenecase","showtestscenecaseConditionDialog","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__","apicasesdebugForm","apicasesdebugId"],"mappings":"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","file":"static/js/13.889334fde7054b5c0773.js","sourcesContent":["import request from '@/utils/request'\n\nexport function gettestsceneList(params) {\n  return request({\n    url: '/testscene',\n    method: 'get',\n    params\n  })\n}\n\nexport function getstaticsplan(params) {\n  return request({\n    url: '/testscene/getstaticsplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function gettestscenenum(params) {\n  return request({\n    url: '/testscene/gettestscenenum',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplanbytype(params) {\n  return request({\n    url: '/testscene/getallexplanbytype',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplan(params) {\n  return request({\n    url: '/testscene/getallexplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function search(testsceneForm) {\n  return request({\n    url: '/testscene/search',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function addtestscene(testsceneForm) {\n  return request({\n    url: '/testscene',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function testscene(testsceneForm) {\n  return request({\n    url: '/testscene/execplancases',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function checkplancondition(testsceneForm) {\n  return request({\n    url: '/testscene/checkcondition',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function updatetestscene(testsceneForm) {\n  return request({\n    url: '/testscene/detail',\n    method: 'put',\n    data: testsceneForm\n  })\n}\n\nexport function copyscene(apicasesForm) {\n  return request({\n    url: '/testscene/copyscene',\n    method: 'post',\n    data: apicasesForm\n  })\n}\n\nexport function getsceneallList(params) {\n  return request({\n    url: '/testscene/scenes',\n    method: 'get',\n    params\n  })\n}\n\nexport function updatetestscenestatus(testsceneForm) {\n  return request({\n    url: '/testscene/updatestatus',\n    method: 'post',\n    data: testsceneForm\n  })\n}\n\nexport function removetestscene(testsceneId) {\n  return request({\n    url: '/testscene/' + testsceneId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/executecenter/testscene.js","<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-form :inline=\"true\">\n        <el-form-item>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            icon=\"el-icon-refresh\"\n            v-if=\"hasPermission('executeplan:list')\"\n            @click.native.prevent=\"getexecuteplanList\"\n          >刷新</el-button>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:list')\"\n            @click.native.prevent=\"showplanbatchDialog\"\n          >运行</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            icon=\"el-icon-plus\"\n            v-if=\"hasPermission('executeplan:add')\"\n            @click.native.prevent=\"showAddexecuteplanDialog\"\n          >添加测试集合</el-button>\n        </el-form-item>\n\n        <span v-if=\"hasPermission('executeplan:search')\">\n          <el-form-item label=\"测试集合:\">\n            <el-input v-model=\"search.executeplanname\" clearable @keyup.enter.native=\"searchBy\" placeholder=\"测试集合\"></el-input>\n          </el-form-item>\n\n          <el-form-item  label=\"业务类型:\">\n            <el-select v-model=\"search.businesstype\" clearable placeholder=\"业务类型\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(businessdicitem, index) in planbusinessdiclist\" :key=\"index\">\n                <el-option :label=\"businessdicitem.dicitmevalue\" :value=\"businessdicitem.dicitmevalue\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchBy\" :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n      </el-form>\n    </div>\n    <el-table\n      ref=\"fileTable\"\n      :data=\"executeplanList\"\n      :key=\"itemplanKey\"\n      @row-click=\"handleClickTableRow\"\n      @selection-change=\"handleSelectionChange\"\n      v-loading.body=\"listLoading\"\n      element-loading-text=\"loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column\n        type=\"selection\"\n        width=\"40\">\n      </el-table-column>\n      <el-table-column label=\"编号\" align=\"center\" width=\"50\">\n        <template slot-scope=\"scope\">\n          <span v-text=\"getIndex(scope.$index)\"></span>\n        </template>\n      </el-table-column>\n      <el-table-column :show-overflow-tooltip=\"true\"  label=\"集合名\" align=\"center\" prop=\"executeplanname\" width=\"100\"/>\n      <el-table-column label=\"envid\" align=\"center\" v-if=\"show\" prop=\"envid\" width=\"50\"/>\n      <el-table-column label=\"状态\" align=\"center\" prop=\"status\" v-if=\"show\" width=\"50\"/>\n      <el-table-column label=\"业务类型\" align=\"center\" prop=\"businesstype\" width=\"70\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"执行环境\" align=\"center\" prop=\"enviromentname\" width=\"80\"/>\n      <el-table-column label=\"类型\" align=\"center\" prop=\"usetype\" width=\"50\"/>\n      <el-table-column label=\"运行模式\" align=\"center\" prop=\"runmode\" width=\"70\"/>\n      <el-table-column label=\"用例数\" align=\"center\" prop=\"casecounts\" width=\"60\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"通知钉钉token\" align=\"center\" prop=\"dingdingtoken\" width=\"110\"/>\n      <el-table-column label=\"操作人\" align=\"center\" prop=\"creator\" width=\"60\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"描述\" align=\"center\" prop=\"memo\" width=\"80\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"110\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.createTime) }}</template>\n      </el-table-column>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"最后修改时间\" align=\"center\" prop=\"lastmodifyTime\" width=\"110\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.lastmodifyTime) }}\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"管理\" align=\"center\" width=\"450\"\n                       v-if=\"hasPermission('executeplan:update')  || hasPermission('executeplan:delete')\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"warning\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showUpdateexecuteplanDialog(scope.$index)\"\n          >修改</el-button>\n          <el-button\n            type=\"danger\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:delete') && scope.row.id !== id\"\n            @click.native.prevent=\"removeexecuteplan(scope.$index)\"\n          >删除</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showplanparamsDialog(scope.$index)\"\n          >全局Header</el-button>\n\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showtestsceneDialog(scope.$index)\"\n          >测试场景</el-button>\n\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showtestplanConditionDialog(scope.$index)\"\n          >前置条件</el-button>\n\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"search.page\"\n      :page-size=\"search.size\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20, 30, 40]\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n    ></el-pagination>\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 400px; margin-left:50px;\"\n        :model=\"tmpexecuteplan\"\n        ref=\"tmpexecuteplan\"\n      >\n        <el-form-item label=\"集合名\" prop=\"executeplanname\" required>\n          <el-input\n            type=\"text\"\n            maxlength=\"50\"\n            prefix-icon=\"el-icon-edit\"\n            auto-complete=\"off\"\n            v-model.trim=\"tmpexecuteplan.executeplanname\"\n          />\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"usetype\" required>\n          <el-select v-model=\"tmpexecuteplan.usetype\" placeholder=\"类型\" style=\"width:100%\">\n            <el-option label=\"功能\" value=\"功能\" />\n            <el-option label=\"性能\" value=\"性能\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"执行环境\" prop=\"enviromentname\"  required>\n          <el-select v-model=\"tmpexecuteplan.enviromentname\" placeholder=\"执行环境\" style=\"width:100%\" @change=\"enviromentselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(envname, index) in enviromentnameList\" :key=\"index\">\n              <el-option :label=\"envname.enviromentname\" :value=\"envname.enviromentname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"业务类型\" prop=\"businesstype\"  required>\n          <el-select v-model=\"tmpexecuteplan.businesstype\" placeholder=\"业务类型\" style=\"width:100%\" @change=\"businesstypeselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(dicitem, index) in planbusinessdiclist\" :key=\"index\">\n              <el-option :label=\"dicitem.dicitmevalue\" :value=\"dicitem.dicitmevalue\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n          <el-form-item label=\"运行模式\" prop=\"runmode\" required>\n            <el-select v-model=\"tmpexecuteplan.runmode\" placeholder=\"运行模式\" style=\"width:100%\">\n              <el-option label=\"单机运行\" value=\"单机运行\" />\n              <el-option label=\"多机并行\" value=\"多机并行\" />\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"钉钉通知token\" prop=\"dingdingtoken\">\n            <el-input\n              maxlength=\"200\"\n              type=\"text\"\n              prefix-icon=\"el-icon-message\"\n              auto-complete=\"off\"\n              v-model=\"tmpexecuteplan.dingdingtoken\"\n            />\n          </el-form-item>\n\n        <el-form-item label=\"备注\" prop=\"memo\">\n          <el-input\n            maxlength=\"200\"\n            type=\"text\"\n            prefix-icon=\"el-icon-message\"\n            auto-complete=\"off\"\n            v-model=\"tmpexecuteplan.memo\"\n          />\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"dialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addexecuteplan\"\n        >保存\n        </el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updateexecuteplan\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"loadcase\" :visible.sync=\"casedialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form :inline=\"true\" :model=\"searchcase\" ref=\"searchcase\" >\n          <span v-if=\"hasPermission('apicases:search')\">\n          <el-form-item label=\"微服务:\" prop=\"deployunitname\" required>\n            <el-select v-model=\"searchcase.deployunitname\" placeholder=\"微服务\" @change=\"selectChanged($event)\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(depname, index) in deployunitList\" :key=\"index\">\n                <el-option :label=\"depname.deployunitname\" :value=\"depname.deployunitname\" required/>\n              </div>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"API:\">\n            <el-select v-model=\"searchcase.apiname\" placeholder=\"api名\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(api, index) in apiList\" :key=\"index\">\n                <el-option :label=\"api.apiname\" :value=\"api.apiname\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchcaseBy\" :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n        </el-form>\n      </div>\n      <el-table\n        ref=\"caseTable\"\n        :data=\"testcaselastList\"\n        :key=\"itemcaseKey\"\n        @row-click=\"casehandleClickTableRow\"\n        @selection-change=\"casehandleSelectionChange\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"getIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n\n        <el-table-column type=\"selection\" prop=\"status\" width=\"50\"/>\n        <el-table-column label=\"apiid\" v-if=\"show\" align=\"center\" prop=\"apiid\" width=\"120\"/>\n        <el-table-column label=\"deployunitid\" v-if=\"show\" align=\"center\" prop=\"deployunitid\" width=\"120\"/>\n        <el-table-column label=\"用例名\" align=\"center\" prop=\"casename\" width=\"120\"/>\n        <el-table-column label=\"微服务\" align=\"center\" prop=\"deployunitname\" width=\"120\"/>\n        <el-table-column label=\"API\" align=\"center\" prop=\"apiname\" width=\"120\"/>\n        <el-table-column label=\"期望值\" align=\"center\" prop=\"expect\" width=\"120\"/>\n      </el-table>\n      <el-pagination\n        @size-change=\"casehandleSizeChange\"\n        @current-change=\"casehandleCurrentChange\"\n        :current-page=\"searchcase.page\"\n        :page-size=\"searchcase.size\"\n        :total=\"casetotal\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n      ></el-pagination>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"casedialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addexecuteplantestcase\"\n        >装载</el-button>\n        <el-button\n          type=\"warning\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"removeexecuteplantestcase\"\n        >取消装载</el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"loadbatch\" :visible.sync=\"batchdialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form  :model=\"tmpplanbatch\" ref=\"tmpplanbatch\" >\n          <el-form-item label=\"执行计划：\"  prop=\"batchname\" required>\n            <el-input\n              type=\"text\"\n              maxlength=\"50\"\n              style=\"width:60%\"\n              placeholder=\"例如2020-10-21-tag-101\"\n              prefix-icon=\"el-icon-edit\"\n              auto-complete=\"off\"\n              v-model.trim=\"tmpplanbatch.batchname\"\n            />\n          </el-form-item>\n          <el-form-item label=\"执行类型：\" prop=\"exectype\" required >\n            <el-select v-model=\"tmpplanbatch.exectype\" placeholder=\"执行类型\" style=\"width:60%\" @change=\"exectypeselectChanged($event)\">\n              <el-option label=\"立即执行\" value=\"立即执行\"></el-option>\n              <el-option label=\"某天定时\" value=\"某天定时\"></el-option>\n              <el-option label=\"每天定时\" value=\"每天定时\"></el-option>\n            </el-select>\n          </el-form-item>\n          <div v-if=\"datevisible\">\n            <el-form-item label=\"选择日期：\" prop=\"exectmpdate\" required >\n              <el-date-picker style=\"width:60%\"\n                              v-model=\"tmpplanbatch.exectmpdate\"\n                              type=\"date\"\n                              format=\"yyyy-MM-dd\"\n                              value-format=\"yyyy-MM-dd\"\n                              placeholder=\"选择日期\">\n              </el-date-picker>\n            </el-form-item>\n          </div>\n          <div v-if=\"timevisible\">\n            <el-form-item label=\"选择时刻：\" prop=\"exectime\" required >\n              <el-time-select style=\"width:60%\"\n                              v-model=\"tmpplanbatch.exectime\"\n                              :picker-options=\"{\n              start: '00:05',\n              step: '00:10',\n              end: '23:55'\n            }\"\n                              placeholder=\"选择时间\">\n              </el-time-select>\n            </el-form-item>\n          </div>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"batchdialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          :loading=\"execbtnLoading\"\n          @click.native.prevent=\"savebatchandexecuteplancase\"\n        >执行</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"全局Header\" :visible.sync=\"CollectionParamsFormVisible\">\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\">\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              v-if=\"hasPermission('executeplan:add')\"\n              @click.native.prevent=\"showAddapiparamsDialog\"\n            >添加全局Header</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <el-table\n        :data=\"paramsList\"\n        :key=\"itemKey\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"45\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"paramgetIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Header\" align=\"center\" prop=\"globalheadername\" width=\"280\"/>\n        <el-table-column label=\"管理\" align=\"center\"\n                         v-if=\"hasPermission('executeplan:update')  || hasPermission('executeplan:delete')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"warning\"\n              size=\"mini\"\n              v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n              @click.native.prevent=\"showUpdateparamsDialog(scope.$index)\"\n            >修改</el-button>\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('executeplan:delete') && scope.row.id !== id\"\n              @click.native.prevent=\"removeexecuteplanparam(scope.$index)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n\n    <el-dialog title=\"集合前置条件\" :visible.sync=\"ConditionFormVisible\">\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\">\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              v-if=\"hasPermission('testscene:scenecasecondition')\"\n              @click.native.prevent=\"ShowAddPlancaseconditionDialog\"\n            >添加前置接口</el-button>\n            <!--            <el-button-->\n            <!--              type=\"primary\"-->\n            <!--              size=\"mini\"-->\n            <!--              icon=\"el-icon-plus\"-->\n            <!--              v-if=\"hasPermission('testscene:scenecasecondition')\"-->\n            <!--              @click.native.prevent=\"AddcasedbconditionDialog\"-->\n            <!--            >添加前置数据库</el-button>-->\n            <!--            <el-button-->\n            <!--              type=\"primary\"-->\n            <!--              size=\"mini\"-->\n            <!--              icon=\"el-icon-plus\"-->\n            <!--              v-if=\"hasPermission('testscene:scenecasecondition')\"-->\n            <!--              @click.native.prevent=\"showAddapiparamsDialog\"-->\n            <!--            >添加前置脚本</el-button>-->\n\n            <!--            <el-button-->\n            <!--              type=\"primary\"-->\n            <!--              size=\"mini\"-->\n            <!--              icon=\"el-icon-plus\"-->\n            <!--              v-if=\"hasPermission('testscene:scenecasecondition')\"-->\n            <!--              @click.native.prevent=\"showAddapiparamsDialog\"-->\n            <!--            >添加前置延时</el-button>-->\n          </el-form-item>\n        </el-form>\n      </div>\n      <!--      1.接口前置条件：-->\n      <el-table\n        :data=\"apiconditioncaseList\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"45\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"apiconditioncaseIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"前置条件名\" align=\"center\" prop=\"subconditionname\" width=\"150\"/>\n        <el-table-column label=\"前置接口\" align=\"center\" prop=\"casename\" width=\"150\"/>\n        <el-table-column label=\"所属集合\" align=\"center\" prop=\"conditionname\" width=\"150\"/>\n\n        <el-table-column label=\"管理\" align=\"center\"\n                         v-if=\"hasPermission('testscene:caseupdateapicondition')  || hasPermission('testscene:casedeleteapicondition')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"warning\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:caseupdateapicondition') && scope.row.id !== id\"\n              @click.native.prevent=\"showUpdateapiconditionDialog(scope.$index)\"\n            >修改</el-button>\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:casedeleteapicondition') && scope.row.id !== id\"\n              @click.native.prevent=\"removecaseapicondition(scope.$index)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n\n    <el-dialog :title=\"apiconditiontextMap[apiconditiondialogStatus]\" :visible.sync=\"caseconditiondialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 450px; margin-left:50px;\"\n        :model=\"tmpapicondition\"\n        ref=\"tmpapicondition\"\n      >\n\n        <el-form-item label=\"前置条件名\" prop=\"subconditionname\" required>\n          <el-input\n            type=\"text\"\n            maxlength=\"30\"\n            prefix-icon=\"el-icon-edit\"\n            auto-complete=\"off\"\n            v-model=\"tmpapicondition.subconditionname\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"微服务\" prop=\"deployunitname\" required >\n          <el-select v-model=\"tmpapicondition.deployunitname\" filterable placeholder=\"微服务\" style=\"width:100%\" @change=\"apiconditiondeployunitselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(depunitname, index) in deployunitList\" :key=\"index\">\n              <el-option :label=\"depunitname.deployunitname\" :value=\"depunitname.deployunitname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item  label=\"模块:\" prop=\"modelname\" >\n          <el-select v-model=\"tmpapicondition.modelname\" filterable placeholder=\"模块\" style=\"width:100%\" @change=\"apiconditionmodelselectChanged($event)\">\n            <el-option label=\"请选择\" value />\n            <div v-for=\"(model, index) in apiconditionmodelList\" :key=\"index\">\n              <el-option :label=\"model.modelname\" :value=\"model.modelname\" />\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"API\" prop=\"apiname\" required >\n          <el-select v-model=\"tmpapicondition.apiname\" filterable placeholder=\"API\" style=\"width:100%\" @change=\"apiconditionapiselectChanged($event)\">\n            <el-option label=\"请选择\" value />\n            <div v-for=\"(api, index) in apiconditionapiList\" :key=\"index\">\n              <el-option :label=\"api.apiname\" :value=\"api.apiname\"/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"接口\" prop=\"casename\" required >\n          <el-select v-model=\"tmpapicondition.casename\" filterable placeholder=\"接口\" style=\"width:100%\" @change=\"apiconditiontestcaseselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(testcase, index) in apiconditioncaseList\" :key=\"index\">\n              <el-option :label=\"testcase.casename\" :value=\"testcase.casename\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"caseconditiondialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"danger\"\n          v-if=\"apiconditiondialogStatus === 'add'\"\n          @click.native.prevent=\"$refs['tmpapicondition'].resetFields()\"\n        >重置</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"apiconditiondialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addapicondition\"\n        >添加</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"apiconditiondialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updateapicondition\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n\n\n    <el-dialog :title=\"paramstextMap[ParamsdialogStatus]\" :visible.sync=\"modifyparamdialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 600px; margin-left:30px;\"\n        :model=\"tmpparam\"\n        ref=\"tmpparam\"\n      >\n        <el-form-item label=\"全局Header:\"  prop=\"globalheadername\" required >\n          <el-select style=\"width:415px\" v-model=\"tmpparam.globalheadername\" placeholder=\"全局Header\" @change=\"notexistheaderselectChanged($event)\">\n            <div v-for=\"(globalheader, index) in globalheaderallList\" :key=\"index\">\n              <el-option :label=\"globalheader.globalheadername\" :value=\"globalheader.globalheadername\" />\n            </div>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"modifyparamdialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"ParamsdialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addparams\"\n        >添加</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"ParamsdialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updatparam\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog width=\"840px\" title='测试场景' :visible.sync=\"testscenedialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form :inline=\"true\"  >\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"ShowAddScenceDialog\" :loading=\"btnLoading\">添加场景</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n      <el-table\n        ref=\"testplansceneTable\"\n        :data=\"testplansceneList\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"planscenegetIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"场景名\" align=\"center\" prop=\"scenename\" width=\"280\"/>\n        <el-table-column width=\"120\" align=\"center\" label=\"场景顺序\">\n          <template slot-scope=\"{row}\">\n            <template v-if=\"row.edit\">\n              <el-input v-model=\"row.ordernum\" class=\"edit-input\"\n                        oninput=\"value=value.replace(/[^\\d]/g,'')\"\n                        maxLength='10'\n                        size=\"small\" />\n              <el-button\n                class=\"cancel-btn\"\n                size=\"small\"\n                icon=\"el-icon-refresh\"\n                type=\"warning\"\n                @click=\"cancelEdit(row)\"\n              >\n                取消\n              </el-button>\n            </template>\n            <span v-else>{{ row.ordernum }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"操作\" width=\"120\">\n          <template slot-scope=\"{row}\">\n            <el-button\n              v-if=\"row.edit\"\n              type=\"success\"\n              size=\"small\"\n              icon=\"el-icon-circle-check-outline\"\n              @click=\"confirmEdit(row)\"\n            >\n              保存\n            </el-button>\n            <el-button\n              v-else\n              type=\"primary\"\n              size=\"small\"\n              @click=\"row.edit=!row.edit\"\n            >\n              设置顺序\n            </el-button>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"管理\" align=\"center\" width=\"220\"\n                         v-if=\"hasPermission('testscene:deletecase')  || hasPermission('testscene:scenecondition')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:deletecase') && scope.row.id !== id\"\n              @click.native.prevent=\"removetestscenecase(scope.$index)\"\n            >删除</el-button>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              v-if=\"hasPermission('testscene:scenecondition') && scope.row.id !== id\"\n              @click.native.prevent=\"showtestscenecaseConditionDialog(scope.$index)\"\n            >前置条件</el-button>\n          </template>\n        </el-table-column>\n\n\n      </el-table>\n      <el-pagination\n        @size-change=\"planscenehandleSizeChange\"\n        @current-change=\"planscenehandleCurrentChange\"\n        :current-page=\"searchscene.page\"\n        :page-size=\"searchscene.size\"\n        :total=\"testplanscenetotal\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n      ></el-pagination>\n    </el-dialog>\n\n    <el-dialog width=\"800px\" title='添加场景' :visible.sync=\"addtestscenedialogFormVisible\">\n      <el-table\n        ref=\"addsceneTable\"\n        :data=\"testsceneList\"\n        :key=\"itemaddsceneKey\"\n        @row-click=\"addscenehandleClickTableRow\"\n        @selection-change=\"addscenehandleSelectionChange\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"addscenegetIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n\n        <el-table-column type=\"selection\" prop=\"status\" width=\"50\"/>\n        <el-table-column label=\"场景名\" align=\"center\" prop=\"scenename\" width=\"370\"/>\n        <el-table-column label=\"场景类型\" align=\"center\" prop=\"usetype\" width=\"280\"/>\n      </el-table>\n      <el-pagination\n        @size-change=\"addscenehandleSizeChange\"\n        @current-change=\"addscenehandleCurrentChange\"\n        :current-page=\"addsearchscene.page\"\n        :page-size=\"addsearchscene.size\"\n        :total=\"addscenetotal\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n      ></el-pagination>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"addtestscenedialogFormVisible = false\">取消</el-button>\n\n        <el-button\n          type=\"primary\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addplantestscene\"\n        >添加</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n<script>\n  import {\n    getapicasesList as getapicasesList,\n    search as getapicases\n  } from '@/api/assets/apicases'\n  import { search as getapiList } from '@/api/deployunit/api'\n  import { getdepunitLists } from '@/api/deployunit/depunit'\n  // import { addexecuteplanbatch as addexecuteplanbatch } from '@/api/executecenter/executeplanbatch'\n  import { searchcases as searchtestplancases, addexecuteplantestcase, removeexecuteplantestcase } from '@/api/executecenter/executeplantestcase'\n  import { checkplancondition as checkplancondition, search, addexecuteplan, updateexecuteplan, removeexecuteplan, executeplan, updateexecuteplanstatus } from '@/api/executecenter/executeplan'\n  import { unix2CurrentTime } from '@/utils'\n  import { getenviromentallList as getenviromentallList } from '@/api/enviroment/testenviroment'\n  import { getdatabydiccodeList as getdatabydiccodeList } from '@/api/system/dictionary'\n  import { getglobalheaderallList } from '@/api/testvariables/globalheader'\n  import { mapGetters } from 'vuex'\n  import { search as searchscence } from '@/api/executecenter/testscene'\n  import { addapicasesdebug, removeapicasesdebug, updateapicasesdebug, searchheaderbyepid } from '@/api/assets/globalheaderuse'\n  import { addtestplantestscene, findscenebyexecplanid, updateplanscenenorder } from '@/api/executecenter/testplantestscene'\n  import { getapiListbydeploy as getapiListbydeploy } from '@/api/deployunit/api'\n  import { searchdeployunitmodel } from '@/api/deployunit/depunitmodel'\n  import { search as searchapicondition, addapicondition, removeapicondition, updateapicondition } from '@/api/condition/apicondition'\n  import { findcasesbyname as findcasesbyname } from '@/api/assets/apicases'\n\n  export default {\n    name: '测试集合',\n    filters: {\n      statusFilter(status) {\n        const statusMap = {\n          published: 'success',\n          draft: 'gray',\n          deleted: 'danger'\n        }\n        return statusMap[status]\n      }\n    },\n    data() {\n      return {\n        id: null,\n        datevisible: false,\n        timevisible: false,\n        itemKey: null,\n        itemplanKey: null,\n        itemcaseKey: null,\n        planbusinessdiclist: [], // 执行计划字典表业务类型列表\n        tmpexecuteplanname: '',\n        tmpcasedeployunitname: null,\n        tmpcaseapiname: null,\n        tmpcaseexecuteplanid: null,\n        tmpcasecasetype: null,\n        show: false,\n        PerformanceVisible: false, // 显示性能运行模式\n        enviromentnameList: [], // 环境列表\n        apiList: [], // api列表\n        deployunitList: [], // 微服务列表\n        multipleSelection: [], // 执行计划表格被选中的内容\n        casemultipleSelection: [], // 用例表格被选中的内容\n        globalheaderallList: [], // 全局header列表\n        executeplanList: [], // 执行计划列表\n        testcaseList: [], // 用例列表\n        testcaselastList: [], // 经过用例列表和已装载的用例组合出的结果列表\n        executeplancaseList: [], // 执行计划装载用例列表\n        executeplancaseexistList: [], // 查询执行计划已存在的用例列表\n        executeplancaseremovetList: [], // 查询执行计划需要删除存在的用例列表\n        executeplanstopList: [], // 停止执行计划列表\n        tmpplanbatchList: [], // 计划批次列表\n        paramsList: [], // 参数列表\n        addtestscenelastList: [],\n        testplansceneList: [],\n        testsceneList: [], // 列表\n        addtestsceneList: [], // 列表\n        apiconditioncaseList: [], // 列表\n        apiconditionmodelList: [],\n        apiconditionapiList: [],\n        itemaddsceneKey: null,\n        scenemultipleSelection: [], // 查询用例表格被选中的内容\n        tmptestscenename: null,\n        scenetotal: 0,\n        addscenetotal: 0,\n        testplanscenetotal: 0,\n        addsearchscene: {\n          page: 1,\n          size: 10,\n          casetype: null\n        },\n        searchscene: {\n          page: 1,\n          size: 10,\n          projectid: ''\n        },\n        listLoading: false, // 数据加载等待动画\n        caselistLoading: false, // 用例列表页面数据加载等待动画\n        total: 0, // 数据总数\n        casetotal: 0, // 用例数据总数\n        apiQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          deployunitname: '' // 获取字典表入参\n        },\n        listQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          executeplanname: '',\n          projectid: ''\n        },\n        caselistQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          deployunitname: null,\n          apiname: null,\n          executeplanid: null,\n          casetype: null\n        },\n        ParamsdialogStatus: 'add',\n        dialogStatus: 'add',\n        dialogFormVisible: false,\n        casedialogFormVisible: false,\n        batchdialogFormVisible: false,\n        CollectionParamsFormVisible: false,\n        modifyparamdialogFormVisible: false,\n        ConditionFormVisible: false,\n        testscenedialogFormVisible: false,\n        addtestscenedialogFormVisible: false,\n        loadcase: '装载用例',\n        loadbatch: '执行计划',\n        textMap: {\n          updateRole: '修改测试集合',\n          update: '修改测试集合',\n          add: '添加测试集合'\n        },\n        apiconditiontextMap: {\n          update: '修改前置接口',\n          add: '添加前置接口'\n        },\n        apiconditiondialogStatus: 'add',\n        caseconditiondialogFormVisible: false,\n        tmpapicondition: {\n          page: 1,\n          size: 10,\n          id: '',\n          modelid: 0,\n          modelname: '',\n          conditionid: '',\n          subconditionname: '',\n          conditionname: '',\n          deployunitid: '',\n          deployunitname: '',\n          apiname: '',\n          apiid: '',\n          caseid: '',\n          casename: '',\n          memo: '',\n          conditiontype: '',\n          creator: '',\n          projectid: ''\n        },\n        paramstextMap: {\n          updateRole: '修改参数',\n          update: '修改参数',\n          add: '添加参数'\n        },\n        diclevelQuery: {\n          page: 1, // 页码\n          size: 100, // 每页数量\n          diccode: 'planbusinesstype' // 获取字典表入参\n        },\n        btnLoading: false, // 按钮等待动画\n        casebtnLoading: false, // 按钮等待动画\n        execbtnLoading: false, // 按钮等待动画\n        tmpexecuteplan: {\n          id: '',\n          executeplanname: '',\n          enviromentname: '',\n          envid: '',\n          status: '',\n          usetype: '',\n          businesstype: '',\n          ip: '',\n          memo: '',\n          creator: '',\n          dingdingtoken: '',\n          runmode: '',\n          projectid: ''\n        },\n        tmpplanbatch: {\n          executeplanid: '',\n          executeplanname: '',\n          batchid: '',\n          batchname: '',\n          creator: '',\n          exectype: '',\n          exectmpdate: '',\n          execdate: '',\n          exectime: '',\n          projectid: ''\n        },\n        tmpplanenv: {\n          id: '',\n          envid: '',\n          projectid: '',\n          enviromentname: ''\n        },\n        tmpapicases: {\n          id: '',\n          casename: '',\n          deployunitname: '',\n          apiname: '',\n          casejmxname: '',\n          casecontent: '',\n          expect: '',\n          level: '',\n          memo: '',\n          creator: 'admin'\n        },\n        tmpparam: {\n          id: '',\n          executeplanid: '',\n          paramstype: '',\n          keyname: '',\n          keyvalue: '',\n          globalheadername: '',\n          globalheaderid: 0\n        },\n        tmpep: {\n          executeplanid: ''\n        },\n        search: {\n          page: 1,\n          size: 10,\n          executeplanname: null,\n          businesstype: '',\n          projectid: ''\n        },\n        searchcase: {\n          page: 1,\n          size: 10,\n          deployunitname: null,\n          apiname: null,\n          executeplanid: null,\n          casetype: null,\n          projectid: ''\n        },\n        searchparam: {\n          page: 1,\n          size: 10\n        },\n        searchapicondition: {\n          page: 1,\n          size: 10,\n          conditionid: '',\n          conditiontype: '',\n          projectid: ''\n        },\n        tmpexecplan: {\n          execplanid: 0,\n          execplanname: null\n        },\n        tmpexecplanforscene: {\n          page: 1,\n          size: 10,\n          testplanid: 0\n        }\n      }\n    },\n\n    computed: {\n      ...mapGetters(['name', 'sidebar', 'projectlist', 'projectid'])\n    },\n\n    created() {\n      this.search.projectid = window.localStorage.getItem('pid')\n      this.tmpplanbatch.projectid = window.localStorage.getItem('pid')\n      this.tmpplanenv.projectid = window.localStorage.getItem('pid')\n      this.listQuery.projectid = window.localStorage.getItem('pid')\n      this.getexecuteplanList()\n      this.getapiList()\n      this.getdepunitList()\n      this.getenviromentallList()\n      this.getdatabydiccodeList()\n      this.getglobalheaderallList()\n    },\n\n    activated() {\n      this.getapiList()\n      this.getdepunitList()\n      this.getenviromentallList()\n      this.getdatabydiccodeList()\n      this.getglobalheaderallList()\n    },\n\n    methods: {\n      showUpdateapiconditionDialog(index) {\n        this.caseconditiondialogFormVisible = true\n        this.apiconditiondialogStatus = 'update'\n        this.tmpapicondition.id = this.apiconditioncaseList[index].id\n        this.tmpapicondition.subconditionname = this.apiconditioncaseList[index].subconditionname\n        this.tmpapicondition.deployunitname = this.apiconditioncaseList[index].deployunitname\n        this.tmpapicondition.apiname = this.apiconditioncaseList[index].apiname\n        this.tmpapicondition.casename = this.apiconditioncaseList[index].casename\n        this.tmpapicondition.modelname = this.apiconditioncaseList[index].modelname\n        this.tmpapicondition.memo = this.apiconditioncaseList[index].memo\n        this.tmpapicondition.creator = this.name\n        this.tmpapicondition.projectid = window.localStorage.getItem('pid')\n      },\n\n      updateapicondition() {\n        this.$refs.tmpapicondition.validate(valid => {\n          if (valid) {\n            updateapicondition(this.tmpapicondition).then(() => {\n              this.$message.success('更新成功')\n              this.getapiconditionList()\n              this.caseconditiondialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n            })\n          }\n        })\n      },\n\n      removecaseapicondition(index) {\n        this.$confirm('删除该前置条件？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.apiconditioncaseList[index].id\n          removeapicondition(id).then(() => {\n            this.$message.success('删除成功')\n            this.getapiconditionList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      apiconditiontestcaseselectChanged(e) {\n        for (let i = 0; i < this.apiconditioncaseList.length; i++) {\n          if (this.apiconditioncaseList[i].casename === e) {\n            this.tmpapicondition.caseid = this.apiconditioncaseList[i].id\n          }\n        }\n      },\n\n      apiconditionmodelselectChanged(e) {\n        this.tmpapicondition.apiname = null\n        this.tmpapicondition.casename = null\n        for (let i = 0; i < this.apiconditionmodelList.length; i++) {\n          if (this.apiconditionmodelList[i].modelname === e) {\n            this.tmpapicondition.modelid = this.apiconditionmodelList[i].id\n          }\n        }\n        if (e === '') {\n          this.tmpapicondition.modelid = 0\n          this.tmpapicondition.modelname = ''\n        }\n        getapiListbydeploy(this.tmpapicondition).then(response => {\n          this.apiconditionapiList = response.data\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      apiconditionapiselectChanged(e) {\n        this.tmpapicondition.casename = null\n        for (let i = 0; i < this.apiconditionapiList.length; i++) {\n          if (this.apiconditionapiList[i].apiname === e) {\n            this.tmpapicondition.apiid = this.apiconditionapiList[i].id\n          }\n        }\n        findcasesbyname(this.tmpapicondition).then(response => {\n          this.apiconditioncaseList = response.data\n        }).catch(res => {\n          this.$message.error('加载apicase列表失败')\n        })\n      },\n\n      showtestplanConditionDialog(index) {\n        this.ConditionFormVisible = true\n        this.searchapicondition.conditiontype = 'execplan'\n        this.searchapicondition.conditionid = this.executeplanList[index].id\n        this.tmpapicondition.conditionid = this.executeplanList[index].id\n        this.tmpapicondition.conditionname = this.executeplanList[index].executeplanname\n        this.tmpapicondition.conditiontype = 'execplan'\n        this.getapiconditionList()\n      },\n\n      apiconditioncaseIndex(index) {\n        return (this.searchapicondition.page - 1) * this.searchapicondition.size + index + 1\n      },\n\n      getapiconditionList() {\n        searchapicondition(this.searchapicondition).then(response => {\n          this.apiconditioncaseList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载测试接口条件列表失败')\n        })\n      },\n\n      addapicondition() {\n        this.$refs.tmpapicondition.validate(valid => {\n          if (valid) {\n            addapicondition(this.tmpapicondition).then(() => {\n              this.$message.success('添加成功')\n              this.caseconditiondialogFormVisible = false\n              this.getapiconditionList()\n            }).catch(res => {\n              this.$message.error('添加失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n\n      apiconditiondeployunitselectChanged(e) {\n        this.tmpapicondition.casename = null\n        this.tmpapicondition.apiname = null\n        this.tmpapicondition.modelname = null\n        for (let i = 0; i < this.deployunitList.length; i++) {\n          if (this.deployunitList[i].deployunitname === e) {\n            this.tmpapicondition.deployunitid = this.deployunitList[i].id\n          }\n        }\n        searchdeployunitmodel(this.tmpapicondition).then(response => {\n          this.apiconditionmodelList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载服务模块列表失败')\n        })\n        this.apiconditionapiList = null\n        getapiListbydeploy(this.tmpapicondition).then(response => {\n          this.apiconditionapiList = response.data\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      cancelEdit(row) {\n        row.ordernum = row.oldcaseorder\n        row.edit = false\n        // this.$message({\n        //   message: 'The title has been restored to the original value',\n        //   type: 'warning'\n        // })\n      },\n      confirmEdit(row) {\n        row.edit = false\n        updateplanscenenorder(row).then(response => {\n          row.oldcaseorder = row.ordernum\n          this.$message.success('修改顺序成功')\n        }).catch(res => {\n          row.ordernum = row.oldcaseorder\n          this.$message.error('修改顺序失败')\n        })\n        // console.log(22222222222222222)\n        // console.log(row)\n        // this.$message({\n        //   message: 'The title has been edited',\n        //   type: 'success'\n        // })\n      },\n\n      findscenebyexecplanid() {\n        findscenebyexecplanid(this.tmpexecplanforscene).then(response => {\n          this.testplansceneList = response.data.list\n          const items = response.data.list\n          this.testplansceneList = items.map(v => {\n            this.$set(v, 'edit', false) // https://vuejs.org/v2/guide/reactivity.html\n            v.oldcaseorder = v.ordernum //  will be used when user click the cancel botton\n            return v\n          })\n          this.testplanscenetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载场景用例列表失败')\n        })\n      },\n\n      addscenehandleClickTableRow(row, event, column) {\n      },\n      addscenehandleSelectionChange(rows) {\n        this.scenemultipleSelection = rows\n      },\n\n      addscenehandleCurrentChange(page) {\n        this.addsearchscene.page = page\n        this.gettestsceneList()\n      },\n\n      planscenehandleCurrentChange(page) {\n        this.searchscene.page = page\n        this.findscenebyexecplanid()\n      },\n\n      addscenegetIndex(index) {\n        return (this.addsearchscene.page - 1) * this.addsearchscene.size + index + 1\n      },\n\n      gettestsceneList() {\n        this.addsearchscene.scenename = this.tmptestscenename\n        searchscence(this.addsearchscene).then(response => {\n          this.testsceneList = response.data.list\n          this.addscenetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载场景列表失败')\n        })\n      },\n\n      addscenehandleSizeChange(size) {\n        this.addsearchscene.page = 1\n        this.addsearchscene.size = size\n        this.gettestsceneList()\n      },\n\n      planscenehandleSizeChange(size) {\n        this.searchscene.page = 1\n        this.searchscene.size = size\n        this.findscenebyexecplanid()\n      },\n      /**\n       * 获取组件名字典列表\n       */\n      getdatabydiccodeList() {\n        getdatabydiccodeList(this.diclevelQuery).then(response => {\n          this.planbusinessdiclist = response.data.list\n        }).catch(res => {\n          this.$message.error('加载组件名字典列表失败')\n        })\n      },\n\n      unix2CurrentTime,\n\n      getglobalheaderallList() {\n        getglobalheaderallList(this.search).then(response => {\n          this.globalheaderallList = response.data\n        }).catch(res => {\n          this.$message.error('加载全局Header列表失败')\n        })\n      },\n\n      /**\n       * 获取header列表\n       */\n      searchheaderbyepid() {\n        console.log(this.tmpep)\n        searchheaderbyepid(this.tmpep).then(response => {\n          this.paramsList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载header列表失败')\n        })\n      },\n      /**\n       * 停止执行计划\n       */\n      stopexecuteplanList() {\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 'waiting' || this.multipleSelection[i].status === 'new' || this.multipleSelection[i].status === 'finish' || this.multipleSelection[i].status === 'stop') {\n            this.multipleSelection.splice(i)\n          }\n        }\n        if (this.multipleSelection.length === 0) {\n          this.$message.error('未选择执行计划,或者只有运行中才可以停止')\n        } else {\n          for (let i = 0; i < this.multipleSelection.length; i++) {\n            this.executeplanstopList.push({\n              'id': this.multipleSelection[i].id,\n              'status': 'stop'\n            })\n          }\n          updateexecuteplanstatus(this.executeplanstopList).then(() => {\n            this.$message.success('已停止执行计划')\n            this.btnLoading = false\n          }).catch(res => {\n            this.$message.error('停止计划执行失败')\n            this.btnLoading = false\n          })\n        }\n        this.getexecuteplanList()\n      },\n      /**\n       * 添加执行计划批次\n       */\n      savebatchandexecuteplancase() {\n        this.$refs.tmpplanbatch.validate(valid => {\n          if (valid) {\n            if (this.multipleSelection.length === 0) {\n              this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n              return\n            }\n            if (this.multipleSelection.length > 1) {\n              this.$message.error('不支持多执行计划一起提交，单个提交')\n              return\n            }\n            this.tmpplanbatch.executeplanname = this.multipleSelection[0].executeplanname\n            this.tmpplanbatch.execdate = this.tmpplanbatch.exectmpdate + ' ' + this.tmpplanbatch.exectime + ':00'\n            if (this.tmpplanbatch.execdate === ':00') {\n              this.tmpplanbatch.execdate = '/'\n            }\n            if (this.tmpplanbatch.exectmpdate === '') {\n              this.tmpplanbatch.execdate = this.tmpplanbatch.exectime + ':00'\n            }\n            this.executeplancase()\n            this.batchdialogFormVisible = false\n            // addexecuteplanbatch(this.tmpplanbatch).then(() => {\n            //   this.executeplancase()\n            //   this.batchdialogFormVisible = false\n            // }).catch(res => {\n            //   this.$message.error('计划执行失败')\n            // })\n          }\n        })\n      },\n      /**\n       * 添加执行计划批次并且执行计划用例\n       */\n      // savebatchandexecuteplancase() {\n      // this.addexecuteplanbatch()\n      // this.executeplancase()\n      // this.batchdialogFormVisible = false\n      // },\n      /**\n       * 执行执行计划\n       */\n      executeplancase() {\n        this.tmpplanbatchList = []\n        this.$refs.tmpplanbatch.validate(valid => {\n          if (valid) {\n            for (let i = 0; i < this.multipleSelection.length; i++) {\n              if (this.multipleSelection[i].status === 'running') {\n                this.multipleSelection.splice(i)\n              }\n            }\n            if (this.multipleSelection.length === 0) {\n              this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n            } else {\n              if (this.multipleSelection.length > 1) {\n                this.$message.error('不支持多执行计划一起提交，单个提交')\n              } else {\n                for (let i = 0; i < this.multipleSelection.length; i++) {\n                  this.tmpplanbatchList.push({\n                    // 'planid': this.multipleSelection[0].id,\n                    // 'planname': this.multipleSelection[0].execplanname,\n                    // 'batchname': this.tmpplanbatch.batchname\n                    'executeplanname': this.tmpplanbatch.executeplanname,\n                    'batchname': this.tmpplanbatch.batchname,\n                    'exectype': this.tmpplanbatch.exectype,\n                    'execdate': this.tmpplanbatch.execdate,\n                    'creator': this.name,\n                    'projectid': this.tmpplanbatch.projectid,\n                    'exectime': this.tmpplanbatch.exectime,\n                    'executeplanid': this.tmpplanbatch.executeplanid,\n                    'exectmpdate': this.tmpplanbatch.exectmpdate\n                  })\n                }\n                executeplan(this.tmpplanbatchList).then(() => {\n                  this.$message.success('测试集合已经提交，即将开始执行')\n                }).catch(res => {\n                  this.$message.error('执行测试集合失败')\n                })\n              }\n            }\n            this.getexecuteplanList()\n          }\n        })\n      },\n\n      handleClickTableRow(row, event, column) {\n        // console.log(row)\n        // console.log(column)\n        // this.$refs.fileTable.toggleRowSelection(row)\n      },\n      handleSelectionChange(rows) {\n        // console.log(rows)\n        this.multipleSelection = rows\n        console.log('00000000000000000000000000')\n        console.log(this.multipleSelection)\n      },\n      casehandleClickTableRow(row, event, column) {\n        console.log(row)\n      },\n\n      casehandleSelectionChange(rows) {\n        this.casemultipleSelection = rows\n        // console.log(this.casemultipleSelection)\n      },\n\n      exectypeselectChanged(e) {\n        if (e === '立即执行') {\n          this.datevisible = false\n          this.timevisible = false\n        }\n        if (e === '某天定时') {\n          this.datevisible = true\n          this.timevisible = true\n          this.tmpplanbatch.execdate = ''\n          this.tmpplanbatch.exectime = ''\n        }\n        if (e === '每天定时') {\n          this.datevisible = false\n          this.timevisible = true\n          this.tmpplanbatch.exectime = ''\n        }\n      },\n      /**\n       * 参数胡类型选择  e的值为options的选值\n       */\n      paramstypeselectChanged(e) {\n        this.tmpparam.keyname = ''\n        this.tmpparam.keyvalue = ''\n      },\n      /**\n       * 获取执行计划列表\n       */\n      getexecuteplanList() {\n        this.search.execplanname = this.tmpexecplanname\n        this.search.batchname = this.tmpbatchname\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.executeplanList = response.data.list\n          this.total = response.data.total\n          this.listLoading = false\n        }).catch(res => {\n          this.$message.error('加载字典列表失败')\n        })\n      },\n\n      searchBy() {\n        this.search.page = 1\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.itemKey = Math.random()\n          this.executeplanList = response.data.list\n          this.total = response.data.total\n        }).catch(res => {\n          this.$message.error('搜索失败')\n        })\n        this.tmpexecuteplanname = this.search.executeplanname\n        this.listLoading = false\n        this.btnLoading = false\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      handleSizeChange(size) {\n        this.search.page = 1\n        this.search.size = size\n        this.getexecuteplanList()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      handleCurrentChange(page) {\n        this.search.page = page\n        this.getexecuteplanList()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      getIndex(index) {\n        return (this.search.page - 1) * this.search.size + index + 1\n      },\n\n      paramgetIndex(index) {\n        return (this.searchparam.page - 1) * this.searchparam.size + index + 1\n      },\n\n      planscenegetIndex(index) {\n        return (this.searchscene.page - 1) * this.searchscene.size + index + 1\n      },\n      /**\n       * 环境下拉框活的环境id\n       */\n      enviromentselectChanged(e) {\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === e) {\n            this.tmpexecuteplan.envid = this.enviromentnameList[i].id\n          }\n          console.log(this.enviromentnameList[i].id)\n        }\n      },\n      /**\n       * 微服务下拉选择事件获取微服务id  e的值为options的选值\n       */\n      selectChanged(e) {\n        this.apiList = null\n        this.apiQuery.deployunitname = e\n        getapiList(this.apiQuery).then(response => {\n          this.apiList = response.data.list\n          // console.log(this.apiList)\n          // this.casetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n      /**\n       * 获取api列表\n       */\n      getapiList() {\n        this.caselistLoading = true\n        getapiList(this.listQuery).then(response => {\n          this.apiList = response.data.list\n          // this.casetotal = response.data.total\n          this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      /**\n       * 获取环境列表\n       */\n      getenviromentallList() {\n        getenviromentallList(this.search).then(response => {\n          this.enviromentnameList = response.data\n        }).catch(res => {\n          this.$message.error('加载环境列表失败')\n        })\n      },\n\n      /**\n       * 获取微服务列表\n       */\n      getdepunitList() {\n        this.caselistLoading = true\n        getdepunitLists(this.listQuery).then(response => {\n          this.deployunitList = response.data\n          // this.casetotal = response.data.total\n          // this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载微服务列表失败')\n        })\n      },\n\n      /**\n       * 获取用例列表\n       */\n      getcaseList() {\n        this.caselistLoading = true\n        getapicasesList(this.listQuery).then(response => {\n          this.apicasesList = response.data.list\n          // this.casetotal = response.data.total\n          this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载用例列表失败')\n        })\n      },\n\n      /**\n       * 获取微服务和api的用例\n       */\n      searchcaseBy() {\n        this.searchtestplanexistcase()\n      },\n\n      // 已废弃\n      async gettestcaselastList() {\n        console.log(this.testcaseList.length)\n        console.log(this.executeplancaseexistList.length)\n        for (let i = 0; i < this.testcaseList.length; i++) {\n          for (let j = 0; j < this.executeplancaseexistList.length; j++) {\n            if (this.testcaseList[i].id === this.executeplancaseexistList[j].testcaseid) {\n              this.testcaselastList.push({\n                'checkstats': true,\n                'deployunitname': this.testcaseList[i].deployunitname,\n                'apiname': this.testcaseList[i].apiname,\n                'casename': this.testcaseList[i].casename,\n                'expect': this.testcaseList[i].expect\n              })\n            } else {\n              this.testcaselastList.push({\n                'checkstats': false,\n                'deployunitname': this.testcaseList[i].deployunitname,\n                'apiname': this.testcaseList[i].apiname,\n                'casename': this.testcaseList[i].casename,\n                'expect': this.testcaseList[i].expect\n              })\n            }\n          }\n        }\n        console.log(this.testcaselastList)\n      },\n\n      /**\n       * 获取微服务和api的用例，已废弃\n       */\n      async searchcaseBydepandapi() {\n        this.$refs.searchcase.validate(valid => {\n          if (valid) {\n            this.casebtnLoading = true\n            this.caselistLoading = true\n            this.searchcase.page = this.caselistQuery.page\n            this.searchcase.size = this.caselistQuery.size\n            getapicases(this.searchcase).then(response => {\n              this.testcaseList = response.data.list\n              console.log(this.testcaseList.length)\n              this.casetotal = response.data.total\n            }).catch(res => {\n              this.$message.error('搜索失败')\n            })\n            this.caselistLoading = false\n            this.casebtnLoading = false\n          }\n        })\n      },\n\n      /**\n       * 获取执行计划下微服务和api已的用例,如果是已装载过的，会带上装载状态\n       */\n      searchtestplanexistcase() {\n        this.testcaselastList = []\n        this.$refs.searchcase.validate(valid => {\n          if (valid) {\n            this.searchcase.executeplanid = this.tmpexecuteplan.id\n            this.searchcase.casetype = this.tmpexecuteplan.usetype\n            // this.searchcase.page = this.caselistQuery.page\n            // this.searchcase.size = this.caselistQuery.size\n            this.searchcase.page = 1\n            searchtestplancases(this.searchcase).then(response => {\n              this.testcaselastList = response.data.list\n              this.casetotal = response.data.total\n              this.$nextTick(() => {\n                for (let i = 0; i < this.testcaselastList.length; i++) {\n                  if (this.testcaselastList[i].status === true) {\n                    this.$refs.caseTable.toggleRowSelection(this.testcaselastList[i], true)\n                  }\n                }\n              })\n            }).catch(res => {\n              this.$message.error('获取已装载的用例失败')\n            })\n          }\n        })\n        this.tmpcasedeployunitname = this.searchcase.deployunitname\n        this.tmpcaseapiname = this.searchcase.apiname\n        this.tmpcaseexecuteplanid = this.searchcase.executeplanid\n        this.tmpcasecasetype = this.searchcase.casetype\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      casehandleSizeChange(size) {\n        this.searchcase.page = 1\n        this.searchcase.size = size\n        this.searchtestplanexistcase()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      casehandleCurrentChange(page) {\n        this.searchcase.page = page\n        this.searchtestplanexistcase()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      casegetIndex(index) {\n        return (this.searchcase.page - 1) * this.searchcase.size + index + 1\n      },\n      /**\n       * 显示添加执行计划对话框\n       */\n      showAddexecuteplanDialog() {\n        // 显示新增对话框\n        this.dialogFormVisible = true\n        this.dialogStatus = 'add'\n        this.tmpexecuteplan.id = ''\n        this.tmpexecuteplan.executeplanname = ''\n        this.tmpexecuteplan.status = 'new'\n        this.tmpexecuteplan.memo = ''\n        this.tmpexecuteplan.usetype = ''\n        this.tmpexecuteplan.enviromentname = ''\n        this.tmpexecuteplan.businesstype = ''\n        this.tmpexecuteplan.creator = this.name\n        this.tmpexecuteplan.runmode = ''\n        this.tmpexecuteplan.dingdingtoken = ''\n        this.tmpexecuteplan.projectid = window.localStorage.getItem('pid')\n      },\n\n      showplanparamsDialog(index) {\n        // 显示新增对话框\n        this.CollectionParamsFormVisible = true\n        this.tmpparam.executeplanid = this.executeplanList[index].id\n        this.tmpep.executeplanid = this.executeplanList[index].id\n        this.searchheaderbyepid()\n      },\n\n      showtestsceneDialog(index) {\n        // 显示新增对话框\n        this.testscenedialogFormVisible = true\n        this.tmpexecplan.execplanid = this.executeplanList[index].id\n        this.tmpexecplan.execplanname = this.executeplanList[index].executeplanname\n        this.tmpexecplanforscene.testplanid = this.executeplanList[index].id\n        this.findscenebyexecplanid()\n      },\n\n      ShowAddScenceDialog(index) {\n        // 显示新增对话框\n        this.addtestscenedialogFormVisible = true\n        this.gettestsceneList()\n      },\n\n      ShowAddPlancaseconditionDialog(index) {\n        this.caseconditiondialogFormVisible = true\n        this.apiconditiondialogStatus = 'add'\n        this.tmpapicondition.id = ''\n        this.tmpapicondition.subconditionname = ''\n        this.tmpapicondition.deployunitname = ''\n        this.tmpapicondition.apiname = ''\n        this.tmpapicondition.modelname = ''\n        this.tmpapicondition.casename = ''\n        this.tmpapicondition.memo = ''\n        this.tmpapicondition.creator = this.name\n        this.tmpapicondition.projectid = window.localStorage.getItem('pid')\n      },\n\n      // 显示新增对话框\n      showAddapiparamsDialog() {\n        this.modifyparamdialogFormVisible = true\n        this.ParamsdialogStatus = 'add'\n        this.tmpparam.id = ''\n        this.tmpparam.globalheaderid = ''\n        this.tmpparam.globalheadername = ''\n      },\n\n      showUpdateparamsDialog(index) {\n        this.modifyparamdialogFormVisible = true\n        this.ParamsdialogStatus = 'update'\n        this.tmpparam.id = this.paramsList[index].id\n        this.tmpparam.globalheadername = this.paramsList[index].globalheadername\n      },\n      /**\n       * 显示添加执行计划批次对话框\n       */\n      showplanbatchDialog() {\n        this.tmpplanbatch.exectmpdate = ''\n        this.tmpplanbatch.exectime = ''\n        this.tmpplanbatch.execdate = ''\n        this.tmpplanbatch.exectype = ''\n        this.timevisible = false\n        this.datevisible = false\n        // 显示新增对话框\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 'running') {\n            this.multipleSelection.splice(i)\n          }\n        }\n        if (this.multipleSelection.length === 0) {\n          this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n        } else {\n          if (this.multipleSelection.length > 1) {\n            this.$message.error('不支持多执行计划一起提交，单个提交')\n          } else {\n            this.tmpplanenv.id = this.multipleSelection[0].id\n            this.tmpplanenv.envid = this.multipleSelection[0].envid\n            this.tmpplanenv.enviromentname = this.multipleSelection[0].enviromentname\n            checkplancondition(this.tmpplanenv).then(() => {\n              this.batchdialogFormVisible = true\n              this.tmpplanbatch.executeplanid = this.multipleSelection[0].id\n              this.tmpplanbatch.creator = this.name\n              this.tmpplanbatch.batchname = ''\n            }).catch(res => {\n              // this.$message.error('执行失败')\n            })\n          }\n        }\n      },\n      /**\n       * 添加执行计划\n       */\n      addexecuteplan() {\n        this.$refs.tmpexecuteplan.validate(valid => {\n          if (valid) {\n            this.btnLoading = true\n            addexecuteplan(this.tmpexecuteplan).then(() => {\n              this.$message.success('添加成功')\n              this.getexecuteplanList()\n              this.dialogFormVisible = false\n              this.btnLoading = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n\n      /**\n       * 添加params\n       */\n      addparams() {\n        this.$refs.tmpparam.validate(valid => {\n          if (valid) {\n            addapicasesdebug(this.tmpparam).then(() => {\n              this.$message.success('添加成功')\n              this.modifyparamdialogFormVisible = false\n              this.searchheaderbyepid()\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 更新param\n       */\n      updatparam() {\n        this.$refs.tmpparam.validate(valid => {\n          if (valid) {\n            updateapicasesdebug(this.tmpparam).then(() => {\n              this.$message.success('更新成功')\n              this.searchheaderbyepid()\n              this.modifyparamdialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 删除param\n       * @param index api下标\n       */\n      removeexecuteplanparam(index) {\n        this.$confirm('删除该参数？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.paramsList[index].id\n          removeapicasesdebug(id).then(() => {\n            this.$message.success('删除成功')\n            this.searchheaderbyepid()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 显示修改执行计划对话框\n       * @param index 执行计划下标\n       */\n      showUpdateexecuteplanDialog(index) {\n        this.dialogFormVisible = true\n        this.dialogStatus = 'update'\n        this.tmpexecuteplan.id = this.executeplanList[index].id\n        this.tmpexecuteplan.executeplanname = this.executeplanList[index].executeplanname\n        this.tmpexecuteplan.status = this.executeplanList[index].status\n        this.tmpexecuteplan.usetype = this.executeplanList[index].usetype\n        this.tmpexecuteplan.memo = this.executeplanList[index].memo\n        this.tmpexecuteplan.enviromentname = this.executeplanList[index].enviromentname\n        this.tmpexecuteplan.businesstype = this.executeplanList[index].businesstype\n        this.tmpexecuteplan.creator = this.name\n        this.tmpexecuteplan.runmode = this.executeplanList[index].runmode\n        this.tmpexecuteplan.dingdingtoken = this.executeplanList[index].dingdingtoken\n        this.tmpexecuteplan.projectid = window.localStorage.getItem('pid')\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === this.tmpexecuteplan.enviromentname) {\n            this.tmpexecuteplan.envid = this.enviromentnameList[i].id\n          }\n        }\n      },\n\n      /**\n       * 装载执行计划的用例\n       */\n      addplantestscene() {\n        this.addtestsceneList = []\n        if (this.scenemultipleSelection.length === 0) {\n          this.$message.error('请选择添加的场景')\n        } else {\n          for (let i = 0; i < this.scenemultipleSelection.length; i++) {\n            this.addtestsceneList.push({\n              'testscenenid': this.scenemultipleSelection[i].id,\n              'scenename': this.scenemultipleSelection[i].scenename,\n              'testplanid': this.tmpexecplan.execplanid,\n              'planname': this.tmpexecplan.execplanname,\n              'ordernum': 0,\n              'creator': this.name,\n              'projectid': window.localStorage.getItem('pid')\n            })\n          }\n          addtestplantestscene(this.addtestsceneList).then(() => {\n            this.$message.success('装载成功')\n            this.addtestscenedialogFormVisible = false\n            this.findscenebyexecplanid()\n          }).catch(res => {\n            this.$message.error('装载失败')\n          })\n        }\n      },\n\n      /**\n       * 装载执行计划的用例\n       */\n      addexecuteplantestcase() {\n        this.executeplancaseList = []\n        if (this.casemultipleSelection.length === 0) {\n          this.$message.error('请选择装载的用例')\n        } else {\n          for (let i = 0; i < this.casemultipleSelection.length; i++) {\n            this.executeplancaseList.push({\n              'executeplanid': this.tmpexecuteplan.id,\n              'deployunitid': this.casemultipleSelection[i].deployunitid,\n              'apiid': this.casemultipleSelection[i].apiid,\n              'deployunitname': this.casemultipleSelection[i].deployunitname,\n              'apiname': this.casemultipleSelection[i].apiname,\n              'testcaseid': this.casemultipleSelection[i].id,\n              'casename': this.casemultipleSelection[i].casename\n            })\n          }\n          addexecuteplantestcase(this.executeplancaseList).then(() => {\n            this.$message.success('装载成功')\n          }).catch(res => {\n            this.$message.error('装载失败')\n          })\n        }\n      },\n\n      /**\n       * 删除装载的用例\n       */\n      removeexecuteplantestcase() {\n        this.executeplancaseremovetList = []\n        if (this.testcaselastList.length === this.casemultipleSelection.length) {\n          this.$message.error('未找到需要取消装载的用例')\n        } else {\n          for (let i = 0; i < this.testcaselastList.length; i++) {\n            var findflag = false\n            for (let j = 0; j < this.casemultipleSelection.length; j++) {\n              if (this.testcaselastList[i].id === this.casemultipleSelection[j].id) {\n                findflag = true\n                break\n              }\n            }\n            // 表示未选中的记录，需要删除\n            this.testcaselastList[i].id\n            if (!findflag) {\n              this.executeplancaseremovetList.push({\n                'executeplanid': this.tmpexecuteplan.id,\n                'deployunitname': this.testcaselastList[i].deployunitname,\n                'apiname': this.testcaselastList[i].apiname,\n                'testcaseid': this.testcaselastList[i].id,\n                'casename': this.testcaselastList[i].casename\n              })\n            }\n          }\n          console.log(this.executeplancaseremovetList)\n          removeexecuteplantestcase(this.executeplancaseremovetList).then(() => {\n            this.$message.success('取消装载用例成功')\n          }).catch(res => {\n            this.$message.error('取消装载用例失败')\n          })\n        }\n      },\n      /**\n       * 显示用例对话框\n       * @param index 执行计划下标\n       */\n      showTestCaseDialog(index) {\n        this.casedialogFormVisible = true\n        this.tmpexecuteplan.id = this.executeplanList[index].id\n        this.tmpexecuteplan.executeplanname = this.executeplanList[index].executeplanname\n        this.tmpexecuteplan.status = this.executeplanList[index].status\n        this.tmpexecuteplan.usetype = this.executeplanList[index].usetype\n        this.tmpexecuteplan.memo = this.executeplanList[index].memo\n        this.searchcase.deployunitname = null\n        this.searchcase.apiname = null\n        this.testcaselastList = []\n        this.casetotal = 0\n      },\n      /**\n       * 更新执行计划\n       */\n      updateexecuteplan() {\n        this.$refs.tmpexecuteplan.validate(valid => {\n          if (valid) {\n            updateexecuteplan(this.tmpexecuteplan).then(() => {\n              this.$message.success('更新成功')\n              this.getexecuteplanList()\n              this.dialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n      /**\n       * 删除字典\n       * @param index 执行计划下标\n       */\n      removeexecuteplan(index) {\n        this.$confirm('删除该执行计划？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.executeplanList[index].id\n          removeexecuteplan(id).then(() => {\n            this.$message.success('删除成功')\n            this.getexecuteplanList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 执行计划资料是否唯一\n       * @param 执行计划\n       */\n      isUniqueDetail(executeplan) {\n        for (let i = 0; i < this.executeplanList.length; i++) {\n          if (this.executeplanList[i].id !== executeplan.id) { // 排除自己\n            if (this.executeplanList[i].executeplanname === executeplan.executeplanname) {\n              this.$message.error('执行计划名已存在')\n              return false\n            }\n          }\n        }\n        return true\n      },\n      notexistheaderselectChanged(e) {\n        for (let i = 0; i < this.globalheaderallList.length; i++) {\n          if (this.globalheaderallList[i].globalheadername === e) {\n            this.tmpparam.globalheaderid = this.globalheaderallList[i].id\n          }\n        }\n      }\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/executecenter/executeplan/index.vue","import request from '@/utils/request'\n\nexport function gettestplanList(params) {\n  return request({\n    url: '/testplan/testscene',\n    method: 'get',\n    params\n  })\n}\n\nexport function addtestplantestscene(sceneForm) {\n  return request({\n    url: '/testplan/testscene/addplanscene',\n    method: 'post',\n    data: sceneForm\n  })\n}\n\nexport function updateplanscenenorder(executeplanForm) {\n  return request({\n    url: '/testplan/testscene/updateplanscenenorder',\n    method: 'post',\n    data: executeplanForm\n  })\n}\n\nexport function getstaticsplan(params) {\n  return request({\n    url: '/testplan/testscene/getstaticsplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function gettestplannum(params) {\n  return request({\n    url: '/testplan/testscene/gettestplannum',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplanbytype(params) {\n  return request({\n    url: '/testplan/testscene/getallexplanbytype',\n    method: 'get',\n    params\n  })\n}\n\nexport function getallexplan(params) {\n  return request({\n    url: '/testplan/testscene/getallexplan',\n    method: 'get',\n    params\n  })\n}\n\nexport function search(testplanForm) {\n  return request({\n    url: '/testplan/testscene/search',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function findscenebyexecplanid(testplanForm) {\n  return request({\n    url: '/testplan/testscene/findscenebyexecplanid',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function addtestplan(testplanForm) {\n  return request({\n    url: '/testplan/testscene',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function testplan(testplanForm) {\n  return request({\n    url: '/testplan/testscene/execplancases',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function checkplancondition(testplanForm) {\n  return request({\n    url: '/testplan/testscene/checkcondition',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function updatetestplan(testplanForm) {\n  return request({\n    url: '/testplan/testscene/detail',\n    method: 'put',\n    data: testplanForm\n  })\n}\n\nexport function updatetestplanstatus(testplanForm) {\n  return request({\n    url: '/testplan/testscene/updatestatus',\n    method: 'post',\n    data: testplanForm\n  })\n}\n\nexport function removetestplancase(testplanId) {\n  return request({\n    url: '/testplan/testscene/' + testplanId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/executecenter/testplantestscene.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('executeplan:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\",\"icon\":\"el-icon-refresh\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.getexecuteplanList($event)}}},[_vm._v(\"刷新\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showplanbatchDialog($event)}}},[_vm._v(\"运行\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:add'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAddexecuteplanDialog($event)}}},[_vm._v(\"添加测试集合\")]):_vm._e()],1),_vm._v(\" \"),(_vm.hasPermission('executeplan:search'))?_c('span',[_c('el-form-item',{attrs:{\"label\":\"测试集合:\"}},[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"测试集合\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchBy($event)}},model:{value:(_vm.search.executeplanname),callback:function ($$v) {_vm.$set(_vm.search, \"executeplanname\", $$v)},expression:\"search.executeplanname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"业务类型:\"}},[_c('el-select',{attrs:{\"clearable\":\"\",\"placeholder\":\"业务类型\"},model:{value:(_vm.search.businesstype),callback:function ($$v) {_vm.$set(_vm.search, \"businesstype\", $$v)},expression:\"search.businesstype\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.planbusinessdiclist),function(businessdicitem,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":businessdicitem.dicitmevalue,\"value\":businessdicitem.dicitmevalue}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemplanKey,ref:\"fileTable\",attrs:{\"data\":_vm.executeplanList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.handleClickTableRow,\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"40\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"集合名\",\"align\":\"center\",\"prop\":\"executeplanname\",\"width\":\"100\"}}),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"envid\",\"align\":\"center\",\"prop\":\"envid\",\"width\":\"50\"}}):_vm._e(),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"状态\",\"align\":\"center\",\"prop\":\"status\",\"width\":\"50\"}}):_vm._e(),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"业务类型\",\"align\":\"center\",\"prop\":\"businesstype\",\"width\":\"70\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"执行环境\",\"align\":\"center\",\"prop\":\"enviromentname\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"类型\",\"align\":\"center\",\"prop\":\"usetype\",\"width\":\"50\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"运行模式\",\"align\":\"center\",\"prop\":\"runmode\",\"width\":\"70\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"用例数\",\"align\":\"center\",\"prop\":\"casecounts\",\"width\":\"60\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"通知钉钉token\",\"align\":\"center\",\"prop\":\"dingdingtoken\",\"width\":\"110\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作人\",\"align\":\"center\",\"prop\":\"creator\",\"width\":\"60\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"描述\",\"align\":\"center\",\"prop\":\"memo\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"创建时间\",\"align\":\"center\",\"prop\":\"createTime\",\"width\":\"110\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.createTime)))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"最后修改时间\",\"align\":\"center\",\"prop\":\"lastmodifyTime\",\"width\":\"110\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.lastmodifyTime))+\"\\n      \")]}}])}),_vm._v(\" \"),(_vm.hasPermission('executeplan:update')  || _vm.hasPermission('executeplan:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\",\"width\":\"450\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateexecuteplanDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:delete') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplan(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showplanparamsDialog(scope.$index)}}},[_vm._v(\"全局Header\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showtestsceneDialog(scope.$index)}}},[_vm._v(\"测试场景\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showtestplanConditionDialog(scope.$index)}}},[_vm._v(\"前置条件\")]):_vm._e()]}}],null,false,2523867381)}):_vm._e()],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.search.page,\"page-size\":_vm.search.size,\"total\":_vm.total,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.textMap[_vm.dialogStatus],\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpexecuteplan\",staticClass:\"small-space\",staticStyle:{\"width\":\"400px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpexecuteplan}},[_c('el-form-item',{attrs:{\"label\":\"集合名\",\"prop\":\"executeplanname\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.executeplanname),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"executeplanname\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"tmpexecuteplan.executeplanname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"类型\",\"prop\":\"usetype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"类型\"},model:{value:(_vm.tmpexecuteplan.usetype),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"usetype\", $$v)},expression:\"tmpexecuteplan.usetype\"}},[_c('el-option',{attrs:{\"label\":\"功能\",\"value\":\"功能\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"性能\",\"value\":\"性能\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"执行环境\",\"prop\":\"enviromentname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"执行环境\"},on:{\"change\":function($event){return _vm.enviromentselectChanged($event)}},model:{value:(_vm.tmpexecuteplan.enviromentname),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"enviromentname\", $$v)},expression:\"tmpexecuteplan.enviromentname\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.enviromentnameList),function(envname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":envname.enviromentname,\"value\":envname.enviromentname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"业务类型\",\"prop\":\"businesstype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"业务类型\"},on:{\"change\":function($event){return _vm.businesstypeselectChanged($event)}},model:{value:(_vm.tmpexecuteplan.businesstype),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"businesstype\", $$v)},expression:\"tmpexecuteplan.businesstype\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.planbusinessdiclist),function(dicitem,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":dicitem.dicitmevalue,\"value\":dicitem.dicitmevalue,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"运行模式\",\"prop\":\"runmode\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"运行模式\"},model:{value:(_vm.tmpexecuteplan.runmode),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"runmode\", $$v)},expression:\"tmpexecuteplan.runmode\"}},[_c('el-option',{attrs:{\"label\":\"单机运行\",\"value\":\"单机运行\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"多机并行\",\"value\":\"多机并行\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"钉钉通知token\",\"prop\":\"dingdingtoken\"}},[_c('el-input',{attrs:{\"maxlength\":\"200\",\"type\":\"text\",\"prefix-icon\":\"el-icon-message\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.dingdingtoken),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"dingdingtoken\", $$v)},expression:\"tmpexecuteplan.dingdingtoken\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"备注\",\"prop\":\"memo\"}},[_c('el-input',{attrs:{\"maxlength\":\"200\",\"type\":\"text\",\"prefix-icon\":\"el-icon-message\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.memo),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"memo\", $$v)},expression:\"tmpexecuteplan.memo\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.dialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.dialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addexecuteplan($event)}}},[_vm._v(\"保存\\n      \")]):_vm._e(),_vm._v(\" \"),(_vm.dialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updateexecuteplan($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.loadcase,\"visible\":_vm.casedialogFormVisible},on:{\"update:visible\":function($event){_vm.casedialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{ref:\"searchcase\",attrs:{\"inline\":true,\"model\":_vm.searchcase}},[(_vm.hasPermission('apicases:search'))?_c('span',[_c('el-form-item',{attrs:{\"label\":\"微服务:\",\"prop\":\"deployunitname\",\"required\":\"\"}},[_c('el-select',{attrs:{\"placeholder\":\"微服务\"},on:{\"change\":function($event){return _vm.selectChanged($event)}},model:{value:(_vm.searchcase.deployunitname),callback:function ($$v) {_vm.$set(_vm.searchcase, \"deployunitname\", $$v)},expression:\"searchcase.deployunitname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.deployunitList),function(depname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":depname.deployunitname,\"value\":depname.deployunitname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"API:\"}},[_c('el-select',{attrs:{\"placeholder\":\"api名\"},model:{value:(_vm.searchcase.apiname),callback:function ($$v) {_vm.$set(_vm.searchcase, \"apiname\", $$v)},expression:\"searchcase.apiname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.apiList),function(api,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":api.apiname,\"value\":api.apiname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchcaseBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()])],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemcaseKey,ref:\"caseTable\",attrs:{\"data\":_vm.testcaselastList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.casehandleClickTableRow,\"selection-change\":_vm.casehandleSelectionChange}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"type\":\"selection\",\"prop\":\"status\",\"width\":\"50\"}}),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"apiid\",\"align\":\"center\",\"prop\":\"apiid\",\"width\":\"120\"}}):_vm._e(),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"deployunitid\",\"align\":\"center\",\"prop\":\"deployunitid\",\"width\":\"120\"}}):_vm._e(),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"用例名\",\"align\":\"center\",\"prop\":\"casename\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"微服务\",\"align\":\"center\",\"prop\":\"deployunitname\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"API\",\"align\":\"center\",\"prop\":\"apiname\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"期望值\",\"align\":\"center\",\"prop\":\"expect\",\"width\":\"120\"}})],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.searchcase.page,\"page-size\":_vm.searchcase.size,\"total\":_vm.casetotal,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.casehandleSizeChange,\"current-change\":_vm.casehandleCurrentChange}}),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.casedialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addexecuteplantestcase($event)}}},[_vm._v(\"装载\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"warning\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplantestcase($event)}}},[_vm._v(\"取消装载\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.loadbatch,\"visible\":_vm.batchdialogFormVisible},on:{\"update:visible\":function($event){_vm.batchdialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{ref:\"tmpplanbatch\",attrs:{\"model\":_vm.tmpplanbatch}},[_c('el-form-item',{attrs:{\"label\":\"执行计划：\",\"prop\":\"batchname\",\"required\":\"\"}},[_c('el-input',{staticStyle:{\"width\":\"60%\"},attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"placeholder\":\"例如2020-10-21-tag-101\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpplanbatch.batchname),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"batchname\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"tmpplanbatch.batchname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"执行类型：\",\"prop\":\"exectype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"placeholder\":\"执行类型\"},on:{\"change\":function($event){return _vm.exectypeselectChanged($event)}},model:{value:(_vm.tmpplanbatch.exectype),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectype\", $$v)},expression:\"tmpplanbatch.exectype\"}},[_c('el-option',{attrs:{\"label\":\"立即执行\",\"value\":\"立即执行\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"某天定时\",\"value\":\"某天定时\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"每天定时\",\"value\":\"每天定时\"}})],1)],1),_vm._v(\" \"),(_vm.datevisible)?_c('div',[_c('el-form-item',{attrs:{\"label\":\"选择日期：\",\"prop\":\"exectmpdate\",\"required\":\"\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"60%\"},attrs:{\"type\":\"date\",\"format\":\"yyyy-MM-dd\",\"value-format\":\"yyyy-MM-dd\",\"placeholder\":\"选择日期\"},model:{value:(_vm.tmpplanbatch.exectmpdate),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectmpdate\", $$v)},expression:\"tmpplanbatch.exectmpdate\"}})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.timevisible)?_c('div',[_c('el-form-item',{attrs:{\"label\":\"选择时刻：\",\"prop\":\"exectime\",\"required\":\"\"}},[_c('el-time-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"picker-options\":{\n            start: '00:05',\n            step: '00:10',\n            end: '23:55'\n          },\"placeholder\":\"选择时间\"},model:{value:(_vm.tmpplanbatch.exectime),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectime\", $$v)},expression:\"tmpplanbatch.exectime\"}})],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.batchdialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.execbtnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.savebatchandexecuteplancase($event)}}},[_vm._v(\"执行\")])],1)]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"全局Header\",\"visible\":_vm.CollectionParamsFormVisible},on:{\"update:visible\":function($event){_vm.CollectionParamsFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('executeplan:add'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAddapiparamsDialog($event)}}},[_vm._v(\"添加全局Header\")]):_vm._e()],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemKey,attrs:{\"data\":_vm.paramsList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"45\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.paramgetIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"Header\",\"align\":\"center\",\"prop\":\"globalheadername\",\"width\":\"280\"}}),_vm._v(\" \"),(_vm.hasPermission('executeplan:update')  || _vm.hasPermission('executeplan:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateparamsDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:delete') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplanparam(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e()]}}],null,false,2267587065)}):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"集合前置条件\",\"visible\":_vm.ConditionFormVisible},on:{\"update:visible\":function($event){_vm.ConditionFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('testscene:scenecasecondition'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.ShowAddPlancaseconditionDialog($event)}}},[_vm._v(\"添加前置接口\")]):_vm._e()],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],attrs:{\"data\":_vm.apiconditioncaseList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"45\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.apiconditioncaseIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"前置条件名\",\"align\":\"center\",\"prop\":\"subconditionname\",\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"前置接口\",\"align\":\"center\",\"prop\":\"casename\",\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"所属集合\",\"align\":\"center\",\"prop\":\"conditionname\",\"width\":\"150\"}}),_vm._v(\" \"),(_vm.hasPermission('testscene:caseupdateapicondition')  || _vm.hasPermission('testscene:casedeleteapicondition'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('testscene:caseupdateapicondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateapiconditionDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('testscene:casedeleteapicondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removecaseapicondition(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e()]}}],null,false,3600714770)}):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.apiconditiontextMap[_vm.apiconditiondialogStatus],\"visible\":_vm.caseconditiondialogFormVisible},on:{\"update:visible\":function($event){_vm.caseconditiondialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpapicondition\",staticClass:\"small-space\",staticStyle:{\"width\":\"450px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpapicondition}},[_c('el-form-item',{attrs:{\"label\":\"前置条件名\",\"prop\":\"subconditionname\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"maxlength\":\"30\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpapicondition.subconditionname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"subconditionname\", $$v)},expression:\"tmpapicondition.subconditionname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"微服务\",\"prop\":\"deployunitname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"微服务\"},on:{\"change\":function($event){return _vm.apiconditiondeployunitselectChanged($event)}},model:{value:(_vm.tmpapicondition.deployunitname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"deployunitname\", $$v)},expression:\"tmpapicondition.deployunitname\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.deployunitList),function(depunitname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":depunitname.deployunitname,\"value\":depunitname.deployunitname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"模块:\",\"prop\":\"modelname\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"模块\"},on:{\"change\":function($event){return _vm.apiconditionmodelselectChanged($event)}},model:{value:(_vm.tmpapicondition.modelname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"modelname\", $$v)},expression:\"tmpapicondition.modelname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.apiconditionmodelList),function(model,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":model.modelname,\"value\":model.modelname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"API\",\"prop\":\"apiname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"API\"},on:{\"change\":function($event){return _vm.apiconditionapiselectChanged($event)}},model:{value:(_vm.tmpapicondition.apiname),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"apiname\", $$v)},expression:\"tmpapicondition.apiname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.apiconditionapiList),function(api,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":api.apiname,\"value\":api.apiname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"接口\",\"prop\":\"casename\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"filterable\":\"\",\"placeholder\":\"接口\"},on:{\"change\":function($event){return _vm.apiconditiontestcaseselectChanged($event)}},model:{value:(_vm.tmpapicondition.casename),callback:function ($$v) {_vm.$set(_vm.tmpapicondition, \"casename\", $$v)},expression:\"tmpapicondition.casename\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.apiconditioncaseList),function(testcase,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":testcase.casename,\"value\":testcase.casename,\"required\":\"\"}})],1)})],2)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.caseconditiondialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.apiconditiondialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"danger\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.$refs['tmpapicondition'].resetFields()}}},[_vm._v(\"重置\")]):_vm._e(),_vm._v(\" \"),(_vm.apiconditiondialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addapicondition($event)}}},[_vm._v(\"添加\")]):_vm._e(),_vm._v(\" \"),(_vm.apiconditiondialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updateapicondition($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.paramstextMap[_vm.ParamsdialogStatus],\"visible\":_vm.modifyparamdialogFormVisible},on:{\"update:visible\":function($event){_vm.modifyparamdialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpparam\",staticClass:\"small-space\",staticStyle:{\"width\":\"600px\",\"margin-left\":\"30px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpparam}},[_c('el-form-item',{attrs:{\"label\":\"全局Header:\",\"prop\":\"globalheadername\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"415px\"},attrs:{\"placeholder\":\"全局Header\"},on:{\"change\":function($event){return _vm.notexistheaderselectChanged($event)}},model:{value:(_vm.tmpparam.globalheadername),callback:function ($$v) {_vm.$set(_vm.tmpparam, \"globalheadername\", $$v)},expression:\"tmpparam.globalheadername\"}},_vm._l((_vm.globalheaderallList),function(globalheader,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":globalheader.globalheadername,\"value\":globalheader.globalheadername}})],1)}),0)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.modifyparamdialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.ParamsdialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addparams($event)}}},[_vm._v(\"添加\")]):_vm._e(),_vm._v(\" \"),(_vm.ParamsdialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updatparam($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"width\":\"840px\",\"title\":\"测试场景\",\"visible\":_vm.testscenedialogFormVisible},on:{\"update:visible\":function($event){_vm.testscenedialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.ShowAddScenceDialog}},[_vm._v(\"添加场景\")])],1)],1)],1),_vm._v(\" \"),_c('el-table',{ref:\"testplansceneTable\",attrs:{\"data\":_vm.testplansceneList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.planscenegetIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"场景名\",\"align\":\"center\",\"prop\":\"scenename\",\"width\":\"280\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"width\":\"120\",\"align\":\"center\",\"label\":\"场景顺序\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n          var row = ref.row;\nreturn [(row.edit)?[_c('el-input',{staticClass:\"edit-input\",attrs:{\"oninput\":\"value=value.replace(/[^\\\\d]/g,'')\",\"maxLength\":\"10\",\"size\":\"small\"},model:{value:(row.ordernum),callback:function ($$v) {_vm.$set(row, \"ordernum\", $$v)},expression:\"row.ordernum\"}}),_vm._v(\" \"),_c('el-button',{staticClass:\"cancel-btn\",attrs:{\"size\":\"small\",\"icon\":\"el-icon-refresh\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.cancelEdit(row)}}},[_vm._v(\"\\n              取消\\n            \")])]:_c('span',[_vm._v(_vm._s(row.ordernum))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"align\":\"center\",\"label\":\"操作\",\"width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n          var row = ref.row;\nreturn [(row.edit)?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"small\",\"icon\":\"el-icon-circle-check-outline\"},on:{\"click\":function($event){return _vm.confirmEdit(row)}}},[_vm._v(\"\\n            保存\\n          \")]):_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){row.edit=!row.edit}}},[_vm._v(\"\\n            设置顺序\\n          \")])]}}])}),_vm._v(\" \"),(_vm.hasPermission('testscene:deletecase')  || _vm.hasPermission('testscene:scenecondition'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\",\"width\":\"220\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('testscene:deletecase') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removetestscenecase(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('testscene:scenecondition') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showtestscenecaseConditionDialog(scope.$index)}}},[_vm._v(\"前置条件\")]):_vm._e()]}}],null,false,1326302761)}):_vm._e()],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.searchscene.page,\"page-size\":_vm.searchscene.size,\"total\":_vm.testplanscenetotal,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.planscenehandleSizeChange,\"current-change\":_vm.planscenehandleCurrentChange}})],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"width\":\"800px\",\"title\":\"添加场景\",\"visible\":_vm.addtestscenedialogFormVisible},on:{\"update:visible\":function($event){_vm.addtestscenedialogFormVisible=$event}}},[_c('el-table',{key:_vm.itemaddsceneKey,ref:\"addsceneTable\",attrs:{\"data\":_vm.testsceneList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.addscenehandleClickTableRow,\"selection-change\":_vm.addscenehandleSelectionChange}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.addscenegetIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"type\":\"selection\",\"prop\":\"status\",\"width\":\"50\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"场景名\",\"align\":\"center\",\"prop\":\"scenename\",\"width\":\"370\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"场景类型\",\"align\":\"center\",\"prop\":\"usetype\",\"width\":\"280\"}})],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.addsearchscene.page,\"page-size\":_vm.addsearchscene.size,\"total\":_vm.addscenetotal,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.addscenehandleSizeChange,\"current-change\":_vm.addscenehandleCurrentChange}}),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.addtestscenedialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addplantestscene($event)}}},[_vm._v(\"添加\")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-334f93cb\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/executecenter/executeplan/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-334f93cb\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/executecenter/executeplan/index.vue\n// module id = null\n// module chunks = ","import request from '@/utils/request'\n\nexport function getapicasesdebugList(params) {\n  return request({\n    url: 'globalheaderuse/',\n    method: 'get',\n    params\n  })\n}\n\nexport function searchheaderbyepid(params) {\n  return request({\n    url: '/globalheaderuse/searchheaderbyepid',\n    method: 'post',\n    data: params\n  })\n}\n\nexport function getapicasesdebugnum() {\n  return request({\n    url: 'globalheaderuse//getapicasesdebugnum',\n    method: 'get'\n  })\n}\n\nexport function getapicasesdebugallList() {\n  return request({\n    url: 'globalheaderuse//ens',\n    method: 'get'\n  })\n}\n\nexport function searchheadernotexist(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/searchnotexit',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function searchheaderexist(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/searchexit',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function addheadercasesdebug(apicases) {\n  return request({\n    url: 'globalheaderuse/addcases',\n    method: 'post',\n    data: apicases\n  })\n}\n\nexport function deleteheadercase(apicases) {\n  return request({\n    url: 'globalheaderuse/deletacases',\n    method: 'post',\n    data: apicases\n  })\n}\n\nexport function addapicasesdebug(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function updateapicasesdebug(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/detail',\n    method: 'put',\n    data: apicasesdebugForm\n  })\n}\n\nexport function removeapicasesdebug(apicasesdebugId) {\n  return request({\n    url: 'globalheaderuse/' + apicasesdebugId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/assets/globalheaderuse.js"],"sourceRoot":""}